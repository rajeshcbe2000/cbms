--Start Version  [Script Version - 0.0.1] [ReleaseVersion - 9.2.2.4]--[07-Apr-2016] -- by Sathiya
Insert into MODULE_MASTER
   (MODULE_ID, MODULE_NAME, CREATED_DT, SL_NO, STATUS)
 Values
   ('36', 'Trading', TO_DATE('05/12/2010 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 36, 'CREATED');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6110', '6110', 'Shop Master', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Shop Master');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6111', '6111', 'Trading Supplier Master', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Trading Supplier Master');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6112', '6112', 'Trading Sales', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Trading Sales');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6113', '6113', 'Trading Purchase', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Trading Purchase');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6114', '6114', 'Trading Transfer', 'APP01', 'DONE', 
    '36', 1, 'DELETED', 'Trading Transfer');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6115', '6115', 'Damage', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Damage');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6116', '6116', 'Trading Product', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Trading Product');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6117', '6117', 'Trading Stock', 'APP01', 'DONE', 
    '36', 1, 'DELETED', 'Trading Stock');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6118', '6118', 'Trading Group', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Trading Group');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6119', '6119', 'Trading Config & A/C Head Maintenance', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Trading Config & A/C Head Maintenance');
    
Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCRA6120', '6120', 'Trading Purchase Entry', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Trading Purchase Entry');

Insert into SCREEN_MASTER
   (SCREEN_ID, MENU_ID, SCREEN_NAME, APP_ID, WF_STATUS, 
    MODULE_ID, SL_NO, STATUS, SCREEN_DESC)
 Values
   ('SCR06313', '6313', 'Restore Stock', 'APP01', 'DONE', 
    '36', 1, 'CREATED', 'Restore Stock');
    
call INSERT_REPORT_GROUP('SCRA6110');
call INSERT_REPORT_GROUP('SCRA6111');
call INSERT_REPORT_GROUP('SCRA6112');
call INSERT_REPORT_GROUP('SCRA6113');
call INSERT_REPORT_GROUP('SCRA6114');
call INSERT_REPORT_GROUP('SCRA6115');
call INSERT_REPORT_GROUP('SCRA6116');
call INSERT_REPORT_GROUP('SCRA6117');
call INSERT_REPORT_GROUP('SCRA6118');
call INSERT_REPORT_GROUP('SCRA6119');
call INSERT_REPORT_GROUP('SCRA6120');
call INSERT_REPORT_GROUP('SCR06313');

SET DEFINE OFF;
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('UNIT_TYPE', 'Bag', 'Bag', 'CREATED', 'Y');   
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('UNIT_TYPE', 'Kg/Lit', 'Kg/Lit', 'CREATED', 'Y');   
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('UNIT_TYPE', 'Mtr', 'Mtr', 'CREATED', 'Y');   
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('UNIT_TYPE', 'No', 'No', 'CREATED', 'Y');   
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('UNIT_TYPE', 'Pack', 'Pack', 'CREATED', 'Y');   
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('UNIT_TYPE', 'Tin', 'Tin', 'CREATED', 'Y');
   Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('PURCHASE_TRANS_MODE', 'Purchase', 'Purchase', 'CREATED', 'Y');
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('PURCHASE_TRANS_MODE', 'Purchase Return', 'Purchase Return', 'CREATED', 'Y');
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('PURCHASE_TYPE', 'Cash', 'Cash', 'CREATED', 'Y');
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('PURCHASE_TYPE', 'Transfer', 'Transfer', 'CREATED', 'Y');
 Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('SALES_TYPE', 'Cash Sale', 'Cash Sale', 'CREATED', 'Y');
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('SALES_TYPE', 'Credit Sale', 'Credit Sale', 'CREATED', 'Y');
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('SALES_TYPE', 'Permit Sale', 'Permit Sale', 'CREATED', 'Y');
Insert into LOOKUP_MASTER
   (LOOKUP_ID, LOOKUP_REF_ID, LOOKUP_DESC, STATUS, AUTHORIZED)
 Values
   ('SALE_DAYS', 'DAYS', 'Days', 'CREATED', 'Y');
COMMIT;

SET DEFINE OFF;
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('AC_HD_PID', 0, 'TACH', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('DAMAGE_ID', 0, 'DAM', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, LAST_UPDATED, ID_LENGTH, 
    BRANCH_CODE)
 Values
   ('PURCHASE_ENTRY_ID', 0, 'PE', TO_DATE('05/16/2013 12:40:12', 'MM/DD/YYYY HH24:MI:SS'), 8, 
    '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('PURCHASE_ID', 0, 'PR', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, LAST_UPDATED, ID_LENGTH, 
    BRANCH_CODE)
 Values
   ('PURCHASE_RETURN_ENTRY_ID', 0, 'PRT', TO_DATE('05/16/2013 12:40:12', 'MM/DD/YYYY HH24:MI:SS'), 8, 
    '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, LAST_UPDATED, ID_LENGTH, 
    BRANCH_CODE)
 Values
   ('PURCHASE_RET_ID', 0, 'PRE', TO_DATE('05/16/2013 12:40:12', 'MM/DD/YYYY HH24:MI:SS'), 8, 
    '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, LAST_UPDATED, ID_LENGTH, 
    BRANCH_CODE)
 Values
   ('PV_ID', 0, 'PV', TO_DATE('03/30/2015 16:17:44', 'MM/DD/YYYY HH24:MI:SS'), 8, 
    '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('RESTORE_ID', 0, 'RE', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('SALES_ID', 0, 'SALE', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('SALES_RET_ID', 0, 'SRE', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('SHOP_ID', 0, 'SHP', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('STOCK_ID', 0, 'SID', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('SUPPLIER_ID', 0, 'SUP', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, LAST_UPDATED, ID_LENGTH, 
    BRANCH_CODE)
 Values
   ('TRANSFER_ID', 0, 'TI', TO_DATE('03/30/2015 16:17:44', 'MM/DD/YYYY HH24:MI:SS'), 8, 
    '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('TR_GROUP_ID', 0, 'GR', 8, '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, LAST_UPDATED, ID_LENGTH, 
    BRANCH_CODE)
 Values
   ('TR_PROD_ID', 0, 'TPD', TO_DATE('03/30/2015 16:17:44', 'MM/DD/YYYY HH24:MI:SS'), 8, 
    '0001');
Insert into ID_GENERATION
   (ID_KEY, CURR_VALUE, PREFIX, ID_LENGTH, BRANCH_CODE)
 Values
   ('TR_SUB_GROUP_ID', 0, 'SG', 8, '0001');
COMMIT;

DROP TABLE SHOP_MASTER CASCADE CONSTRAINTS;

CREATE TABLE SHOP_MASTER
(
  SHOP_MASTER_PID       NUMBER(11),
  SHOP_MASTER_ID        VARCHAR2(25 BYTE),
  SHOP_MASTER__NAME     VARCHAR2(200 BYTE),
  SHOP_MASTER_PLACE     VARCHAR2(200 BYTE),
  SHOP_MASTER_OP_DATE   DATE,
  SHOP_MASTER_MODE      NUMBER(2),
  SHOP_MASTER_CST       VARCHAR2(25 BYTE),
  SHOP_MASTER_TIN       VARCHAR2(25 BYTE),
  SHOP_MASTER_BRANCHID  VARCHAR2(200 BYTE),
  AC_HD_ID              VARCHAR2(4000 BYTE),
  TRANSP_AC_HD_ID       VARCHAR2(20 BYTE),
  KVAT_AC_HD_ID         VARCHAR2(50 BYTE),
  INTEREST_RATE         NUMBER(10),
  GRACE_PERIOD_DAYS     NUMBER(3),
  STATUS                VARCHAR2(32 BYTE),
  STATUS_BY             VARCHAR2(32 BYTE),
  STATUS_DT             DATE,
  AUTHORIZE_STATUS      VARCHAR2(16 BYTE),
  AUTHORIZED_BY         VARCHAR2(32 BYTE),
  AUTHORIZED_DT         DATE
);

DROP TABLE TRADING_SUPPLIER_MASTER CASCADE CONSTRAINTS;

CREATE TABLE TRADING_SUPPLIER_MASTER
(
  SUPPLIERID              VARCHAR2(12 BYTE),
  BRANCH_CODE             VARCHAR2(16 BYTE),
  CUSTOMER_ID             VARCHAR2(32 BYTE),
  SUNDRY_CREDITORS_AC_NO  VARCHAR2(32 BYTE),
  PURCHASE_AC_NO          VARCHAR2(32 BYTE),
  TINNO                   VARCHAR2(16 BYTE),
  CST                     VARCHAR2(16 BYTE),
  KGST                    VARCHAR2(16 BYTE),
  CREATED_DT              DATE,
  PHONE                   VARCHAR2(16 BYTE),
  STATUS                  VARCHAR2(16 BYTE),
  STATUS_BY               VARCHAR2(32 BYTE),
  STATUS_DT               DATE,
  AUTHORIZED_STATUS       VARCHAR2(16 BYTE),
  AUTHORIZED_BY           VARCHAR2(32 BYTE),
  AUTHORIZED_DT           DATE,
  ACTIVE                  VARCHAR2(1 BYTE)
);

DROP TABLE TRADING_GROUP_MASTER CASCADE CONSTRAINTS;

CREATE TABLE TRADING_GROUP_MASTER
(
  GROUP_ID           VARCHAR2(16 BYTE),
  GROUP_NAME         VARCHAR2(128 BYTE),
  BRANCH_CODE        VARCHAR2(16 BYTE),
  STATUS             VARCHAR2(16 BYTE),
  STATUS_BY          VARCHAR2(32 BYTE),
  STATUS_DT          DATE,
  AUTHORIZED_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY      VARCHAR2(32 BYTE),
  AUTHORIZED_DT      DATE
);

DROP TABLE TRADING_SUB_GROUP CASCADE CONSTRAINTS;

CREATE TABLE TRADING_SUB_GROUP
(
  GROUP_ID           VARCHAR2(16 BYTE),
  SUB_GROUP_ID       VARCHAR2(16 BYTE),
  SUB_GROUP_NAME     VARCHAR2(128 BYTE),
  STATUS             VARCHAR2(16 BYTE),
  AUTHORIZED_STATUS  VARCHAR2(20 BYTE),
  CREATED_DT         DATE,
  ACTIVE             VARCHAR2(1 BYTE)
);

DROP TABLE TRADING_PRODUCT CASCADE CONSTRAINTS;

CREATE TABLE TRADING_PRODUCT
(
  PRODUCT_ID        VARCHAR2(25 BYTE),
  PRODUCT_NAME      VARCHAR2(255 BYTE),
  PRODUCT_DES       VARCHAR2(255 BYTE),
  GROUP_ID          VARCHAR2(25 BYTE),
  SUB_GROUP_ID      VARCHAR2(25 BYTE),
  TAX_MODE          VARCHAR2(20 BYTE),
  TAX_PERCENTAGE    NUMBER,
  UNITTYPE          VARCHAR2(25 BYTE),
  REORDER_LEVEL     NUMBER(15,3),
  CREATED_DT        DATE,
  STATUS            VARCHAR2(16 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(32 BYTE),
  AUTHORIZED_DT     DATE,
  NEW_PRODUCT       VARCHAR2(20 BYTE)
);

DROP TABLE PURCHASE_ENTRY CASCADE CONSTRAINTS;

CREATE TABLE PURCHASE_ENTRY
(
  PURCHASE_ENTRY_ID  VARCHAR2(100 BYTE),
  SUPPLIER_ID        VARCHAR2(20 BYTE),
  TRANS_TYPE         VARCHAR2(20 BYTE),
  TRANS_MODE         VARCHAR2(20 BYTE),
  CREDIT_FROM        VARCHAR2(1 BYTE),
  PROD_TYPE          VARCHAR2(20 BYTE),
  PROD_ID            VARCHAR2(16 BYTE),
  AC_HEAD            VARCHAR2(20 BYTE),
  CASH_AMT           NUMBER(16,2),
  PURCHASE_COMM_AMT  NUMBER(16,2),
  PURCHASE_RET_AMT   NUMBER(16,2),
  SUNDRY_AMT         NUMBER(16,2),
  CHEQUE_AMT         NUMBER(16,2),
  TOTAL_AMT          NUMBER(16,2),
  CHEQUE_NO          VARCHAR2(15 BYTE),
  NARRATION          VARCHAR2(100 BYTE),
  STATUS             VARCHAR2(40 BYTE),
  STATUS_BY          VARCHAR2(100 BYTE),
  STATUS_DT          DATE,
  AUTHORIZE_STATUS   VARCHAR2(30 BYTE),
  AUTHORIZED_BY      VARCHAR2(40 BYTE),
  AUTHORIZED_DT      DATE,
  PURCHASE_RET_ID    VARCHAR2(25 BYTE)
);

DROP TABLE TRADING_PURCHASE CASCADE CONSTRAINTS;

CREATE TABLE TRADING_PURCHASE
(
  PURCHASE_NO       VARCHAR2(25 BYTE),
  SUPPLIER          VARCHAR2(200 BYTE),
  VOUCHER_DT        DATE,
  VOUCHER_NO        VARCHAR2(25 BYTE),
  PURCHASE_TYPE     VARCHAR2(50 BYTE),
  BANK_AC_HEAD      VARCHAR2(50 BYTE),
  INDENT_NO         VARCHAR2(50 BYTE),
  BRANCH_CODE       VARCHAR2(50 BYTE),
  PURCHASE_RETURN   VARCHAR2(50 BYTE),
  PURCHASE          VARCHAR2(50 BYTE),
  TAX_TOTAL         VARCHAR2(50 BYTE),
  TP_TOTAL          VARCHAR2(50 BYTE),
  DISCOUNT_TOTAL    VARCHAR2(50 BYTE),
  TOTAL             VARCHAR2(50 BYTE),
  PURCHASE_AMT      VARCHAR2(50 BYTE),
  SALES_AMT         VARCHAR2(50 BYTE),
  STATUS            VARCHAR2(32 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(32 BYTE),
  AUTHORIZED_DT     DATE
);

DROP TABLE TRADING_PURCHASE_DETAILS CASCADE CONSTRAINTS;

CREATE TABLE TRADING_PURCHASE_DETAILS
(
  PURCHASE_NO     VARCHAR2(25 BYTE),
  SL_NO           VARCHAR2(25 BYTE),
  PRODUCT_NAME    VARCHAR2(120 BYTE),
  UNIT_TYPE       VARCHAR2(25 BYTE),
  BILL_NO         VARCHAR2(25 BYTE),
  BILL_DT         DATE,
  VOUCHER_NO      VARCHAR2(25 BYTE),
  TAX             VARCHAR2(20 BYTE),
  PURCHASE_PRICE  VARCHAR2(50 BYTE),
  MRP             VARCHAR2(50 BYTE),
  SALES_PRICE     VARCHAR2(50 BYTE),
  STK_QTY         VARCHAR2(200 BYTE),
  QTY             VARCHAR2(200 BYTE),
  TOT_QTY         VARCHAR2(200 BYTE),
  MFG_BATCH_ID    VARCHAR2(50 BYTE),
  DISCOUNT        VARCHAR2(50 BYTE),
  TOTAL           VARCHAR2(50 BYTE),
  EXPIRY_DT       DATE,
  PARTICULARS     VARCHAR2(25 BYTE),
  STATUS          VARCHAR2(32 BYTE)
);

DROP TABLE TRADING_STOCK CASCADE CONSTRAINTS;

CREATE TABLE TRADING_STOCK
(
  STOCK_ID              VARCHAR2(25 BYTE),
  STOCK_TYPE            VARCHAR2(25 BYTE),
  STOCK_SALES_PRICE     VARCHAR2(25 BYTE),
  STOCK_PURCHASE_PRICE  VARCHAR2(25 BYTE),
  PRODUCT_ID            VARCHAR2(25 BYTE),
  STOCK_QUANT           VARCHAR2(25 BYTE),
  SALES_TAX             VARCHAR2(25 BYTE),
  PRO_NAME              VARCHAR2(255 BYTE),
  LOOSE_QTY             VARCHAR2(25 BYTE),
  EXPIRY_DT             DATE,
  TRNSCHARGE            VARCHAR2(25 BYTE),
  STOCK_MRP             VARCHAR2(25 BYTE),
  STATUS                VARCHAR2(32 BYTE),
  STATUS_BY             VARCHAR2(32 BYTE),
  STATUS_DT             DATE,
  AUTHORIZE_STATUS      VARCHAR2(16 BYTE),
  AUTHORIZED_BY         VARCHAR2(32 BYTE),
  AUTHORIZED_DT         DATE
);

DROP TABLE TRADING_PURCHASE_RETURN CASCADE CONSTRAINTS;

CREATE TABLE TRADING_PURCHASE_RETURN
(
  PURCHASE_RET_NO   VARCHAR2(25 BYTE),
  SUPPLIER_NAME     VARCHAR2(200 BYTE),
  PURCHASE_NO       VARCHAR2(25 BYTE),
  BILL_NO           VARCHAR2(25 BYTE),
  PURCHASE_TYPE     VARCHAR2(50 BYTE),
  CREATED_DT        DATE,
  PURCHASE_DT       DATE,
  BILL_DT           DATE,
  BANK_AC_HEAD      VARCHAR2(50 BYTE),
  STATUS            VARCHAR2(32 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(32 BYTE),
  AUTHORIZED_DT     DATE
);

DROP TABLE TRADING_PURCHASE_RET_DETAILS CASCADE CONSTRAINTS;

CREATE TABLE TRADING_PURCHASE_RET_DETAILS
(
  PURCHASE_RET_NO  VARCHAR2(25 BYTE),
  SL_NO            VARCHAR2(25 BYTE),
  PURCHASE_NO      VARCHAR2(25 BYTE),
  PRODUCT_NAME     VARCHAR2(50 BYTE),
  UNIT_TYPE        VARCHAR2(25 BYTE),
  TAX              VARCHAR2(20 BYTE),
  PURCHASE_PRICE   VARCHAR2(50 BYTE),
  SALES_PRICE      VARCHAR2(50 BYTE),
  PURCHASE_QTY     VARCHAR2(200 BYTE),
  AVAIL_QTY        VARCHAR2(200 BYTE),
  RETURN_QTY       VARCHAR2(200 BYTE),
  PURCH_TOTAL      VARCHAR2(25 BYTE),
  RETURN_TOTAL     VARCHAR2(25 BYTE),
  STATUS           VARCHAR2(32 BYTE),
  MRP              VARCHAR2(20 BYTE),
  EXPIRY_DT        DATE
);

DROP TABLE TRADING_SALES_MASTER CASCADE CONSTRAINTS;

CREATE TABLE TRADING_SALES_MASTER
(
  SALES_NO          VARCHAR2(32 BYTE),
  SALES_TYPE        VARCHAR2(32 BYTE),
  SALES_DATE        DATE,
  PLACE             VARCHAR2(32 BYTE),
  TYPE              VARCHAR2(32 BYTE),
  EMP_NO            VARCHAR2(20 BYTE),
  EMP_NAME          VARCHAR2(128 BYTE),
  BARCODE_NUMBER    VARCHAR2(20 BYTE),
  PROD_ID           VARCHAR2(20 BYTE),
  PROD_DESC         VARCHAR2(32 BYTE),
  ACC_NO            VARCHAR2(20 BYTE),
  INSTALLMENT       VARCHAR2(1 BYTE),
  INSTALLMENT_NO    VARCHAR2(20 BYTE),
  INSTALLMENT_AMT   NUMBER(35,2),
  FIRST_INST_AMT    NUMBER(35,2),
  INST_DT           DATE,
  GRAND_TOTAL       NUMBER(35,2),
  STATUS            VARCHAR2(16 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(32 BYTE),
  AUTHORIZED_DT     DATE,
  TRANS_CHARGES     NUMBER(35,2),
  ADJUST            NUMBER(35,2),
  DISCOUNT          NUMBER(35,2),
  DISC_AMT          NUMBER(35,2)
);

DROP TABLE TRADING_SALES_MASTER_DETAILS CASCADE CONSTRAINTS;

CREATE TABLE TRADING_SALES_MASTER_DETAILS
(
  SALES_NO        VARCHAR2(32 BYTE),
  PROD_NAME       VARCHAR2(32 BYTE),
  RATE            NUMBER(35,2),
  UNIT_TYPE       VARCHAR2(32 BYTE),
  QTY             NUMBER(35,2),
  MRP             VARCHAR2(50 BYTE),
  TAX             VARCHAR2(32 BYTE),
  TAXABLE_AMOUNT  VARCHAR2(32 BYTE),
  TRANS_CHARGES   NUMBER(35,2),
  CASH            NUMBER(35,2),
  ADJUST          NUMBER(35,2),
  DISCOUNT        NUMBER(35,2),
  TOTAL           NUMBER(35,2),
  STATUS          VARCHAR2(32 BYTE),
  STOCK_ID        VARCHAR2(20 BYTE)
);

DROP TABLE TRADING_SALES_RETURN CASCADE CONSTRAINTS;

CREATE TABLE TRADING_SALES_RETURN
(
  SALES_RET_NO      VARCHAR2(25 BYTE),
  SALES_NO          VARCHAR2(25 BYTE),
  CUSTOMER_ID       VARCHAR2(25 BYTE),
  SALES_TYPE        VARCHAR2(25 BYTE),
  SALES_DT          DATE,
  BANK_AC_HEAD      VARCHAR2(50 BYTE),
  SALES_TOTAL       VARCHAR2(25 BYTE),
  RET_TOTAL         VARCHAR2(25 BYTE),
  STATUS            VARCHAR2(32 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(32 BYTE),
  AUTHORIZED_DT     DATE
);

DROP TABLE TRADING_SALES_RET_DETAILS CASCADE CONSTRAINTS;

CREATE TABLE TRADING_SALES_RET_DETAILS
(
  SALES_RET_NO    VARCHAR2(25 BYTE),
  SL_NO           VARCHAR2(25 BYTE),
  SALES_NO        VARCHAR2(25 BYTE),
  PRODUCT_NAME    VARCHAR2(50 BYTE),
  UNIT_TYPE       VARCHAR2(25 BYTE),
  RATE            VARCHAR2(50 BYTE),
  TAX             VARCHAR2(20 BYTE),
  TAXABLE_AMOUNT  VARCHAR2(50 BYTE),
  QTY             VARCHAR2(200 BYTE),
  RETURN_QTY      VARCHAR2(200 BYTE),
  SALES_TOTAL     VARCHAR2(25 BYTE),
  RETURN_TOTAL    VARCHAR2(25 BYTE),
  STATUS          VARCHAR2(32 BYTE),
  STOCK_ID        VARCHAR2(20 BYTE)
);

DROP TABLE TRADING_DAMAGE CASCADE CONSTRAINTS;

CREATE TABLE TRADING_DAMAGE
(
  DAMAGE_ID         VARCHAR2(25 BYTE),
  SL_NO             VARCHAR2(25 BYTE),
  PROD_ID           VARCHAR2(25 BYTE),
  STOCK_ID          VARCHAR2(25 BYTE),
  PROD_NAME         VARCHAR2(35 BYTE),
  UNIT_TYPE         VARCHAR2(25 BYTE),
  PURCHASE_PRICE    NUMBER(16,2),
  SALES_PRICE       NUMBER(16,2),
  DAMAGE_QTY        NUMBER(4),
  DAMAGE_DT         DATE,
  AVAIL_QTY         NUMBER(4),
  TOTAL_AMT         NUMBER(16,2),
  STATUS            VARCHAR2(32 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(32 BYTE),
  AUTHORIZED_DT     DATE
);

DROP TABLE TRADING_AC_HD CASCADE CONSTRAINTS;

CREATE TABLE TRADING_AC_HD
(
  ACCOUNTHEAD_ID    VARCHAR2(16 BYTE),
  CASH_ON_HAND      VARCHAR2(16 BYTE),
  PURCHASE          VARCHAR2(16 BYTE),
  SALES             VARCHAR2(16 BYTE),
  PURCHASE_RETURN   VARCHAR2(16 BYTE),
  SALES_RETURN      VARCHAR2(16 BYTE),
  DAMAGES           VARCHAR2(16 BYTE),
  STOCK             VARCHAR2(16 BYTE),
  PURCHASE_VAT      VARCHAR2(16 BYTE),
  SALES_VAT         VARCHAR2(16 BYTE),
  SA_RECEIVABLE     VARCHAR2(16 BYTE),
  SL_PAYABLE        VARCHAR2(16 BYTE),
  STATUS            VARCHAR2(16 BYTE),
  STATUS_BY         VARCHAR2(16 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(16 BYTE),
  AUTHORIZED_DT     DATE,
  SALES_RET_BEFORE  VARCHAR2(16 BYTE),
  PERIOD            VARCHAR2(16 BYTE)
);

CREATE TABLE RESTORE_STOCK
(
  RESTORE_ID        VARCHAR2(25 BYTE),
  FROM_PROD_ID      VARCHAR2(25 BYTE),
  TO_PROD_ID        VARCHAR2(25 BYTE),
  FROM_PV_ID        VARCHAR2(25 BYTE),
  TO_PV_ID          VARCHAR2(25 BYTE),
  FROM_DT           DATE,
  TO_DT             DATE,
  STATUS            VARCHAR2(32 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(32 BYTE),
  AUTHORIZED_DT     DATE
);

CREATE TABLE RESTORE_STOCK_DETAILS
(
  RESTORE_ID        VARCHAR2(25 BYTE),
  PV_ID             VARCHAR2(25 BYTE),
  SL_NO             VARCHAR2(25 BYTE),
  PROD_ID           VARCHAR2(25 BYTE),
  STOCK_ID          VARCHAR2(25 BYTE),
  PROD_NAME         VARCHAR2(35 BYTE),
  UNIT_TYPE         VARCHAR2(25 BYTE),
  PV_QTY            NUMBER(4),
  AVAIL_QTY         NUMBER(4),
  DIFF              NUMBER(4),
  RESTORE_QTY       NUMBER(4),
  RESTORE_AMOUNT    NUMBER(16,2),
  STATUS            VARCHAR2(32 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE
);

CREATE TABLE STOCK_PHYSICAL_VERIFICATION
(
  PV_ID             VARCHAR2(25 BYTE),
  SL_NO             VARCHAR2(25 BYTE),
  PROD_ID           VARCHAR2(25 BYTE),
  STOCK_ID          VARCHAR2(25 BYTE),
  PROD_NAME         VARCHAR2(35 BYTE),
  UNIT_TYPE         VARCHAR2(25 BYTE),
  PV_QTY            NUMBER(4),
  AVAIL_QTY         NUMBER(4),
  DIFF              NUMBER(4),
  RESTORE_QTY       NUMBER(4),
  BALANCE_QTY       NUMBER(4),
  REMARKS           VARCHAR2(25 BYTE),
  PV_DT             DATE,
  STATUS            VARCHAR2(32 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(32 BYTE),
  AUTHORIZED_DT     DATE,
  TOTAL_AMT         NUMBER(16,2)
);

CREATE TABLE TRADING_TRANSFER
(
  TRANSFER_ID       VARCHAR2(25 BYTE),
  FROM_BRANCH       VARCHAR2(16 BYTE),
  TO_BRANCH         VARCHAR2(16 BYTE),
  AC_HEAD           VARCHAR2(16 BYTE),
  SL_NO             VARCHAR2(25 BYTE),
  PROD_ID           VARCHAR2(25 BYTE),
  STOCK_ID          VARCHAR2(25 BYTE),
  PROD_NAME         VARCHAR2(35 BYTE),
  UNIT_TYPE         VARCHAR2(25 BYTE),
  AVAIL_QTY         NUMBER(4),
  TRANSFER_QTY      NUMBER(4),
  TOTAL_AMT         NUMBER(16,2),
  TRANSFER_DT       DATE,
  STATUS            VARCHAR2(32 BYTE),
  STATUS_BY         VARCHAR2(32 BYTE),
  STATUS_DT         DATE,
  AUTHORIZE_STATUS  VARCHAR2(16 BYTE),
  AUTHORIZED_BY     VARCHAR2(32 BYTE),
  AUTHORIZED_DT     DATE
);

DROP TABLE RECOVERY_PARAMETERS CASCADE CONSTRAINTS;

CREATE TABLE RECOVERY_PARAMETERS
(
  FIRST_DAY  VARCHAR2(32 BYTE),
  LAST_DAY   VARCHAR2(32 BYTE),
  STATUS     VARCHAR2(32 BYTE),
  STATUS_BY  VARCHAR2(32 BYTE),
  STATUS_DT  DATE,
  SUSPENSE_PRODUCT_ID VARCHAR2(32 BYTE) , 
  MDS_SUSPENSE_PROD_ID VARCHAR2(32 BYTE), 
  RD_SUSPENSE_PROD_ID VARCHAR2(32 BYTE), 
  PURCHASE_AC_HEAD VARCHAR2(32 BYTE),
  PURCHASE_COMMISSION_AC_HEAD VARCHAR2(32 BYTE),
  SUNDRY_CREDITORS_AC_HEAD VARCHAR2(32 BYTE),
  PURCHASE_RETURN_AC_HEAD VARCHAR2(32 BYTE), 
  TRADE_EXPENSE_ACHD VARCHAR2(32 BYTE),
  GRACE_PERIOD VARCHAR2(32 BYTE)
);

SET DEFINE OFF;
Insert into RECOVERY_PARAMETERS
   (FIRST_DAY, LAST_DAY, STATUS, STATUS_BY, STATUS_DT, 
    SUSPENSE_PRODUCT_ID, MDS_SUSPENSE_PROD_ID, RD_SUSPENSE_PROD_ID, PURCHASE_AC_HEAD, PURCHASE_COMMISSION_AC_HEAD, 
    SUNDRY_CREDITORS_AC_HEAD, PURCHASE_RETURN_AC_HEAD, TRADE_EXPENSE_ACHD, GRACE_PERIOD)
 Values
   ('10', '11', 'UPDATED', 'admin', TO_DATE('10/31/2012 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), 
    '619', '612', '611', '5010001001', '4004001002', 
    '2011001001', '4004001005', '5011001007', '7');
COMMIT;

--End Version  [Script Version - 0.0.1] [ReleaseVersion - 9.2.2.4]--[07-Apr-2016] -- by Sathiya
