/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
 * 
 * ExchangeRateDialogUI.java
 *
 * Created on May 5, 2004, 4:22 PM
 */

package com.see.truetransact.clientutil;

/**
 *
 * @author  bala
 */
public class ExchangeRateDialogUI extends com.see.truetransact.uicomponent.CDialog {
    
    /** Creates new form ExchangeRateDialogUI */
    public ExchangeRateDialogUI(java.util.HashMap map) {
        initComponents();
        fillFields(map);
    }
    
    /** Creates new form ExchangeRateDialogUI */
    public ExchangeRateDialogUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    
    private void fillFields(java.util.HashMap map) {
        setTitle("Calculation");
        txtDiaCrossCcyRate.setText((String) map.get("INRATE"));
        txtDiaCrossCcyRate1.setText((String) map.get("OUTRATE"));
        txtDiaTransAmt.setText((String) map.get("AMOUNT"));
        txtInputCurrency.setText((String) map.get("INPUT"));
        txtMainCurrency.setText((String) map.get("MAINCURRENCY"));
        txtOutputCurrency.setText((String) map.get("OUTPUT"));
        txtTransactionType.setText((String) map.get("TRANSTYPE"));
        txtDiaTotAmt.setText((String) map.get("TOTALAMOUNT"));
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        panDiaCalc = new com.see.truetransact.uicomponent.CPanel();
        lblDiaPaidAmt = new com.see.truetransact.uicomponent.CLabel();
        txtDiaTransAmt = new com.see.truetransact.uicomponent.CTextField();
        lblDiaCrossCcyRate = new com.see.truetransact.uicomponent.CLabel();
        txtDiaCrossCcyRate = new com.see.truetransact.uicomponent.CTextField();
        lblDiaTotAmt = new com.see.truetransact.uicomponent.CLabel();
        txtDiaTotAmt = new com.see.truetransact.uicomponent.CTextField();
        cSeparator1 = new com.see.truetransact.uicomponent.CSeparator();
        cSeparator2 = new com.see.truetransact.uicomponent.CSeparator();
        lblInputCurrency = new com.see.truetransact.uicomponent.CLabel();
        txtInputCurrency = new com.see.truetransact.uicomponent.CTextField();
        lblOutputCurrency = new com.see.truetransact.uicomponent.CLabel();
        txtOutputCurrency = new com.see.truetransact.uicomponent.CTextField();
        lblTransactionType = new com.see.truetransact.uicomponent.CLabel();
        txtTransactionType = new com.see.truetransact.uicomponent.CTextField();
        lblMainCurrency = new com.see.truetransact.uicomponent.CLabel();
        txtMainCurrency = new com.see.truetransact.uicomponent.CTextField();
        lblDiaCrossCcyRate1 = new com.see.truetransact.uicomponent.CLabel();
        txtDiaCrossCcyRate1 = new com.see.truetransact.uicomponent.CTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        panDiaCalc.setLayout(new java.awt.GridBagLayout());

        panDiaCalc.setBorder(new javax.swing.border.TitledBorder(" Calculation "));
        panDiaCalc.setMinimumSize(new java.awt.Dimension(213, 149));
        lblDiaPaidAmt.setText("Transaction Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panDiaCalc.add(lblDiaPaidAmt, gridBagConstraints);

        txtDiaTransAmt.setEditable(false);
        txtDiaTransAmt.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        panDiaCalc.add(txtDiaTransAmt, gridBagConstraints);

        lblDiaCrossCcyRate.setText("Cross Ccy Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panDiaCalc.add(lblDiaCrossCcyRate, gridBagConstraints);

        txtDiaCrossCcyRate.setEditable(false);
        txtDiaCrossCcyRate.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        panDiaCalc.add(txtDiaCrossCcyRate, gridBagConstraints);

        lblDiaTotAmt.setText("Total Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panDiaCalc.add(lblDiaTotAmt, gridBagConstraints);

        txtDiaTotAmt.setEditable(false);
        txtDiaTotAmt.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        panDiaCalc.add(txtDiaTotAmt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        panDiaCalc.add(cSeparator1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        panDiaCalc.add(cSeparator2, gridBagConstraints);

        lblInputCurrency.setText("Input Currency");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panDiaCalc.add(lblInputCurrency, gridBagConstraints);

        txtInputCurrency.setEditable(false);
        txtInputCurrency.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        panDiaCalc.add(txtInputCurrency, gridBagConstraints);

        lblOutputCurrency.setText("Output Currency");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panDiaCalc.add(lblOutputCurrency, gridBagConstraints);

        txtOutputCurrency.setEditable(false);
        txtOutputCurrency.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        panDiaCalc.add(txtOutputCurrency, gridBagConstraints);

        lblTransactionType.setText("Transaction Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panDiaCalc.add(lblTransactionType, gridBagConstraints);

        txtTransactionType.setEditable(false);
        txtTransactionType.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        panDiaCalc.add(txtTransactionType, gridBagConstraints);

        lblMainCurrency.setText("Main Currency");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panDiaCalc.add(lblMainCurrency, gridBagConstraints);

        txtMainCurrency.setEditable(false);
        txtMainCurrency.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        panDiaCalc.add(txtMainCurrency, gridBagConstraints);

        lblDiaCrossCcyRate1.setText("Cross Ccy Rate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panDiaCalc.add(lblDiaCrossCcyRate1, gridBagConstraints);

        txtDiaCrossCcyRate1.setEditable(false);
        txtDiaCrossCcyRate1.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 2, 4);
        panDiaCalc.add(txtDiaCrossCcyRate1, gridBagConstraints);

        getContentPane().add(panDiaCalc, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new ExchangeRateDialogUI(new javax.swing.JFrame(), true).show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CSeparator cSeparator1;
    private com.see.truetransact.uicomponent.CSeparator cSeparator2;
    private com.see.truetransact.uicomponent.CLabel lblDiaCrossCcyRate;
    private com.see.truetransact.uicomponent.CLabel lblDiaCrossCcyRate1;
    private com.see.truetransact.uicomponent.CLabel lblDiaPaidAmt;
    private com.see.truetransact.uicomponent.CLabel lblDiaTotAmt;
    private com.see.truetransact.uicomponent.CLabel lblInputCurrency;
    private com.see.truetransact.uicomponent.CLabel lblMainCurrency;
    private com.see.truetransact.uicomponent.CLabel lblOutputCurrency;
    private com.see.truetransact.uicomponent.CLabel lblTransactionType;
    private com.see.truetransact.uicomponent.CPanel panDiaCalc;
    private com.see.truetransact.uicomponent.CTextField txtDiaCrossCcyRate;
    private com.see.truetransact.uicomponent.CTextField txtDiaCrossCcyRate1;
    private com.see.truetransact.uicomponent.CTextField txtDiaTotAmt;
    private com.see.truetransact.uicomponent.CTextField txtDiaTransAmt;
    private com.see.truetransact.uicomponent.CTextField txtInputCurrency;
    private com.see.truetransact.uicomponent.CTextField txtMainCurrency;
    private com.see.truetransact.uicomponent.CTextField txtOutputCurrency;
    private com.see.truetransact.uicomponent.CTextField txtTransactionType;
    // End of variables declaration//GEN-END:variables
    
}
