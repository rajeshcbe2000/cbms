<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="LoanProductMap">

	<!-- Use LoanProductAccountTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
        <!-- Added two fields by nithya -->     
    <mapped-statement name="insertLoanProductAccountTO" inline-parameters="true">
        INSERT INTO LOANS_PRODUCT
        (PROD_ID, PROD_DESC, ACCT_HEAD, BEHAVES_LIKE, REMARKS, STATUS, AUTHORIZE_STATUS, AUTHORIZE_USER, AUTHORIZE_DT, BASE_CURRENCY, CREATED_BY, CREATED_DT, STATUS_BY, STATUS_DT, AUTHORIZE_REMARK,SHARE_LINKING,EXCLUDE_SC_ST,CLOSE_ACC_FOR_TOD,DEFAULT_PROD,GROUP_LOAN,REPAYMENT_TYPE,REPAYMENT_FREQ,
        GOLD_STOCK_PHOTO_REQUIRED,BLOCK_IF_LIMIT_EXCEEDS) VALUES (
        #prodId:VARCHAR#, #prodDesc:VARCHAR#, #acctHead:VARCHAR#, #behavesLike:VARCHAR#, #remarks:VARCHAR#, #status:VARCHAR#, #authorizeStatus:VARCHAR#, #authorizeUser:VARCHAR#, #authorizeDt:DATE#, #baseCurrency:VARCHAR#, #createdBy:VARCHAR#, #createdDt:TIMESTAMP#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #authorizeRemark:VARCHAR#,#shareLink:VARCHAR#,#excludeScSt:VARCHAR#,#excludeTOD:VARCHAR#,#default_Prod:VARCHAR#,#groupLoan:VARCHAR#,#repaymentType:VARCHAR#,#repaymentFreq:NUMERIC#,
        #goldStockPhotoStored:VARCHAR#,#blockIntPostIfLimitExceeds:VARCHAR#)
    </mapped-statement>

	<!-- Use LoanProductAccountTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
                    
    <dynamic-mapped-statement name="viewLoanProduct" result-class="java.util.LinkedHashMap">
        SELECT PROD_ID as "PROD_ID", PROD_DESC as "Product Description",ACCT_HEAD as "Account Head" 
        FROM LOANS_PRODUCT 
        WHERE (STATUS != 'DELETED' OR STATUS IS NULL)
        AND (AUTHORIZE_STATUS != 'REJECTED' OR AUTHORIZE_STATUS IS NULL)
         <dynamic>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="PROD_ID">
                    UPPER(PROD_ID) LIKE UPPER('%$PROD_ID$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="Product Description">
                    UPPER(PROD_DESC) LIKE UPPER('%$Product Description$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="Account Head">
                    UPPER(ACCT_HEAD) LIKE UPPER('%$Account Head$%')
                </isNotNull>
            </isParameterPresent>
            </dynamic>
    </dynamic-mapped-statement>
     <!-- Editted by nithya -->  
    <mapped-statement name="updateLoanProductAccountTO" inline-parameters="true">
        UPDATE LOANS_PRODUCT SET 
<!--		PROD_ID = #prodId:VARCHAR#,-->
        PROD_DESC = #prodDesc:VARCHAR#,
        ACCT_HEAD = #acctHead:VARCHAR#,
        BEHAVES_LIKE = #behavesLike:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#,
        SHARE_LINKING =  #shareLink:VARCHAR#,
        EXCLUDE_SC_ST =  #excludeScSt:VARCHAR#,
        CLOSE_ACC_FOR_TOD =  #excludeTOD:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
        GROUP_LOAN = #groupLoan:VARCHAR#,
<!--		AUTHORIZE_USER = #authorizeUser:VARCHAR#,
		AUTHORIZE_DT = #authorizeDt:DATE#,
                CREATED_BY = #createdBy:VARCHAR#,
		CREATED_DT = #createdDt:DATE#,
                AUTHORIZE_REMARK = #authorizeRemark:VARCHAR#,-->
        BASE_CURRENCY = #baseCurrency:VARCHAR#,
        REPAYMENT_TYPE = #repaymentType:VARCHAR#,
        REPAYMENT_FREQ = #repaymentFreq:NUMBER#,
        GOLD_STOCK_PHOTO_REQUIRED = #goldStockPhotoStored:VARCHAR#,
        BLOCK_IF_LIMIT_EXCEEDS = #blockIntPostIfLimitExceeds:VARCHAR#
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use LoanProductAccountTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductAccountTO" inline-parameters="true">
<!--		DELETE FROM LOANS_PRODUCT 
		WHERE PROD_ID = #prodId# -->
        UPDATE LOANS_PRODUCT SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#
        WHERE PROD_ID = #prodId:VARCHAR#
                
    </mapped-statement>
              

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductAccountTO object (JavaBean) properties -->
    <result-map name="getLoanProductAccountTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductAccountTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="prodDesc" column="PROD_DESC"/>
        <property name="groupLoan" column="GROUP_LOAN"/>
        <property name="acctHead" column="ACCT_HEAD"/>
        <property name="behavesLike" column="BEHAVES_LIKE"/>
        <property name="remarks" column="REMARKS"/>
        <property name="status" column="STATUS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="authorizeUser" column="AUTHORIZE_USER"/>
        <property name="authorizeDt" column="AUTHORIZE_DT"/>
        <property name="baseCurrency" column="BASE_CURRENCY"/>
        <property name="createdBy" column="CREATED_BY"/>
        <property name="createdDt" column="CREATED_DT"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizeRemark" column="AUTHORIZE_REMARK"/>
        <property name="shareLink" column="SHARE_LINKING"/>
        <property name="excludeScSt" column="EXCLUDE_SC_ST"/>
        <property name="excludeTOD" column="CLOSE_ACC_FOR_TOD"/>
        <property name="default_Prod" column="DEFAULT_PROD"/>
        <!-- Added by nithya-->
        <property name="repaymentType" column ="REPAYMENT_TYPE"/>
        <property name="repaymentFreq" column ="REPAYMENT_FREQ"/> 
        <property name="goldStockPhotoStored" column ="GOLD_STOCK_PHOTO_REQUIRED"/>
        <property name="blockIntPostIfLimitExceeds" column ="BLOCK_IF_LIMIT_EXCEEDS"/>
    </result-map>
               
    <mapped-statement name="getSelectLoanProductAccountTO" result-map="getLoanProductAccountTOResult" >
        SELECT * FROM LOANS_PRODUCT 
        WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>
        
<!-- =================================================================================== -->
<!-- Use LoanProductAccountParamTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertLoanProductAccountParamTO" inline-parameters="true">
        INSERT INTO LOANS_PROD_ACPARAM
        (PROD_ID, NUMBER_PATTERN, LAST_AC_NO, LIMIT_DEF_ALLOWED, STAFF_AC_OPENED, DEBIT_INT_CLEARINGAPPL, NUMBER_PATTERN_SUFFIX,AUCTION_AMT_ALLOWED,
        RENEW_WITH_OLDAMT,RENEW_THROUGH_CASH,RENEW_WITH_MARKET_RATE,RENEW_WITH_NEW_INTRATE,INTEREST_ON_MATURITY,IS_ADDED_PRINCIPAL_FIRST,DISB_AFTR_MORA_PERD,MAX_AMT_OF_CASH_PAYMENT,EMI_IN_SIMPLEINTEREST,IS_LOANCLOSING_ALLOWED
        ,SUSPENSE_CREDIT_PROD_ID,SUSPENSE_DEBIT_PROD_ID,IS_INTEREST_PAID_FIRST, INTEREST_PAID_FREQ_DAYS, SALARY_RECOVERY,IS_INTEREST_LOAN_DUE,IS_INT_PERIOD_SLAB_CALC) VALUES (
        #prodId:VARCHAR#, #numberPattern:VARCHAR#, #lastAcNo:VARCHAR#, #limitDefAllowed:VARCHAR#, #staffAcOpened:VARCHAR#, #debitIntClearingappl:VARCHAR#, #numberPatternSuffix:VARCHAR#,#auctionAmt:VARCHAR#,
        #gldRenewOldAmt:VARCHAR#,#gldRenewCash:VARCHAR#,#gldRenewMarketRate:VARCHAR#,#gldRnwNwIntRate:VARCHAR#,
        #interestOnMaturity:VARCHAR#,#isCreditAllowedToPricipal:VARCHAR#,#isDisbAftMoraPerd:VARCHAR#,#maxCashPayment:NUMBER#,#chkEMISimpleInt:VARCHAR#,#chkAuctionAllowed:VARCHAR#,#suspenseCreditAchd:VARCHAR#,#suspenseDebitAchd:VARCHAR#,#isInterestFirst:VARCHAR#, #freqInDays:NUMBER#, #isSalaryRecovery:VARCHAR#,#isInterestLoanDue:VARCHAR#,#isIntCalcPeriodWise:VARCHAR#)
    </mapped-statement>

	<!-- Use LoanProductAccountParamTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateLoanProductAccountParamTO" inline-parameters="true">
        UPDATE LOANS_PROD_ACPARAM SET 
<!--		PROD_ID = #prodId:VARCHAR#,-->
        NUMBER_PATTERN = #numberPattern:VARCHAR#,
        LAST_AC_NO = #lastAcNo:VARCHAR#,
        LIMIT_DEF_ALLOWED = #limitDefAllowed:VARCHAR#,
        STAFF_AC_OPENED = #staffAcOpened:VARCHAR#,
        DEBIT_INT_CLEARINGAPPL = #debitIntClearingappl:VARCHAR#,
        NUMBER_PATTERN_SUFFIX = #numberPatternSuffix:VARCHAR#,
        AUCTION_AMT_ALLOWED=#auctionAmt:VARCHAR#,
        RENEW_WITH_OLDAMT = #gldRenewOldAmt:VARCHAR#,
        RENEW_THROUGH_CASH =#gldRenewCash:VARCHAR#,
        RENEW_WITH_MARKET_RATE =#gldRenewMarketRate:VARCHAR#,
        RENEW_WITH_NEW_INTRATE =#gldRnwNwIntRate:VARCHAR#,
        INTEREST_ON_MATURITY =#interestOnMaturity:VARCHAR#,
        IS_ADDED_PRINCIPAL_FIRST =#isCreditAllowedToPricipal:VARCHAR#,
        DISB_AFTR_MORA_PERD = #isDisbAftMoraPerd:VARCHAR#,
        MAX_AMT_OF_CASH_PAYMENT = #maxCashPayment:NUMBER#,
        EMI_IN_SIMPLEINTEREST = #chkEMISimpleInt:VARCHAR#,
        IS_LOANCLOSING_ALLOWED=#chkAuctionAllowed:VARCHAR#,
        SUSPENSE_CREDIT_PROD_ID= #suspenseCreditAchd:VARCHAR#,
        SUSPENSE_DEBIT_PROD_ID =#suspenseDebitAchd:VARCHAR#,
        IS_INTEREST_PAID_FIRST = #isInterestFirst:VARCHAR#,
        INTEREST_PAID_FREQ_DAYS = #freqInDays:NUMBER#,
        SALARY_RECOVERY = #isSalaryRecovery:VARCHAR#,
        IS_INTEREST_LOAN_DUE=#isInterestLoanDue:VARCHAR#,
        IS_INT_PERIOD_SLAB_CALC=#isIntCalcPeriodWise:VARCHAR#
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use LoanProductAccountParamTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductAccountParamTO" inline-parameters="true">
<!--		DELETE FROM LOANS_PROD_ACPARAM -->
        WHERE PROD_ID = #prodId:VARCHAR#
	</mapped-statement>


	<mapped-statement name="getInterestOnMaturity" result-class="java.util.LinkedHashMap">
    	SELECT INTEREST_ON_MATURITY,IS_LOANCLOSING_ALLOWED FROM LOANS_PROD_ACPARAM
    	WHERE PROD_ID =#prodId:VARCHAR#
    </mapped-statement>
  <result-map name="getLoanProductGroupLoanParamTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductGroupLoanTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="intCalcDay" column="INT_DAY"/>
        <property name="intCalcMonth" column="INT_MONTH"/>
        <property name="isDebitAllowedForDueCustomer" column="DEBIT_ALLOW_FOR_DUE"/>
        <property name="interestCalcDay" column="HOLIDAY_EXEC"/>
    </result-map>
    
    <mapped-statement name="getSelectLoanProductGroupLoanTO" result-map="getLoanProductGroupLoanParamTOResult" >
       SELECT  PROD_ID,HOLIDAY_EXEC,INT_DAY,INT_MONTH,DEBIT_ALLOW_FOR_DUE
       FROM GROUP_LOAN_PRODUCT 
       WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>

    <mapped-statement name="insertLoanProductGroupLoanTO" inline-parameters="true">
        INSERT INTO GROUP_LOAN_PRODUCT
        (PROD_ID,INT_DAY ,INT_MONTH,DEBIT_ALLOW_FOR_DUE,HOLIDAY_EXEC
        ) VALUES 
        (#prodId:VARCHAR#,cast(#intCalcDay# as numeric),cast(#intCalcMonth# as numeric),#isDebitAllowedForDueCustomer:VARCHAR#,#interestCalcDay:VARCHAR#)
    </mapped-statement> 
 
    <mapped-statement name="updateLoanProductGroupLoanTO" inline-parameters="true">
         UPDATE GROUP_LOAN_PRODUCT SET 
         INT_DAY = #intCalcDay:VARCHAR#,
         INT_MONTH = #intCalcMonth:VARCHAR#,
         DEBIT_ALLOW_FOR_DUE = #isDebitAllowedForDueCustomer:VARCHAR#,
         HOLIDAY_EXEC = #interestCalcDay:VARCHAR#
         WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductAccountParamTO object (JavaBean) properties -->
    <result-map name="getLoanProductAccountParamTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductAccountParamTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="numberPattern" column="NUMBER_PATTERN"/>
        <property name="lastAcNo" column="LAST_AC_NO"/>
        <property name="limitDefAllowed" column="LIMIT_DEF_ALLOWED"/>
        <property name="staffAcOpened" column="STAFF_AC_OPENED"/>
        <property name="debitIntClearingappl" column="DEBIT_INT_CLEARINGAPPL"/>
        <property name="numberPatternSuffix" column="NUMBER_PATTERN_SUFFIX"/>
        <property name="auctionAmt" column="AUCTION_AMT_ALLOWED"/>
        <property name="gldRenewOldAmt" column="RENEW_WITH_OLDAMT"/>
        <property name="gldRenewCash" column="RENEW_THROUGH_CASH"/>
        <property name="gldRenewMarketRate" column="RENEW_WITH_MARKET_RATE"/>
        <property name="gldRnwNwIntRate" column="RENEW_WITH_NEW_INTRATE"/>
        <property name="interestOnMaturity" column="INTEREST_ON_MATURITY"/>
        <property name="isCreditAllowedToPricipal" column="IS_ADDED_PRINCIPAL_FIRST"/>
        <property name="isDisbAftMoraPerd" column="DISB_AFTR_MORA_PERD"/>
        <property name="maxCashPayment" column="MAX_AMT_OF_CASH_PAYMENT"/>
        <property name="chkEMISimpleInt" column="EMI_IN_SIMPLEINTEREST"/>
        <property name="chkAuctionAllowed" column="IS_LOANCLOSING_ALLOWED"/>
        <property name="suspenseCreditAchd" column="SUSPENSE_CREDIT_PROD_ID"/>
        <property name="suspenseDebitAchd" column="SUSPENSE_DEBIT_PROD_ID"/>
        <property name="isInterestFirst" column="IS_INTEREST_PAID_FIRST"/>
        <property name="freqInDays" column="INTEREST_PAID_FREQ_DAYS"/>
        <property name="isSalaryRecovery" column="SALARY_RECOVERY"/>
        <property name="isInterestLoanDue" column="IS_INTEREST_LOAN_DUE"/>
        <property name="isIntCalcPeriodWise" column="IS_INT_PERIOD_SLAB_CALC"/>
    </result-map>
    
	<mapped-statement name="getSelectLoanProductAccountParamTO" result-map="getLoanProductAccountParamTOResult" >
        SELECT PROD_ID,NUMBER_PATTERN,LAST_AC_NO,LIMIT_DEF_ALLOWED,MAX_AMT_OF_CASH_PAYMENT,
        nvl(STAFF_AC_OPENED,'N') as STAFF_AC_OPENED,
        nvl(DEBIT_INT_CLEARINGAPPL,'N') as DEBIT_INT_CLEARINGAPPL,
        nvl(NUMBER_PATTERN_SUFFIX,'N') as NUMBER_PATTERN_SUFFIX,
        nvl(AUCTION_AMT_ALLOWED,'N') as AUCTION_AMT_ALLOWED,
        nvl(RENEW_WITH_OLDAMT,'N') as RENEW_WITH_OLDAMT,
        nvl(RENEW_THROUGH_CASH,'N') as RENEW_THROUGH_CASH,
        nvl(RENEW_WITH_MARKET_RATE,'N') as RENEW_WITH_MARKET_RATE,
        nvl(RENEW_WITH_NEW_INTRATE,'N') as RENEW_WITH_NEW_INTRATE,
        INTEREST_ON_MATURITY as INTEREST_ON_MATURITY,
        IS_ADDED_PRINCIPAL_FIRST as IS_ADDED_PRINCIPAL_FIRST,
        nvl(DISB_AFTR_MORA_PERD,'N') as DISB_AFTR_MORA_PERD,EMI_IN_SIMPLEINTEREST,IS_LOANCLOSING_ALLOWED,SUSPENSE_CREDIT_PROD_ID,SUSPENSE_DEBIT_PROD_ID,
        nvl(IS_INTEREST_PAID_FIRST,'N')AS IS_INTEREST_PAID_FIRST, INTEREST_PAID_FREQ_DAYS, SALARY_RECOVERY,IS_INTEREST_LOAN_DUE,IS_INT_PERIOD_SLAB_CALC
        FROM LOANS_PROD_ACPARAM
        WHERE PROD_ID =  #value:VARCHAR#    
    </mapped-statement>
<!-- =================================================================================== -->
<!-- Use LoanProductInterReceivableTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
<!--	<mapped-statement name="insertLoanProductInterReceivableTO" inline-parameters="true">
		INSERT INTO LOANS_PROD_INTREC
		(PROD_ID, DEBIT_INT_CHARGED, MIN_DEBITINT_RATE, MAX_DEBITINT_RATE, MIN_DEBITINT_AMT, MAX_DEBITINT_AMT, DEBITINT_CALC_FREQ, DEBITINT_APPL_FREQ, DEBITINT_COMP_FREQ, DEBIT_PROD_ROUNDOFF, DEBIT_INT_ROUNDOFF, LAST_INTCALC_DTDEBIT, LAST_INTAPPL_DTDEBIT, PROD_FREQ, PLR_RATE_APPL, PLR_RATE, PLR_APPL_FROM, PLR_APPL_NEWAC, PLR_APPL_EXISTAC, PLR_APPL_SANCFROM, PENAL_APPL, LIMIT_EXPIRY_INT, PENAL_INT_RATE, EXPO_LMT_PRUDENTIALAMT, EXPO_LMT_POLICYAMT, EXPO_LMT_PRUDENTIALPER, EXPO_LMT_POLICYPER,PENAL_APP_PRINCIPAL,PENAL_APP_INTEREST,AS_CUSTOMER_COMES,CALENDAR_FREQ,PREMATURE_FREQ,PREMATURE_INT_CALC_AMT,BILL_BY_BILL
		) VALUES (
		#prodId:VARCHAR#, #debitIntCharged:VARCHAR#, #minDebitintRate:NUMERIC#, #maxDebitintRate:NUMERIC#, #minDebitintAmt:NUMERIC#, #maxDebitintAmt:NUMERIC#, #debitintCalcFreq:NUMERIC#, #debitintApplFreq:NUMERIC#, #debitintCompFreq:NUMERIC#, #debitProdRoundoff:VARCHAR#, #debitIntRoundoff:VARCHAR#, #lastIntcalcDtdebit:DATE#, #lastIntapplDtdebit:DATE#, #prodFreq:NUMERIC#, #plrRateAppl:VARCHAR#, #plrRate:NUMERIC#, #plrApplFrom:DATE#, #plrApplNewac:VARCHAR#, #plrApplExistac:VARCHAR#, #plrApplSancfrom:DATE#, #penalAppl:VARCHAR#, #limitExpiryInt:VARCHAR#, #penalIntRate:NUMERIC#, #expoLmtPrudentialamt:NUMERIC#, #expoLmtPolicyamt:NUMERIC#, #expoLmtPrudentialper:NUMERIC#, #expoLmtPolicyper:NUMERIC#,#principalDue:VARCHAR#,#interestDue:VARCHAR#,#asAndWhenCustomer_Yes:VARCHAR#,#calendarFrequency_Yes:VARCHAR#,#periodFreq:NUMERIC#,#prematureIntCalAmt:VARCHAR#,#billByBill:VARCHAR#)
	</mapped-statement>  -->
        
    <mapped-statement name="insertLoanProductInterReceivableTO" inline-parameters="true">
        INSERT INTO LOANS_PROD_INTREC
        (PROD_ID, DEBIT_INT_CHARGED, MIN_DEBITINT_RATE, MAX_DEBITINT_RATE, MIN_DEBITINT_AMT, MAX_DEBITINT_AMT, DEBITINT_CALC_FREQ, DEBITINT_APPL_FREQ, DEBITINT_COMP_FREQ, 
        DEBIT_PROD_ROUNDOFF, DEBIT_INT_ROUNDOFF, LAST_INTCALC_DTDEBIT, LAST_INTAPPL_DTDEBIT, PROD_FREQ, PLR_RATE_APPL, PLR_RATE, PLR_APPL_FROM, PLR_APPL_NEWAC,
        PLR_APPL_EXISTAC, PLR_APPL_SANCFROM, PENAL_APPL, LIMIT_EXPIRY_INT, PENAL_INT_RATE, EXPO_LMT_PRUDENTIALAMT, EXPO_LMT_POLICYAMT, EXPO_LMT_PRUDENTIALPER, 
        EXPO_LMT_POLICYPER,PENAL_APP_PRINCIPAL,PENAL_APP_INTEREST,AS_CUSTOMER_COMES,CALENDAR_FREQ,PREMATURE_FREQ,PREMATURE_PERIOD,PREMATURE_INT_FREQ,PREMATURE_INT_PERIOD,
        PREMATURE_INT_CALC_AMT,BILL_BY_BILL,INT_UPTO_MAT_DT ,INT_UPTO_DEPOSIT_MAT_DT,GRACE_PERIOD_PENAL,INTEREST_DUE_KEPT_RECEIVABLE,INSURANCE_APPLICABLE,INSURANCE_SANCTION,INSURANCE_RATE,INTEREST_REPAY_FREQ,
        PENAL_APP_EMI,EMI_PENAL_CALC_BASED_ON,IS_OVERDUE_INT,PREMATURE_CLOSE_CALC_REQUIRED,GOLD_LOAN_OVERDUE_INT,GRACE_GOLD_LOAN_OVERDUE_INT
        ) VALUES (
        #prodId:VARCHAR#, #debitIntCharged:VARCHAR#, #minDebitintRate:NUMERIC#, #maxDebitintRate:NUMERIC#, #minDebitintAmt:NUMERIC#, #maxDebitintAmt:NUMERIC#, 
        #debitintCalcFreq:NUMERIC#, #debitintApplFreq:NUMERIC#, #debitintCompFreq:NUMERIC#, #debitProdRoundoff:VARCHAR#, #debitIntRoundoff:VARCHAR#, 
        #lastIntcalcDtdebit:DATE#, #lastIntapplDtdebit:DATE#, #prodFreq:NUMERIC#, #plrRateAppl:VARCHAR#, #plrRate:NUMERIC#, #plrApplFrom:DATE#, #plrApplNewac:VARCHAR#, 
        #plrApplExistac:VARCHAR#, #plrApplSancfrom:DATE#, #penalAppl:VARCHAR#, #limitExpiryInt:VARCHAR#, #penalIntRate:NUMERIC#, #expoLmtPrudentialamt:NUMERIC#, 
        #expoLmtPolicyamt:NUMERIC#, #expoLmtPrudentialper:NUMERIC#, #expoLmtPolicyper:NUMERIC#,#principalDue:VARCHAR#,#interestDue:VARCHAR#,#asAndWhenCustomer_Yes:VARCHAR#,
        #calendarFrequency_Yes:VARCHAR#,#periodFreq:NUMERIC#,#prematurePeriod:VARCHAR#,#periodIntCalcFreq:NUMERIC#,#prematureIntCalcPeriod:VARCHAR#,#prematureIntCalAmt:VARCHAR#,
        #billByBill:VARCHAR#,#uptoMaturity:VARCHAR#,#uptoDepositMaturity:VARCHAR#,#gracePeriodPenal:NUMERIC#,#interestDueKeptReceivable:VARCHAR#,#insuranceApplicable:VARCHAR#,#insuranceSanctionDt:VARCHAR#,#insuranceRate:NUMERIC#,#interestRepaymentFreq:NUMERIC#,
        #emiPenal:VARCHAR#,#emiPenalCalcMethod:VARCHAR#,#isOverDueIntTaken:VARCHAR#,#prematureClosureIntCalcRequired:VARCHAR#,#intCalcFromSanctionDt:VARCHAR#,#gracePeriodForOverDueInt:NUMERIC#
        )
    </mapped-statement>        

	<!-- Use LoanProductInterReceivableTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
<!--	<mapped-statement name="updateLoanProductInterReceivableTO" inline-parameters="true">
		UPDATE LOANS_PROD_INTREC SET 
		DEBIT_INT_CHARGED = #debitIntCharged:VARCHAR#,
		MIN_DEBITINT_RATE = #minDebitintRate:NUMERIC#,
		MAX_DEBITINT_RATE = #maxDebitintRate:NUMERIC#,
		MIN_DEBITINT_AMT = #minDebitintAmt:NUMERIC#,
		MAX_DEBITINT_AMT = #maxDebitintAmt:NUMERIC#,
		DEBITINT_CALC_FREQ = #debitintCalcFreq:NUMERIC#,
		DEBITINT_APPL_FREQ = #debitintApplFreq:NUMERIC#,
		DEBITINT_COMP_FREQ = #debitintCompFreq:NUMERIC#,
		DEBIT_PROD_ROUNDOFF = #debitProdRoundoff:VARCHAR#,
		DEBIT_INT_ROUNDOFF = #debitIntRoundoff:VARCHAR#,
		LAST_INTCALC_DTDEBIT = #lastIntcalcDtdebit:DATE#,
		LAST_INTAPPL_DTDEBIT = #lastIntapplDtdebit:DATE#,
		PROD_FREQ = #prodFreq:NUMERIC#,
		PLR_RATE_APPL = #plrRateAppl:VARCHAR#,
		PLR_RATE = #plrRate:NUMERIC#,
		PLR_APPL_FROM = #plrApplFrom:DATE#,
		PLR_APPL_NEWAC = #plrApplNewac:VARCHAR#,
		PLR_APPL_EXISTAC = #plrApplExistac:VARCHAR#,
		PLR_APPL_SANCFROM = #plrApplSancfrom:DATE#,
		PENAL_APPL = #penalAppl:VARCHAR#,
		LIMIT_EXPIRY_INT = #limitExpiryInt:VARCHAR#,
		PENAL_INT_RATE = #penalIntRate:NUMERIC#,
		EXPO_LMT_PRUDENTIALAMT = #expoLmtPrudentialamt:NUMERIC#,
		EXPO_LMT_POLICYAMT = #expoLmtPolicyamt:NUMERIC#,
		EXPO_LMT_PRUDENTIALPER = #expoLmtPrudentialper:NUMERIC#,
		EXPO_LMT_POLICYPER = #expoLmtPolicyper:NUMERIC#,
                PENAL_APP_PRINCIPAL=#principalDue:VARCHAR#,
                PENAL_APP_INTEREST=#interestDue:VARCHAR#,
                AS_CUSTOMER_COMES=#asAndWhenCustomer_Yes:VARCHAR#,
                CALENDAR_FREQ=#calendarFrequency_Yes:VARCHAR#,
                PREMATURE_FREQ=#periodFreq:NUMERIC#,
                PREMATURE_INT_CALC_AMT=#prematureIntCalAmt:VARCHAR#,
                BILL_BY_BILL = #billByBill:VARCHAR#
		WHERE PROD_ID = #prodId:VARCHAR#
	</mapped-statement> -->
        
    <mapped-statement name="updateLoanProductInterReceivableTO" inline-parameters="true">
        UPDATE LOANS_PROD_INTREC SET 
        DEBIT_INT_CHARGED = #debitIntCharged:VARCHAR#,
        MIN_DEBITINT_RATE = #minDebitintRate:NUMERIC#,
        MAX_DEBITINT_RATE = #maxDebitintRate:NUMERIC#,
        MIN_DEBITINT_AMT = #minDebitintAmt:NUMERIC#,
        MAX_DEBITINT_AMT = #maxDebitintAmt:NUMERIC#,
        DEBITINT_CALC_FREQ = #debitintCalcFreq:NUMERIC#,
        DEBITINT_APPL_FREQ = #debitintApplFreq:NUMERIC#,
        DEBITINT_COMP_FREQ = #debitintCompFreq:NUMERIC#,
        DEBIT_PROD_ROUNDOFF = #debitProdRoundoff:VARCHAR#,
        DEBIT_INT_ROUNDOFF = #debitIntRoundoff:VARCHAR#,
        LAST_INTCALC_DTDEBIT = #lastIntcalcDtdebit:DATE#,
        LAST_INTAPPL_DTDEBIT = #lastIntapplDtdebit:DATE#,
        PROD_FREQ = #prodFreq:NUMERIC#,
        PLR_RATE_APPL = #plrRateAppl:VARCHAR#,
        PLR_RATE = #plrRate:NUMERIC#,
        PLR_APPL_FROM = #plrApplFrom:DATE#,
        PLR_APPL_NEWAC = #plrApplNewac:VARCHAR#,
        PLR_APPL_EXISTAC = #plrApplExistac:VARCHAR#,
        PLR_APPL_SANCFROM = #plrApplSancfrom:DATE#,
        PENAL_APPL = #penalAppl:VARCHAR#,
        LIMIT_EXPIRY_INT = #limitExpiryInt:VARCHAR#,
        PENAL_INT_RATE = #penalIntRate:NUMERIC#,
        EXPO_LMT_PRUDENTIALAMT = #expoLmtPrudentialamt:NUMERIC#,
        EXPO_LMT_POLICYAMT = #expoLmtPolicyamt:NUMERIC#,
        EXPO_LMT_PRUDENTIALPER = #expoLmtPrudentialper:NUMERIC#,
        EXPO_LMT_POLICYPER = #expoLmtPolicyper:NUMERIC#,
        PENAL_APP_PRINCIPAL=#principalDue:VARCHAR#,
        PENAL_APP_INTEREST=#interestDue:VARCHAR#,
        AS_CUSTOMER_COMES=#asAndWhenCustomer_Yes:VARCHAR#,
        CALENDAR_FREQ=#calendarFrequency_Yes:VARCHAR#,
        PREMATURE_FREQ=#periodFreq:NUMERIC#,
        PREMATURE_PERIOD=#prematurePeriod:VARCHAR#,
        PREMATURE_INT_FREQ=#periodIntCalcFreq:NUMERIC#,
        PREMATURE_INT_PERIOD=#prematureIntCalcPeriod:VARCHAR#,
        PREMATURE_INT_CALC_AMT=#prematureIntCalAmt:VARCHAR#,
        BILL_BY_BILL = #billByBill:VARCHAR#,
        INT_UPTO_MAT_DT = #uptoMaturity:VARCHAR#,
        INT_UPTO_DEPOSIT_MAT_DT =#uptoDepositMaturity:VARCHAR#,
        GRACE_PERIOD_PENAL = #gracePeriodPenal:NUMERIC#,
        INTEREST_DUE_KEPT_RECEIVABLE =#interestDueKeptReceivable:VARCHAR#,
        INSURANCE_APPLICABLE=#insuranceApplicable:VARCHAR#,
        INSURANCE_SANCTION=#insuranceSanctionDt:VARCHAR#,
        INSURANCE_RATE=#insuranceRate:NUMERIC#,
        INTEREST_REPAY_FREQ=#interestRepaymentFreq:NUMERIC#,
        PENAL_APP_EMI = #emiPenal:VARCHAR#,
        EMI_PENAL_CALC_BASED_ON = #emiPenalCalcMethod:VARCHAR#,
        IS_OVERDUE_INT = #isOverDueIntTaken:VARCHAR#,
        PREMATURE_CLOSE_CALC_REQUIRED = #prematureClosureIntCalcRequired:VARCHAR#,
        GOLD_LOAN_OVERDUE_INT = #intCalcFromSanctionDt:VARCHAR#,
        GRACE_GOLD_LOAN_OVERDUE_INT = #gracePeriodForOverDueInt:VARCHAR#
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use LoanProductInterReceivableTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductInterReceivableTO" inline-parameters="true">
<!--		DELETE FROM LOANS_PROD_INTREC -->
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductInterReceivableTO object (JavaBean) properties -->
    <result-map name="getLoanProductInterReceivableTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductInterReceivableTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="debitIntCharged" column="DEBIT_INT_CHARGED"/>
        <property name="minDebitintRate" column="MIN_DEBITINT_RATE"/>
        <property name="maxDebitintRate" column="MAX_DEBITINT_RATE"/>
        <property name="minDebitintAmt" column="MIN_DEBITINT_AMT"/>
        <property name="maxDebitintAmt" column="MAX_DEBITINT_AMT"/>
        <property name="debitintCalcFreq" column="DEBITINT_CALC_FREQ"/>
        <property name="debitintApplFreq" column="DEBITINT_APPL_FREQ"/>
        <property name="debitintCompFreq" column="DEBITINT_COMP_FREQ"/>
        <property name="debitProdRoundoff" column="DEBIT_PROD_ROUNDOFF"/>
        <property name="debitIntRoundoff" column="DEBIT_INT_ROUNDOFF"/>
        <property name="lastIntcalcDtdebit" column="LAST_INTCALC_DTDEBIT"/>
        <property name="lastIntapplDtdebit" column="LAST_INTAPPL_DTDEBIT"/>
        <property name="prodFreq" column="PROD_FREQ"/>
        <property name="plrRateAppl" column="PLR_RATE_APPL"/>
        <property name="plrRate" column="PLR_RATE"/>
        <property name="plrApplFrom" column="PLR_APPL_FROM"/>
        <property name="plrApplNewac" column="PLR_APPL_NEWAC"/>
        <property name="plrApplExistac" column="PLR_APPL_EXISTAC"/>
        <property name="plrApplSancfrom" column="PLR_APPL_SANCFROM"/>
        <property name="penalAppl" column="PENAL_APPL"/>
        <property name="limitExpiryInt" column="LIMIT_EXPIRY_INT"/>
        <property name="penalIntRate" column="PENAL_INT_RATE"/>
        <property name="expoLmtPrudentialamt" column="EXPO_LMT_PRUDENTIALAMT"/>
        <property name="expoLmtPolicyamt" column="EXPO_LMT_POLICYAMT"/>
        <property name="expoLmtPrudentialper" column="EXPO_LMT_PRUDENTIALPER"/>
        <property name="expoLmtPolicyper" column="EXPO_LMT_POLICYPER"/>
        <property name="principalDue" column ="PENAL_APP_PRINCIPAL"/>
        <property name="interestDue" column ="PENAL_APP_INTEREST"/>
        <property name="asAndWhenCustomer_Yes" column ="AS_CUSTOMER_COMES"/>
        <property name="calendarFrequency_Yes" column ="CALENDAR_FREQ"/>
        <property name="periodFreq" column="PREMATURE_FREQ"/>
        <property name="prematurePeriod" column="PREMATURE_PERIOD"/>
        <property name="periodIntCalcFreq" column="PREMATURE_INT_FREQ"/>
        <property name="prematureIntCalcPeriod" column="PREMATURE_INT_PERIOD"/>
        <property name="prematureIntCalAmt" column="PREMATURE_INT_CALC_AMT"/>
        <property name="billByBill" column ="BILL_BY_BILL"/> 
        <property name="uptoMaturity" column ="INT_UPTO_MAT_DT"/>
        <property name="uptoDepositMaturity" column ="INT_UPTO_DEPOSIT_MAT_DT"/>   
        <property name="gracePeriodPenal" column ="GRACE_PERIOD_PENAL"/>
        <property name="interestDueKeptReceivable" column ="INTEREST_DUE_KEPT_RECEIVABLE"/>
        <property name="insuranceApplicable" column ="INSURANCE_APPLICABLE"/>
        <property name="insuranceSanctionDt" column ="INSURANCE_SANCTION"/>
        <property name="insuranceRate" column ="INSURANCE_RATE"/>
        <property name="interestRepaymentFreq" column ="INTEREST_REPAY_FREQ"/>       
        <property name="emiPenal" column ="PENAL_APP_EMI"/>
        <property name="emiPenalCalcMethod" column ="EMI_PENAL_CALC_BASED_ON"/>
        <property name="isOverDueIntTaken" column ="IS_OVERDUE_INT"/>   
        <property name="prematureClosureIntCalcRequired" column ="PREMATURE_CLOSE_CALC_REQUIRED"/>         
        <property name="intCalcFromSanctionDt" column ="GOLD_LOAN_OVERDUE_INT"/>   
        <property name="gracePeriodForOverDueInt" column ="GRACE_GOLD_LOAN_OVERDUE_INT"/> 
    </result-map>
         
    <mapped-statement name="getSelectLoanProductInterReceivableTO" result-map="getLoanProductInterReceivableTOResult" >
        SELECT * FROM LOANS_PROD_INTREC 
        WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>
<!-- =================================================================================== -->
<!-- Use LoanProductChargesTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertLoanProductChargesTO" inline-parameters="true">
        INSERT INTO LOANS_PROD_CHARGES
        (PROD_ID, AC_CLOSING_CHRG, MISC_SERV_CHRG, STAT_CHRG, STAT_CHRG_RATE, FOLIO_CHRG_APPL, LAST_FOLIO_CHRGON, NO_ENTRIES_PER_FOLIO, NEXT_FOLIO_DUEDATE, RATE_PER_FOLIO, FOLIO_CHRG_APPLFREQ, TO_COLLECT_FOLIOCHRG, TO_COLLECT_CHRG_ON, INCOMP_FOLIO_ROUNDOFF, PROC_CHRG, PROC_CHRG_PER, PROC_CHRG_AMT, COMMIT_CHRG, COMMIT_CHRG_PER, COMMIT_CHRG_AMT,TO_CHARGE_ON_TYPE,CREDIT_STAMP_ADVANCES,CREDIT_NOTICE_ADVANCES
        ) VALUES (
        #prodId:VARCHAR#, #acClosingChrg:NUMERIC#, #miscServChrg:NUMERIC#, #statChrg:VARCHAR#, #statChrgRate:NUMERIC#, #folioChrgAppl:VARCHAR#, #lastFolioChrgon:DATE#, #noEntriesPerFolio:NUMERIC#, #nextFolioDuedate:DATE#, #ratePerFolio:NUMERIC#, #folioChrgApplfreq:NUMERIC#, #toCollectFoliochrg:VARCHAR#, #toCollectChrgOn:VARCHAR#, #incompFolioRoundoff:NUMERIC#, #procChrg:VARCHAR#, #procChrgPer:NUMERIC#, #procChrgAmt:NUMERIC#, #commitChrg:VARCHAR#, #commitChrgPer:NUMERIC#, #commitChrgAmt:NUMERIC#,#folioChargeType:VARCHAR#,#creditStampAdvance:VARCHAR#,#creditNoticeAdvance:VARCHAR#)
    </mapped-statement>

	<!-- Use LoanProductChargesTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateLoanProductChargesTO" inline-parameters="true">
        UPDATE LOANS_PROD_CHARGES SET 
<!--		PROD_ID = #prodId:VARCHAR#,-->
        AC_CLOSING_CHRG = #acClosingChrg:NUMERIC#,
        MISC_SERV_CHRG = #miscServChrg:NUMERIC#,
        STAT_CHRG = #statChrg:VARCHAR#,
        STAT_CHRG_RATE = #statChrgRate:NUMERIC#,
        FOLIO_CHRG_APPL = #folioChrgAppl:VARCHAR#,
        LAST_FOLIO_CHRGON = #lastFolioChrgon:DATE#,
        NO_ENTRIES_PER_FOLIO = #noEntriesPerFolio:NUMERIC#,
        NEXT_FOLIO_DUEDATE = #nextFolioDuedate:DATE#,
        RATE_PER_FOLIO = #ratePerFolio:NUMERIC#,
        FOLIO_CHRG_APPLFREQ = #folioChrgApplfreq:NUMERIC#,
        TO_COLLECT_FOLIOCHRG = #toCollectFoliochrg:VARCHAR#,
        TO_COLLECT_CHRG_ON = #toCollectChrgOn:VARCHAR#,
        INCOMP_FOLIO_ROUNDOFF = #incompFolioRoundoff:NUMERIC#,
        PROC_CHRG = #procChrg:VARCHAR#,
        PROC_CHRG_PER = #procChrgPer:NUMERIC#,
        PROC_CHRG_AMT = #procChrgAmt:NUMERIC#,
        COMMIT_CHRG = #commitChrg:VARCHAR#,
        COMMIT_CHRG_PER = #commitChrgPer:NUMERIC#,
        COMMIT_CHRG_AMT = #commitChrgAmt:NUMERIC#,
        TO_CHARGE_ON_TYPE=#folioChargeType:VARCHAR#,
        CREDIT_STAMP_ADVANCES=#creditStampAdvance:VARCHAR#,
        CREDIT_NOTICE_ADVANCES=#creditNoticeAdvance:VARCHAR#
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use LoanProductChargesTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductChargesTO" inline-parameters="true">
<!--		DELETE FROM LOANS_PROD_CHARGES -->
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductChargesTO object (JavaBean) properties -->
    <result-map name="getLoanProductChargesTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductChargesTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="acClosingChrg" column="AC_CLOSING_CHRG"/>
        <property name="miscServChrg" column="MISC_SERV_CHRG"/>
        <property name="statChrg" column="STAT_CHRG"/>
        <property name="statChrgRate" column="STAT_CHRG_RATE"/>
        <property name="folioChrgAppl" column="FOLIO_CHRG_APPL"/>
        <property name="lastFolioChrgon" column="LAST_FOLIO_CHRGON"/>
        <property name="noEntriesPerFolio" column="NO_ENTRIES_PER_FOLIO"/>
        <property name="nextFolioDuedate" column="NEXT_FOLIO_DUEDATE"/>
        <property name="ratePerFolio" column="RATE_PER_FOLIO"/>
        <property name="folioChrgApplfreq" column="FOLIO_CHRG_APPLFREQ"/>
        <property name="toCollectFoliochrg" column="TO_COLLECT_FOLIOCHRG"/>
        <property name="toCollectChrgOn" column="TO_COLLECT_CHRG_ON"/>
        <property name="incompFolioRoundoff" column="INCOMP_FOLIO_ROUNDOFF"/>
        <property name="procChrg" column="PROC_CHRG"/>
        <property name="procChrgPer" column="PROC_CHRG_PER"/>
        <property name="procChrgAmt" column="PROC_CHRG_AMT"/>
        <property name="commitChrg" column="COMMIT_CHRG"/>
        <property name="commitChrgPer" column="COMMIT_CHRG_PER"/>
        <property name="commitChrgAmt" column="COMMIT_CHRG_AMT"/>
        <property name="folioChargeType" column= "TO_CHARGE_ON_TYPE"/>
        <property name="creditStampAdvance" column= "CREDIT_STAMP_ADVANCES"/>
        <property name="creditNoticeAdvance" column= "CREDIT_NOTICE_ADVANCES"/>
                
    </result-map>
    <mapped-statement name="getSelectLoanProductChargesTO" result-map="getLoanProductChargesTOResult" >
        SELECT * FROM LOANS_PROD_CHARGES 
        WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>
<!-- =================================================================================== -->
   <!-- Use LoanProductChargesTabTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertLoanProductChargesTabTO" inline-parameters="true">
        INSERT INTO LOANS_PROD_CHQCHRG
        (PROD_ID, CHQ_RETURN_CHRG_RATE, CHQ_RETURN_CHRG_FROM, CHQ_RETURN_CHRG_TO,NOTICE_TYPE,ISSUE_AFTER,NOTICE_CHARGE_AMT,POSTAGE_AMT
        ) VALUES (
        #prodId:VARCHAR#, #chqReturnChrgRate:NUMERIC#, #chqReturnChrgFrom:NUMERIC#, #chqReturnChrgTo:NUMERIC#,#noticeType:VARCHAR#,#issueAfter:VARCHAR#,#noticeChargeAmt:NUMERIC#,#postageAmt:NUMERIC#)
    </mapped-statement>

	<!-- Use LoanProductChargesTabTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateLoanProductChargesTabTO" inline-parameters="true">
        UPDATE LOANS_PROD_CHQCHRG SET 
<!--		PROD_ID = #prodId:VARCHAR#,
		CHQ_RETURN_CHRG_FROM = #chqReturnChrgFrom:NUMERIC#,
		CHQ_RETURN_CHRG_TO = #chqReturnChrgTo:NUMERIC#,-->
        CHQ_RETURN_CHRG_RATE = #chqReturnChrgRate:NUMERIC#
        WHERE PROD_ID = #prodId:VARCHAR# AND CHQ_RETURN_CHRG_FROM = #chqReturnChrgFrom:NUMERIC#
        AND CHQ_RETURN_CHRG_TO = #chqReturnChrgTo:NUMERIC#
    </mapped-statement>

	<!-- Use LoanProductChargesTabTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductChargesTabTO" inline-parameters="true">
        DELETE FROM LOANS_PROD_CHQCHRG 
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductChargesTabTO object (JavaBean) properties -->
    <result-map name="getLoanProductChargesTabTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductChargesTabTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="chqReturnChrgRate" column="CHQ_RETURN_CHRG_RATE"/>
        <property name="chqReturnChrgFrom" column="CHQ_RETURN_CHRG_FROM"/>
        <property name="chqReturnChrgTo"   column="CHQ_RETURN_CHRG_TO"/>
        <property name="noticeType"        column="NOTICE_TYPE"/>
        <property name="issueAfter"       column="ISSUE_AFTER"/>  
        <property name="noticeChargeAmt"   column="NOTICE_CHARGE_AMT"/>
        <property name="postageAmt"        column="POSTAGE_AMT"/>

    </result-map>
    <mapped-statement name="getSelectLoanProductChargesTabTO" result-map="getLoanProductChargesTabTOResult" >
        SELECT * FROM LOANS_PROD_CHQCHRG 
        WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>     
<!-- =================================================================================== -->
<!-- Use LoanProductSpeItemsTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertLoanProductSpeItemsTO" inline-parameters="true">
        INSERT INTO LOANS_PROD_SPECIALITEM
        (PROD_ID, ATM_CARD_ISSUED, CR_CARD_ISSUED, MOBILE_BANK_CLIENT, BRANCH_BANKING_ALLOWED
        ) VALUES (
        #prodId:VARCHAR#, #atmCardIssued:VARCHAR#, #crCardIssued:VARCHAR#, #mobileBankClient:VARCHAR#, #branchBankingAllowed:VARCHAR#)
    </mapped-statement>

	<!-- Use LoanProductSpeItemsTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateLoanProductSpeItemsTO" inline-parameters="true">
        UPDATE LOANS_PROD_SPECIALITEM SET 
<!--		PROD_ID = #prodId:VARCHAR#,-->
        ATM_CARD_ISSUED = #atmCardIssued:VARCHAR#,
        CR_CARD_ISSUED = #crCardIssued:VARCHAR#,
        MOBILE_BANK_CLIENT = #mobileBankClient:VARCHAR#,
        BRANCH_BANKING_ALLOWED = #branchBankingAllowed:VARCHAR#
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use LoanProductSpeItemsTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductSpeItemsTO" inline-parameters="true">
<!--		DELETE FROM LOANS_PROD_SPECIALITEM -->
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductSpeItemsTO object (JavaBean) properties -->
    <result-map name="getLoanProductSpeItemsTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductSpeItemsTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="atmCardIssued" column="ATM_CARD_ISSUED"/>
        <property name="crCardIssued" column="CR_CARD_ISSUED"/>
        <property name="mobileBankClient" column="MOBILE_BANK_CLIENT"/>
        <property name="branchBankingAllowed" column="BRANCH_BANKING_ALLOWED"/>
    </result-map>
    <mapped-statement name="getSelectLoanProductSpeItemsTO" result-map="getLoanProductSpeItemsTOResult" >
        SELECT * FROM LOANS_PROD_SPECIALITEM 
        WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>

<!-- =================================================================================== -->
<!-- Use LoanProductAccHeadTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertLoanProductAccHeadTO" inline-parameters="true">       
        INSERT INTO LOANS_PROD_ACHD
        (PROD_ID, AC_CLOSING_CHRG, MISC_SERV_CHRG, STAT_CHRG, AC_DEBIT_INT, PENAL_INT, AC_CREDIT_INT, EXPIRY_INT, CHQ_RET_CHRG_OUTWARD, CHQ_RET_CHRG_INWARD, FOLIO_CHRG_AC, COMMITMENT_CHRG, PROC_CHRG,NOTICE_CHARGES,POSTAGE_CHARGES,INT_PAYABLE_ACHD,LEGAL_CHARGES,ARBITRARY_CHARGES,INSURANCE_CHARGES,EXECUTION_DECREE_CHARGES,ARC_COST,ARC_EXPENSE,EA_COST,
        EA_EXPENSE,EP_COST,EP_EXPENSE,DEBIT_DISCOUNT_ACHD,REBATE_INTEREST_ACHD,STAMP_ADVANCES_HEAD,NOTICE_ADVANCES_HEAD,ADVERTISE_ACHEAD,ARC_EP_SUSPENCE_ACHD,OTHRCHRGS_HD,DEBIT_PENAL_HEAD,DEBIT_PRINCIPAL_HEAD,DEBIT_NOTICE_HEAD,DEBIT_EP_COST_HEAD,DEBIT_POSTAGE_HEAD,DEBIT_ADVERTISE_HEAD,DEBIT_LEGAL_HEAD,DEBIT_INSURANCE_HEAD,DEBIT_MISCELLANEOUS_HEAD,
        DEBIT_DECREE_HEAD,DEBIT_ARBITRARY_HEAD,DEBIT_ARC_HEAD,OVER_DUEINT_ACHD,DEBIT_OVERDUEINT_HEAD,RECOVERY_CHARGES,MEASUREMENT_CHARGES,DEBIT_RECOVERY_HEAD,DEBIT_MEASUREMENT_HEAD,
        KOLE_FIELD_OPERATION,KOLE_FIELD_EXPENSE,DEBIT_KOLE_FIELD_OPERATION,DEBIT_KOLE_FIELD_EXPENSE
          ) VALUES (
        #prodId:VARCHAR#, #acClosingChrg:VARCHAR#, #miscServChrg:VARCHAR#, #statChrg:VARCHAR#, #acDebitInt:VARCHAR#, #penalInt:VARCHAR#, #acCreditInt:VARCHAR#, #expiryInt:VARCHAR#, #chqRetChrgOutward:VARCHAR#, #chqRetChrgInward:VARCHAR#, #folioChrgAc:VARCHAR#, #commitmentChrg:VARCHAR#, #procChrg:VARCHAR#,#noticeCharges:VARCHAR#,#postageCharges:VARCHAR#,#intPayableAcHd:VARCHAR#,#legalCharges:VARCHAR#,#arbitraryCharges:VARCHAR#,#insuranceCharges:VARCHAR#,
        #executionDecreeCharges:VARCHAR#, #arcCost:VARCHAR#, #arcExpense:VARCHAR#, #eaCost:VARCHAR#, #eaExpense:VARCHAR#, #epCost:VARCHAR#, #epExpense:VARCHAR#,#debitIntDiscountAchd:VARCHAR#,#rebateInterest:VARCHAR#,#stampAdvancesHead:VARCHAR#,#noticeAdvancesHead:VARCHAR#,#advertisementHead:VARCHAR#,#arcEpSuspenceHead:VARCHAR#,#othrChrgsHead:VARCHAR#,#penalWaiveOff:VARCHAR#,#principleWaveOff:VARCHAR#,
        #noticeWaiveOff:VARCHAR#,#epWaiver:varchar#,#postageWaiver:varchar#,#advertiseWaiver:varchar#,#legalWaiver:varchar#,#insurenceWaiver:varchar#,#miscellaneousWaiver:varchar#,#decreeWaiver:varchar#,#arbitraryWaiver:varchar#,#arcWaiver:varchar#,
        #overDueIntHead:VARCHAR#,#overDueWaiver:VARCHAR#,
        #recoveryCharges:VARCHAR#,#measurementCharges:VARCHAR#,#recoveryWaiver:VARCHAR#,#measurementWaiver:VARCHAR#,
        #koleFieldOperation:VARCHAR#,#koleFieldexpense:VARCHAR#,#koleFieldOperationWaiver:VARCHAR#,#koleFieldExpenseWaiver:VARCHAR#
        )
    </mapped-statement>

	<!-- Use LoanProductAccHeadTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateLoanProductAccHeadTO" inline-parameters="true">
        UPDATE LOANS_PROD_ACHD SET 
<!--		PROD_ID = #prodId:VARCHAR#,-->
        DEBIT_PENAL_HEAD = #penalWaiveOff:VARCHAR# ,
        DEBIT_PRINCIPAL_HEAD=#principleWaveOff:VARCHAR#,
        AC_CLOSING_CHRG = #acClosingChrg:VARCHAR#,
        MISC_SERV_CHRG = #miscServChrg:VARCHAR#,
        STAT_CHRG = #statChrg:VARCHAR#,
        AC_DEBIT_INT = #acDebitInt:VARCHAR#,
        PENAL_INT = #penalInt:VARCHAR#,
        AC_CREDIT_INT = #acCreditInt:VARCHAR#,
        EXPIRY_INT = #expiryInt:VARCHAR#,
        CHQ_RET_CHRG_OUTWARD = #chqRetChrgOutward:VARCHAR#,
        CHQ_RET_CHRG_INWARD = #chqRetChrgInward:VARCHAR#,
        FOLIO_CHRG_AC = #folioChrgAc:VARCHAR#,
        COMMITMENT_CHRG = #commitmentChrg:VARCHAR#,
        PROC_CHRG = #procChrg:VARCHAR#,
        NOTICE_CHARGES=#noticeCharges:VARCHAR#,
        POSTAGE_CHARGES=#postageCharges:VARCHAR#,
        INT_PAYABLE_ACHD=#intPayableAcHd:VARCHAR#,
        LEGAL_CHARGES=#legalCharges:VARCHAR#,
        ARBITRARY_CHARGES=#arbitraryCharges:VARCHAR#,
        INSURANCE_CHARGES=#insuranceCharges:VARCHAR#,
        EXECUTION_DECREE_CHARGES=#executionDecreeCharges:VARCHAR#,
        ARC_COST=#arcCost:VARCHAR#,
        ARC_EXPENSE=#arcExpense:VARCHAR#,
        EA_COST=#eaCost:VARCHAR#,
        EA_EXPENSE=#eaExpense:VARCHAR#,
        EP_COST=#epCost:VARCHAR#,
        EP_EXPENSE=#epExpense:VARCHAR#,
        DEBIT_DISCOUNT_ACHD=#debitIntDiscountAchd:VARCHAR#,
        REBATE_INTEREST_ACHD=#rebateInterest:VARCHAR#,
        STAMP_ADVANCES_HEAD=#stampAdvancesHead:VARCHAR#,
        NOTICE_ADVANCES_HEAD=#noticeAdvancesHead:VARCHAR#,
        ADVERTISE_ACHEAD=#advertisementHead:VARCHAR#,
        ARC_EP_SUSPENCE_ACHD=#arcEpSuspenceHead:VARCHAR#,
        DEBIT_NOTICE_HEAD=#noticeWaiveOff:VARCHAR#,
        OTHRCHRGS_HD= #othrChrgsHead:VARCHAR#,
        DEBIT_EP_COST_HEAD=#epWaiver:varchar#,
        DEBIT_POSTAGE_HEAD=#postageWaiver:varchar#,
        DEBIT_ADVERTISE_HEAD=#advertiseWaiver:varchar#,
        DEBIT_LEGAL_HEAD=#legalWaiver:varchar#,
        DEBIT_INSURANCE_HEAD=#insurenceWaiver:varchar#,
        DEBIT_MISCELLANEOUS_HEAD=#miscellaneousWaiver:varchar#,
        DEBIT_DECREE_HEAD=#decreeWaiver:varchar#,
        DEBIT_ARBITRARY_HEAD=#arbitraryWaiver:varchar#,
        DEBIT_ARC_HEAD=#arcWaiver:varchar#,
        OVER_DUEINT_ACHD = #overDueIntHead:VARCHAR#,
        DEBIT_OVERDUEINT_HEAD = #overDueWaiver:VARCHAR#,
        RECOVERY_CHARGES =  #recoveryCharges:VARCHAR#,        
        MEASUREMENT_CHARGES = #measurementCharges:VARCHAR# ,    
        DEBIT_RECOVERY_HEAD = #recoveryWaiver:VARCHAR# ,     
        DEBIT_MEASUREMENT_HEAD = #measurementWaiver:VARCHAR#,
        KOLE_FIELD_OPERATION = #koleFieldOperation:VARCHAR#, 
        KOLE_FIELD_EXPENSE = #koleFieldexpense:VARCHAR#,
        DEBIT_KOLE_FIELD_OPERATION = #koleFieldOperationWaiver:VARCHAR#,
        DEBIT_KOLE_FIELD_EXPENSE = #koleFieldExpenseWaiver:VARCHAR#        
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use LoanProductAccHeadTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductAccHeadTO" inline-parameters="true">
<!--		DELETE FROM LOANS_PROD_ACHD -->
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductAccHeadTO object (JavaBean) properties -->
    <result-map name="getLoanProductAccHeadTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductAccHeadTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="acClosingChrg" column="AC_CLOSING_CHRG"/>
        <property name="miscServChrg" column="MISC_SERV_CHRG"/>
        <property name="statChrg" column="STAT_CHRG"/>
        <property name="acDebitInt" column="AC_DEBIT_INT"/>
        <property name="penalInt" column="PENAL_INT"/>
        <property name="acCreditInt" column="AC_CREDIT_INT"/>
        <property name="expiryInt" column="EXPIRY_INT"/>
        <property name="chqRetChrgOutward" column="CHQ_RET_CHRG_OUTWARD"/>
        <property name="chqRetChrgInward" column="CHQ_RET_CHRG_INWARD"/>
        <property name="folioChrgAc" column="FOLIO_CHRG_AC"/>
        <property name="commitmentChrg" column="COMMITMENT_CHRG"/>
        <property name="procChrg" column="PROC_CHRG"/>
        <property name="noticeCharges" column="NOTICE_CHARGES"/>
        <property name="postageCharges" column="POSTAGE_CHARGES"/>
        <property name="intPayableAcHd" column="INT_PAYABLE_ACHD"/>
        <property name="legalCharges" column="LEGAL_CHARGES"/>
        <property name="arbitraryCharges" column="ARBITRARY_CHARGES"/>
        <property name="insuranceCharges" column="INSURANCE_CHARGES"/>
        <property name="executionDecreeCharges" column="EXECUTION_DECREE_CHARGES"/>
        <property name="arcCost" column="ARC_COST"/>
        <property name="arcExpense" column="ARC_EXPENSE"/>
        <property name="eaCost" column="EA_COST"/>
        <property name="eaExpense" column="EA_EXPENSE"/>
        <property name="epCost" column="EP_COST"/>
        <property name="epExpense" column="EP_EXPENSE"/>
        <property name="debitIntDiscountAchd" column="DEBIT_DISCOUNT_ACHD"/>
        <property name="rebateInterest" column="REBATE_INTEREST_ACHD"/>
        <property name="stampAdvancesHead" column="STAMP_ADVANCES_HEAD"/>
        <property name="noticeAdvancesHead" column="NOTICE_ADVANCES_HEAD"/>
        <property name="advertisementHead" column="ADVERTISE_ACHEAD"/>
        <property name="arcEpSuspenceHead" column="ARC_EP_SUSPENCE_ACHD"/>
        <property name="othrChrgsHead" column="OTHRCHRGS_HD"/>
        <property name="penalWaiveOff" column="DEBIT_PENAL_HEAD"/>
        <property name="noticeWaiveOff" column="DEBIT_NOTICE_HEAD"/>
        <property name="principleWaveOff" column="DEBIT_PRINCIPAL_HEAD"/>
        <property name="epWaiver" column="DEBIT_EP_COST_HEAD"/>
        <property name="postageWaiver" column="DEBIT_POSTAGE_HEAD"/>
        <property name="advertiseWaiver" column="DEBIT_ADVERTISE_HEAD"/>
        <property name="legalWaiver" column="DEBIT_LEGAL_HEAD"/>
        <property name="insurenceWaiver" column="DEBIT_INSURANCE_HEAD"/>
        <property name="miscellaneousWaiver" column="DEBIT_MISCELLANEOUS_HEAD"/>
        <property name="arbitraryWaiver" column="DEBIT_ARBITRARY_HEAD"/>
        <property name="arcWaiver" column="DEBIT_ARC_HEAD"/>
        <property name="decreeWaiver" column="DEBIT_DECREE_HEAD"/>      
        <property name="overDueIntHead" column="OVER_DUEINT_ACHD"/>
        <property name="overDueWaiver" column="DEBIT_OVERDUEINT_HEAD"/>
        <property name="recoveryWaiver" column="DEBIT_RECOVERY_HEAD"/>
        <property name="measurementWaiver" column="DEBIT_MEASUREMENT_HEAD"/>      
        <property name="recoveryCharges" column="RECOVERY_CHARGES"/>
        <property name="measurementCharges" column="MEASUREMENT_CHARGES"/>
        <property name="koleFieldOperation" column="KOLE_FIELD_OPERATION"/>
        <property name="koleFieldexpense" column="KOLE_FIELD_EXPENSE"/>      
        <property name="koleFieldOperationWaiver" column="DEBIT_KOLE_FIELD_OPERATION"/>
        <property name="koleFieldExpenseWaiver" column="DEBIT_KOLE_FIELD_EXPENSE"/>
        
    </result-map>
    <mapped-statement name="getSelectLoanProductAccHeadTO" result-map="getLoanProductAccHeadTOResult" >
        SELECT * FROM LOANS_PROD_ACHD 
        WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>
<!-- =================================================================================== -->
<!-- Use LoanProductNonPerAssetsTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertLoanProductNonPerAssetsTO" inline-parameters="true">
        INSERT INTO LOANS_PROD_NONPERASSET
        (PROD_ID, MIN_PERIOD_ARREARS, PERIOD_TRANS_SUBSTANDARD, PROVISION_SUBSTANDARD, PERIOD_TRANS_DOUBTFUL, PROVISION_DOUBTFUL, PERIOD_TRANS_LOSS, PERIOD_TRANS_NOPERFORMING, PROVISION_STD_ASSETS, PROVISION_LOSE_ASSETS, PERIOD_TRANS_DOUBTFUL_2, PROVISION_DOUBTFUL_2, PERIOD_TRANS_DOUBTFUL_3, PROVISION_DOUBTFUL_3
        ) VALUES (
        #prodId:VARCHAR#, #minPeriodArrears:NUMERIC#, #periodTransSubstandard:NUMERIC#, #provisionSubstandard:NUMERIC#, #periodTransDoubtful:NUMERIC#, #provisionDoubtful:NUMERIC#, #periodTransLoss:NUMERIC#, #periodTransNoperforming:NUMERIC#, #provisionStdAssets:NUMERIC#, #provisionLoseAssets:NUMERIC#, #periodTransDoubtful2:NUMERIC#, #provisionDoubtful2:NUMERIC#, #periodTransDoubtful3:NUMERIC#, #provisionDoubtful3:NUMERIC#)
    </mapped-statement>

	<!-- Use LoanProductNonPerAssetsTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateLoanProductNonPerAssetsTO" inline-parameters="true">
        UPDATE LOANS_PROD_NONPERASSET SET 
<!--		PROD_ID = #prodId:VARCHAR#,-->
        MIN_PERIOD_ARREARS = #minPeriodArrears:NUMERIC#,
        PERIOD_TRANS_SUBSTANDARD = #periodTransSubstandard:NUMERIC#,
        PROVISION_SUBSTANDARD = #provisionSubstandard:NUMERIC#,
        PERIOD_TRANS_DOUBTFUL = #periodTransDoubtful:NUMERIC#,
        PROVISION_DOUBTFUL = #provisionDoubtful:NUMERIC#,
        PERIOD_TRANS_LOSS = #periodTransLoss:NUMERIC#,
        PERIOD_TRANS_NOPERFORMING = #periodTransNoperforming:NUMERIC#,
        PROVISION_STD_ASSETS = #provisionStdAssets:NUMERIC#,
        PROVISION_LOSE_ASSETS = #provisionLoseAssets:NUMERIC#,
        PERIOD_TRANS_DOUBTFUL_2 = #periodTransDoubtful2:NUMERIC#,
        PROVISION_DOUBTFUL_2 = #provisionDoubtful2:NUMERIC#,
        PERIOD_TRANS_DOUBTFUL_3 = #periodTransDoubtful3:NUMERIC#,
        PROVISION_DOUBTFUL_3 = #provisionDoubtful3:NUMERIC#
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use LoanProductNonPerAssetsTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductNonPerAssetsTO" inline-parameters="true">
<!--		DELETE FROM LOANS_PROD_NONPERASSET -->
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductNonPerAssetsTO object (JavaBean) properties -->
    <result-map name="getLoanProductNonPerAssetsTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductNonPerAssetsTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="minPeriodArrears" column="MIN_PERIOD_ARREARS"/>
        <property name="periodTransSubstandard" column="PERIOD_TRANS_SUBSTANDARD"/>
        <property name="provisionSubstandard" column="PROVISION_SUBSTANDARD"/>
        <property name="periodTransDoubtful" column="PERIOD_TRANS_DOUBTFUL"/>
        <property name="provisionDoubtful" column="PROVISION_DOUBTFUL"/>
        <property name="periodTransLoss" column="PERIOD_TRANS_LOSS"/>
        <property name="periodTransNoperforming" column="PERIOD_TRANS_NOPERFORMING"/>
        <property name="provisionStdAssets" column="PROVISION_STD_ASSETS"/>
        <property name="provisionLoseAssets" column="PROVISION_LOSE_ASSETS"/>
        <property name="periodTransDoubtful2" column="PERIOD_TRANS_DOUBTFUL_2"/>
        <property name="provisionDoubtful2" column="PROVISION_DOUBTFUL_2"/>
        <property name="periodTransDoubtful3" column="PERIOD_TRANS_DOUBTFUL_3"/>
        <property name="provisionDoubtful3" column="PROVISION_DOUBTFUL_3"/>
    </result-map>
    <mapped-statement name="getSelectLoanProductNonPerAssetsTO" result-map="getLoanProductNonPerAssetsTOResult" >
        SELECT * FROM LOANS_PROD_NONPERASSET 
        WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>

<!-- =================================================================================== -->
<!-- Use LoanProductInterCalcTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertLoanProductInterCalcTO" inline-parameters="true">
        INSERT INTO LOANS_PROD_INTCALC
        (PROD_ID, CALC_TYPE, MIN_PERIOD, MAX_PERIOD, MIN_AMT_LOAN, MAX_AMT_LOAN, MIN_INT_DEBIT, SUBSIDY, LOAN_PERIODS_MULTIPLES, APPL_INTEREST,REVIEW_PERIOD,DEP_ELIGIBLE_LOAN_AMT,DEPOSIT_ROUNDOFF,MAX_PERIOD_CHAR,DEP_AMT_LOAN_MATURING,DEP_AMT_MATURING_PERIOD,BY_MARGIN_FIXED,FIXED_RATE_GOLD
        ) VALUES (
        #prodId:VARCHAR#, #calcType:VARCHAR#, #minPeriod:NUMERIC#, #maxPeriod:NUMERIC#, #minAmtLoan:NUMERIC#, #maxAmtLoan:NUMERIC#, #minIntDebit:NUMERIC#, #subsidy:VARCHAR#, #loanPeriodsMultiples:NUMERIC#, #applInterest:NUMERIC#,#reviewPeriod:NUMERIC#,#eligibleDepForLoanAmt:NUMERIC#,#depositRoundOff:VARCHAR#,#maxPeriodChar:VARCHAR#,#depAmtMaturing:NUMERIC#,#depAmtMaturingPeriod:NUMERIC#,#chkFixed:VARCHAR#,#fixedMargin:NUMERIC#)
    </mapped-statement>

	<!-- Use LoanProductInterCalcTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateLoanProductInterCalcTO" inline-parameters="true">
        UPDATE LOANS_PROD_INTCALC SET 
<!--		PROD_ID = #prodId:VARCHAR#,-->
        CALC_TYPE = #calcType:VARCHAR#,
        MIN_PERIOD = #minPeriod:NUMERIC#,
        MAX_PERIOD = #maxPeriod:NUMERIC#,
        MIN_AMT_LOAN = #minAmtLoan:NUMERIC#,
        MAX_AMT_LOAN = #maxAmtLoan:NUMERIC#,
        MIN_INT_DEBIT = #minIntDebit:NUMERIC#,
        SUBSIDY = #subsidy:VARCHAR#,
        LOAN_PERIODS_MULTIPLES = #loanPeriodsMultiples:NUMERIC#,
        APPL_INTEREST = #applInterest:NUMERIC#,
        REVIEW_PERIOD = #reviewPeriod:NUMERIC#,
        DEP_ELIGIBLE_LOAN_AMT=#eligibleDepForLoanAmt:NUMERIC#,
        DEPOSIT_ROUNDOFF=#depositRoundOff:VARCHAR#,
        MAX_PERIOD_CHAR =#maxPeriodChar:VARCHAR#,
        DEP_AMT_LOAN_MATURING=#depAmtMaturing:NUMERIC#,
        DEP_AMT_MATURING_PERIOD = #depAmtMaturingPeriod:NUMERIC#,
        BY_MARGIN_FIXED = #chkFixed:VARCHAR#,
        FIXED_RATE_GOLD = #fixedMargin:NUMERIC#
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use LoanProductInterCalcTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductInterCalcTO" inline-parameters="true">
<!--		DELETE FROM LOANS_PROD_INTCALC -->
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductInterCalcTO object (JavaBean) properties -->
    <result-map name="getLoanProductInterCalcTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductInterCalcTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="calcType" column="CALC_TYPE"/>
        <property name="minPeriod" column="MIN_PERIOD"/>
        <property name="maxPeriod" column="MAX_PERIOD"/>
        <property name="minAmtLoan" column="MIN_AMT_LOAN"/>
        <property name="maxAmtLoan" column="MAX_AMT_LOAN"/>
        <property name="minIntDebit" column="MIN_INT_DEBIT"/>
        <property name="subsidy" column="SUBSIDY"/>
        <property name="loanPeriodsMultiples" column="LOAN_PERIODS_MULTIPLES"/>
        <property name="applInterest" column="APPL_INTEREST"/>
        <property name="loanPeriodsMultiples" column="LOAN_PERIODS_MULTIPLES"/>
        <property name="reviewPeriod" column="REVIEW_PERIOD"/>
        <property name="eligibleDepForLoanAmt" column="DEP_ELIGIBLE_LOAN_AMT"/>
        <property name="depAmtMaturing" column="DEP_AMT_LOAN_MATURING"/>
        <property name="depositRoundOff" column="DEPOSIT_ROUNDOFF"/>
        <property name="maxPeriodChar" column="MAX_PERIOD_CHAR"/>
        <property name="depAmtMaturingPeriod" column="DEP_AMT_MATURING_PERIOD"/>
        <property name="chkFixed" column="BY_MARGIN_FIXED"/>
        <property name="fixedMargin" column="FIXED_RATE_GOLD"/>
    </result-map>
    <mapped-statement name="getSelectLoanProductInterCalcTO" result-map="getLoanProductInterCalcTOResult" >
        SELECT * FROM LOANS_PROD_INTCALC 
        WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>
        
        
<!-- =================================================================================== -->
        
        <!-- Use LoanProductClassificationsTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertLoanProductClassificationsTO" inline-parameters="true">
        INSERT INTO LOANS_PROD_CLASSIFICATION
        (PROD_ID, COMMODITY_CODE, FACILITY_TYPE, PURPOSE_CODE, INDUSTRY_CODE, TWENTY_CODE, GOVT_SCHEME_CODE, ECGC, GUARANTEE_COVER_CODE, HEALTH_CODE, SECTOR_CODE, REFINANCING_INSTITUTION, DIRECT_FINANCE, QIS, STATUS, STATUS_BY, STATUS_DT, SECURITY_DETAILS
        ) VALUES (
        #prodId:VARCHAR#, #commodityCode:VARCHAR#, #facilityType:VARCHAR#, #purposeCode:VARCHAR#, #industryCode:VARCHAR#, #twentyCode:VARCHAR#, #govtSchemeCode:VARCHAR#, #ecgc:VARCHAR#, #guaranteeCoverCode:VARCHAR#, #healthCode:VARCHAR#, #sectorCode:VARCHAR#, #refinancingInstitution:VARCHAR#, #directFinance:VARCHAR#, #qis:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #securityDetails:VARCHAR#)
    </mapped-statement>
                
	<!-- Use LoanProductClassificationsTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateLoanProductClassificationsTO" inline-parameters="true">
        UPDATE LOANS_PROD_CLASSIFICATION SET 
<!--		PROD_ID = #prodId:VARCHAR#, -->
        COMMODITY_CODE = #commodityCode:VARCHAR#,
        FACILITY_TYPE = #facilityType:VARCHAR#,
        PURPOSE_CODE = #purposeCode:VARCHAR#,
        INDUSTRY_CODE = #industryCode:VARCHAR#,
        TWENTY_CODE = #twentyCode:VARCHAR#,
        GOVT_SCHEME_CODE = #govtSchemeCode:VARCHAR#,
        ECGC = #ecgc:VARCHAR#,
        GUARANTEE_COVER_CODE = #guaranteeCoverCode:VARCHAR#,
        HEALTH_CODE = #healthCode:VARCHAR#,
        SECTOR_CODE = #sectorCode:VARCHAR#,
        REFINANCING_INSTITUTION = #refinancingInstitution:VARCHAR#,
        DIRECT_FINANCE = #directFinance:VARCHAR#,
        QIS = #qis:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#,
        SECURITY_DETAILS = #securityDetails:VARCHAR#
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use LoanProductClassificationsTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductClassificationsTO" inline-parameters="true">
        UPDATE LOANS_PROD_CLASSIFICATION SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductClassificationsTO object (JavaBean) properties -->
    <result-map name="getLoanProductClassificationsTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductClassificationsTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="commodityCode" column="COMMODITY_CODE"/>
        <property name="facilityType" column="FACILITY_TYPE"/>
        <property name="purposeCode" column="PURPOSE_CODE"/>
        <property name="industryCode" column="INDUSTRY_CODE"/>
        <property name="twentyCode" column="TWENTY_CODE"/>
        <property name="govtSchemeCode" column="GOVT_SCHEME_CODE"/>
        <property name="ecgc" column="ECGC"/>
        <property name="guaranteeCoverCode" column="GUARANTEE_COVER_CODE"/>
        <property name="healthCode" column="HEALTH_CODE"/>
        <property name="sectorCode" column="SECTOR_CODE"/>
        <property name="refinancingInstitution" column="REFINANCING_INSTITUTION"/>
        <property name="directFinance" column="DIRECT_FINANCE"/>
        <property name="qis" column="QIS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="securityDetails" column="SECURITY_DETAILS"/>
    </result-map>
    <mapped-statement name="getSelectLoanProductClassificationsTO" result-map="getLoanProductClassificationsTOResult" >
        SELECT * FROM LOANS_PROD_CLASSIFICATION 
        WHERE PROD_ID = #value:VARCHAR#
    </mapped-statement>
<!-- =================================================================================== -->        
<!--     Authorization Queries -->
        <!--dynamic-mapped-statement name="getLoanProductAuthorizeList" result-class="java.util.LinkedHashMap">
            SELECT PROD_ID as "PROD_ID", PROD_DESC as "Product Description",
            ACCT_HEAD as "Account Head" FROM LOANS_PRODUCT
            WHERE STATUS != 'DELETED' 
            AND BEHAVES_LIKE NOT IN ('CC', 'OD')
            AND STATUS_BY != #USER_ID# 
                <dynamic>
                    <isEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                        AUTHORIZE_STATUS = 'EXCEPTION' 
                    </isEqual>
                    <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                        AUTHORIZE_STATUS IS NULL
                    </isNotEqual>
                  </dynamic>
	</dynamic-mapped-statement -->
        
    <dynamic-mapped-statement name="getLoanProductAuthorizeList" result-class="java.util.LinkedHashMap">
        SELECT PROD_ID as "PROD_ID", PROD_DESC as "Product Description",
        ACCT_HEAD as "Account Head"
        FROM LOANS_PRODUCT
        WHERE STATUS != 'DELETED' 
<!--            AND (AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED') OR AUTHORIZE_STATUS IS NULL)-->
        AND STATUS_BY != #USER_ID:VARCHAR#  
        AND cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DISTINCT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y', HIERARCHY_ID, HIERARCHY_ID + 1)
        FROM USER_MASTER UM, ROLE_MASTER RM 
        WHERE RM.ROLE_ID = UM.USER_ROLE AND UM.USER_ID = LOANS_PRODUCT.STATUS_BY)           
        <dynamic>
            <isEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                AUTHORIZE_STATUS = 'EXCEPTION'
            </isEqual>
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (AUTHORIZE_STATUS IS NULL OR 
                AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
            </isNotEqual>
        </dynamic>
    </dynamic-mapped-statement>
        
    <mapped-statement name="authorizeLoanProduct" result-class="java.util.HashMap">
        UPDATE LOANS_PRODUCT SET 
        AUTHORIZE_STATUS = #STATUS:VARCHAR#,
        AUTHORIZE_USER = #USER_ID:VARCHAR#, 
        AUTHORIZE_DT = #AUTHORIZEDT:TIMESTAMP#
        WHERE PROD_ID = #PROD_ID:VARCHAR# 
    </mapped-statement>
<!-- =================================================================================== -->  
        <!--mapped-statement name="TermLoan.getSelectAcctHeadTOList" result-class="java.util.LinkedHashMap" >
		SELECT AC_HD_Code, AC_HD_DESC, AC_HD_ID FROM AC_HD
	</mapped-statement-->
        
    <dynamic-mapped-statement name="TermLoan.getSelectAcctHeadTOList" result-class="java.util.LinkedHashMap" >
        SELECT AC_HD_CODE, AC_HD_DESC, AC_HD_ID FROM AC_HD 
        WHERE ( STATUS != 'DELETED' OR STATUS IS NULL ) 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="ACCT_HD">
                    AC_HD_ID = #ACCT_HD:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
         <dynamic>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="AC_HD_CODE">
                    UPPER(AC_HD_CODE) LIKE UPPER('%$AC_HD_CODE$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="AC_HD_DESC">
                    UPPER(AC_HD_DESC) LIKE UPPER('%$AC_HD_DESC$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="AC_HD_ID">
                    UPPER(AC_HD_ID) LIKE UPPER('%$AC_HD_ID$%')
                </isNotNull>
            </isParameterPresent>
            </dynamic>
    </dynamic-mapped-statement>


    <mapped-statement name="TermLoan.getProdId" result-class="java.util.LinkedHashMap" >
        SELECT PROD_DESC,REPAYMENT_TYPE,REPAYMENT_FREQ FROM LOANS_PRODUCT 
        WHERE PROD_ID = #PROD_ID:VARCHAR#
        AND STATUS != 'DELETED'
    </mapped-statement>
        <!-- **************************************************************-->
        <!-- Use LoanProductDocumentsTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertLoanProductDocumentsTO" inline-parameters="true">
        INSERT INTO LOANS_PROD_DOC
        (PROD_ID, DOC_TYPE, DOC_NO, DOC_DESC, STATUS, SL_NO
        ) VALUES (
        #prodId:VARCHAR#, #docType:VARCHAR#, #docNo:VARCHAR#, #docDesc:VARCHAR#, #status:VARCHAR#, #sINo:VARCHAR#)
    </mapped-statement>

	<!-- Use LoanProductDocumentsTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateLoanProductDocumentsTO" inline-parameters="true">
        UPDATE LOANS_PROD_DOC SET 
        SL_NO = #sINo:VARCHAR#,DOC_DESC = #docDesc:VARCHAR#,STATUS = #status:VARCHAR#
        WHERE PROD_ID = #prodId:VARCHAR# AND DOC_TYPE = #docType:VARCHAR# AND DOC_NO = #docNo:VARCHAR# 
    </mapped-statement>

	<!-- Use LoanProductDocumentsTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteLoanProductDocumentsTO" inline-parameters="true">
        UPDATE LOANS_PROD_DOC SET 
        STATUS = #status:VARCHAR#
        WHERE PROD_ID = #prodId:VARCHAR# AND DOC_TYPE = #docType:VARCHAR# AND DOC_NO = #docNo:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to LoanProductDocumentsTO object (JavaBean) properties -->
    <result-map name="getLoanProductDocumentsTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductDocumentsTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="docType" column="DOC_TYPE"/>
        <property name="docNo" column="DOC_NO"/>
        <property name="docDesc" column="DOC_DESC"/>
        <property name="status" column="STATUS"/>
        <property name="sINo" column="SL_NO"/>
    </result-map>
    <mapped-statement name="getSelectLoanProductDocumentsTO" result-map="getLoanProductDocumentsTOResult" >
        SELECT * FROM LOANS_PROD_DOC 
        WHERE PROD_ID = #value:VARCHAR# 
        AND ( STATUS != 'DELETED' OR STATUS IS NULL ) 
    </mapped-statement>
    <mapped-statement name="getSelectLoanProductCountRecord" result-class="java.util.HashMap" >
        SELECT NVL(COUNT(*),0) AS COUNTS FROM LOANS_FACILITY_DETAILS WHERE PROD_ID=#PROD_ID:VARCHAR# AND ACCT_STATUS !='CLOSED'
    </mapped-statement>
        <!-- *****************Advances ...*********************************************-->
        
       <!-- mapped-statement name="getLoansProductTOData" result-class="java.util.LinkedHashMap" >
            SELECT PROD_ID as "PROD_ID", PROD_DESC as "Product Description", ACCT_HEAD as "Account Head" 
            FROM LOANS_PRODUCT 
            WHERE (STATUS != 'DELETED' OR STATUS IS NULL)
            AND (AUTHORIZE_STATUS != 'REJECTED' OR AUTHORIZE_STATUS IS NULL)
	</mapped-statement -->
        
        
<!-- =================================================================================== -->        
<!--     Authorization Queries -->
        <!--mapped-statement name="getAdvancesProductAuthorizeList" result-class="java.util.LinkedHashMap">
            SELECT PROD_ID as "PROD_ID", PROD_DESC as "Product Description", ACCT_HEAD as "Account Head" 
            FROM LOANS_PRODUCT
            WHERE (STATUS != 'DELETED' OR STATUS IS NULL)
            AND BEHAVES_LIKE IN ('CC', 'OD')
            AND (AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED') OR AUTHORIZE_STATUS IS NULL)
	</mapped-statement>

	<mapped-statement name="authorizeAdvancesProduct" result-class="java.util.HashMap">
            UPDATE LOANS_PRODUCT SET 
            AUTHORIZE_STATUS = #STATUS#,
            AUTHORIZE_USER = #USER_ID#, 
            AUTHORIZE_DT = #AUTHORIZEDT#
            WHERE PROD_ID = #PROD_ID# 
	</mapped-statement -->
        
    <mapped-statement  name="insertLoanAgainstDeposit"  result-class="java.util.HashMap">
        INSERT INTO LOAN_PROD_AGAINST_AV_DEPOSIT( PROD_ID, SELECTED_DEPOSITS)VALUES(#PROD_ID#,#SELECTED_DEPOSITS#)
    </mapped-statement>
        
    <mapped-statement  name="insertAppropriatTransaction"  result-class="java.util.HashMap">
        INSERT INTO LOANS_PROD_APPROPRIATE_TRANS(PROD_ID,"1_priority","2_priority","3_priority","4_priority")
        VALUES( #PROD_ID#,#1_PRIORITY#,#2_PRIORITY#,#3_PRIORITY#,#4_PRIORITY#)
    </mapped-statement>

    <mapped-statement  name="updateAppropriatTransaction"  result-class="java.util.HashMap">
        UPDATE LOANS_PROD_APPROPRIATE_TRANS SET
           
        "1_priority"=#1_PRIORITY:VARCHAR#,
        "2_priority"=#2_PRIORITY:VARCHAR#,
        "3_priority"=#3_PRIORITY:VARCHAR#,
        "4_priority"=#4_PRIORITY:VARCHAR#
        WHERE PROD_ID= #PROD_ID#
    </mapped-statement>
                                
    <mapped-statement  name="insertAppropriatTransaction_OTS"  result-class="java.util.HashMap">
        INSERT INTO LOANS_PROD_APPROP_TRANS_OTS(PROD_ID,"1_priority","2_priority","3_priority","4_priority")
        VALUES( #PROD_ID#,#1_PRIORITY#,#2_PRIORITY#,#3_PRIORITY#,#4_PRIORITY#)
    </mapped-statement>

    <mapped-statement  name="updateAppropriatTransaction_OTS"  result-class="java.util.HashMap">
        UPDATE LOANS_PROD_APPROP_TRANS_OTS SET 
           
        "1_priority"=#1_PRIORITY:VARCHAR#,
        "2_priority"=#2_PRIORITY:VARCHAR#,
        "3_priority"=#3_PRIORITY:VARCHAR#,
        "4_priority"=#4_PRIORITY:VARCHAR#
        WHERE PROD_ID= #PROD_ID:VARCHAR#
    </mapped-statement>
                                
    <mapped-statement  name="deleteLoanAgainstDeposit"  result-class="java.util.HashMap">
        DELETE FROM LOAN_PROD_AGAINST_AV_DEPOSIT WHERE  PROD_ID=#PROD_ID:VARCHAR# AND  SELECTED_DEPOSITS=#SELECTED_DEPOSITS:VARCHAR#
    </mapped-statement>
        
        
    <mapped-statement  name="selectLoanAgainstDeposit"  result-class="java.util.LinkedHashMap">
        SELECT * FROM LOAN_PROD_AGAINST_AV_DEPOSIT WHERE PROD_ID= #value:VARCHAR# 
    </mapped-statement>
        
    <mapped-statement  name="selectAppropriatTransaction"  result-class="java.util.LinkedHashMap">
        SELECT * FROM LOANS_PROD_APPROPRIATE_TRANS WHERE PROD_ID= #value:VARCHAR# 
    </mapped-statement>
        
    <mapped-statement  name="selectAppropriatTransaction_OTS"  result-class="java.util.LinkedHashMap">
        SELECT * FROM LOANS_PROD_APPROP_TRANS_OTS WHERE PROD_ID= #value:VARCHAR# 
    </mapped-statement>
                
    <mapped-statement name="getNextActNumForLoan" result-class="java.util.HashMap">  
        <!--SELECT NUMBER_PATTERN , NUMBER_PATTERN_SUFFIX, LAST_AC_NO FROM LOANS_PROD_ACPARAM LPA, LOANS_PRODUCT LP WHERE LPA.PROD_ID= #PROD_ID# 
        AND LPA.PROD_ID = LP.PROD_ID AND STATUS!='DELETED'-->
        SELECT LPA.NUMBER_PATTERN AS PREFIX,NVL(LPA.NUMBER_PATTERN_SUFFIX,0) AS SUFFIX, decode(LPA.LAST_AC_NO,null,LPA.NUMBER_PATTERN_SUFFIX,LPA.LAST_AC_NO) AS LAST_VALUE
        FROM LOANS_PROD_ACPARAM LPA, LOANS_PRODUCT LP  WHERE LPA.PROD_ID = #PROD_ID:VARCHAR# AND LPA.PROD_ID=LP.PROD_ID
        AND LPA.LAST_AC_NO IS NULL AND LP.STATUS != 'DELETED' AND LP.AUTHORIZE_STATUS = 'AUTHORIZED'
        UNION
        SELECT LPA.NUMBER_PATTERN AS PREFIX,NVL(LPA.NUMBER_PATTERN_SUFFIX,0) AS SUFFIX, decode(LPA.LAST_AC_NO,null,LPA.NUMBER_PATTERN_SUFFIX,LPA.LAST_AC_NO) AS LAST_VALUE
        FROM LOANS_PROD_ACPARAM LPA, LOANS_PRODUCT LP  WHERE LPA.PROD_ID = #PROD_ID:VARCHAR# AND LPA.PROD_ID=LP.PROD_ID
        AND LPA.LAST_AC_NO IS NOT NULL AND LP.STATUS != 'DELETED' AND LP.AUTHORIZE_STATUS = 'AUTHORIZED'
    </mapped-statement>
      
    <mapped-statement name="updateNextIdForLoan" result-class="java.util.HashMap" >
        UPDATE LOANS_PROD_ACPARAM SET 
        LAST_AC_NO =#VALUE# WHERE  PROD_ID=#PROD_ID:VARCHAR#
    </mapped-statement>
    
    <mapped-statement name="getListDeposit" result-class="java.util.HashMap" >
        SELECT LP.PROD_ID, PROD_DESC
        FROM DEPOSITS_PRODUCT LP
        WHERE NOT EXISTS (SELECT SELECTED_DEPOSITS FROM LOAN_PROD_AGAINST_AV_DEPOSIT
        WHERE LP.PROD_DESC = SELECTED_DEPOSITS)
        AND STATUS != 'DELETED'
        AND AUTHORIZE_STATUS = 'AUTHORIZED'
    </mapped-statement>
              
    <mapped-statement name="getListAppropriationTransaction" result-class="java.util.HashMap" >
        /* FORMATTED ON 2010/05/10 16:39 (FORMATTER PLUS V4.8.8) */
        SELECT LM.LOOKUP_REF_ID  as LOOKUP_REF_ID
        FROM LOANS_PRODUCT LP,LOOKUP_MASTER LM
        WHERE NOT EXISTS (SELECT PROD_ID
        FROM LOANS_PROD_APPROPRIATE_TRANS
        WHERE LP.PROD_ID = PROD_ID AND PROD_ID=#value:VARCHAR# )
        AND LP.STATUS != 'DELETED'
        AND AUTHORIZE_STATUS = 'AUTHORIZED'
        AND LM.LOOKUP_ID='TERMLOAN.TRANSACTION_TYPE'
        AND LP.PROD_ID=#value:VARCHAR#
   

    </mapped-statement>
    
    <mapped-statement name="insertLoanProductSubsidyInterestRebateTO" inline-parameters="true">       
         
        INSERT INTO LOANS_PROD_SUBSIDY_REBATE
        (PROD_ID,SUBSIDY_ALLOWED,LOAN_BALANCE,SUBSIDY_RECEIVED_DT,REBATE_ALLOWED,REBATE_PERCENTAGE,REBATE_CALCULATION,REBATE_PERIOD,FIN_YEAR_START_DD,FIN_YEAR_START_MM,PENAL_WAIVER,INTEREST_WAIVER,STATUS,PRINCIPAL_WAIVER,NOTICE_WAIVER,EP_COST_WAIVER,POSTAGE_WAIVER,ADVERTISE_WAIVER,LEGAL_WAIVER,INSURANCE_WAIVER,MISCELLANEOUS_WAIVER,DECREE_WAIVER,ARBITRARY_WAIVER,ARC_WAIVER,INT_RATE_REBATE,OVERDUEINT_WAIVER,LOAN_INT_PERCENT,
        RECOVERY_WAIVER,MEASUREMENT_WAIVER,KOLE_FIELD_OPERATION_WAIVER,KOLE_FIELD_EXPENSE_WAIVER)  
        VALUES
        (#prodId:VARCHAR#,#subsidyAllowed:VARCHAR#,#loanBalance:VARCHAR#,#subsidyReceivedDate:VARCHAR#,#interestRebateAllowed:VARCHAR#,#interestRebatePercentage:VARCHAR#,#rebateCalculation:VARCHAR#,#rebatePeriod:VARCHAR#,#finYearStartingFromDD:VARCHAR#,
        #finYearStartingFromMM:VARCHAR#,#penalInterestWaiverAllowed:VARCHAR#,#interestWaiverAllowed:VARCHAR#,#status:VARCHAR#,#principalWaiverAllowed:VARCHAR#,#noticeWaiveOffAllowed:VARCHAR#,#epWaiver:varchar#,#postageWaiver:varchar#,#advertiseWaiver:varchar#,#legalWaiver:varchar#,#insurenceWaiver:varchar#,#miscellaneousWaiver:varchar#,#decreeWaiver:varchar#,#arbitraryWaiver:varchar#,#arcWaiver:varchar#,#chkRebtSpl:varchar#,#overdueIntWaiver:VARCHAR#,#loanInteRebatePercent:NUMBER#,
        #recoveryWaiver:VARCHAR#,#measurementWaiver:VARCHAR#,#koleFieldOperationWaiver:VARCHAR#,#koleFieldExpenseWaiver:VARCHAR#)   
 
        
    </mapped-statement>
 
    <mapped-statement  name="updateLoanProductSubsidyInterestRebateTO"  inline-parameters="true">
        UPDATE LOANS_PROD_SUBSIDY_REBATE SET
        SUBSIDY_ALLOWED=#subsidyAllowed:VARCHAR#,
        LOAN_BALANCE=#loanBalance:VARCHAR#,
        SUBSIDY_RECEIVED_DT=#subsidyReceivedDate:VARCHAR#,
        REBATE_ALLOWED=#interestRebateAllowed:VARCHAR#,
        REBATE_PERCENTAGE=#interestRebatePercentage:VARCHAR#,
        REBATE_CALCULATION=#rebateCalculation:VARCHAR#,
        REBATE_PERIOD =#rebatePeriod:VARCHAR#,
        FIN_YEAR_START_DD=#finYearStartingFromDD:VARCHAR#,
        FIN_YEAR_START_MM=#finYearStartingFromMM:VARCHAR#,
        PENAL_WAIVER=#penalInterestWaiverAllowed:VARCHAR#,
        PRINCIPAL_WAIVER=#principalWaiverAllowed:VARCHAR#,
        NOTICE_WAIVER=#noticeWaiveOffAllowed:VARCHAR#,
        INTEREST_WAIVER =#interestWaiverAllowed:VARCHAR#,
        EP_COST_WAIVER=#epWaiver:varchar#,
        POSTAGE_WAIVER=#postageWaiver:varchar#,
        ADVERTISE_WAIVER=#advertiseWaiver:varchar#,
        LEGAL_WAIVER=#legalWaiver:varchar#,
        INSURANCE_WAIVER=#insurenceWaiver:varchar#,
        MISCELLANEOUS_WAIVER=#miscellaneousWaiver:varchar#,
        DECREE_WAIVER=#decreeWaiver:varchar#,
        ARBITRARY_WAIVER=#arbitraryWaiver:varchar#,
        ARC_WAIVER=#arcWaiver:varchar#,
        STATUS =#status:VARCHAR#,
        INT_RATE_REBATE =#chkRebtSpl:VARCHAR#,        
        OVERDUEINT_WAIVER = #overdueIntWaiver:VARCHAR#,
        LOAN_INT_PERCENT =#loanInteRebatePercent:NUMBER#,
        RECOVERY_WAIVER = #recoveryWaiver:VARCHAR#,
        MEASUREMENT_WAIVER = #measurementWaiver:VARCHAR#,        
        KOLE_FIELD_OPERATION_WAIVER = #koleFieldOperationWaiver:VARCHAR#,
        KOLE_FIELD_EXPENSE_WAIVER = #koleFieldExpenseWaiver:VARCHAR#
        WHERE PROD_ID= #prodId:VARCHAR#
 
    </mapped-statement>
        
    <result-map name="LoanProductSubsidyInterestRebateTOResult" class="com.see.truetransact.transferobject.product.loan.LoanProductSubsidyInterestRebateTO">
        <property name="subsidyAllowed" column="SUBSIDY_ALLOWED"/>
        <property name="loanBalance" column="LOAN_BALANCE"/>
        <property name="subsidyReceivedDate" column="SUBSIDY_RECEIVED_DT"/>
        <property name="interestRebateAllowed" column="REBATE_ALLOWED"/>
        <property name="interestRebatePercentage" column="REBATE_PERCENTAGE"/>
        <property name="rebatePeriod" column="REBATE_PERIOD"/>
        <property name="rebateCalculation" column="REBATE_CALCULATION"/>
        <property name="finYearStartingFromDD" column="FIN_YEAR_START_DD"/>
        <property name="finYearStartingFromMM" column="FIN_YEAR_START_MM"/>
        <property name="penalInterestWaiverAllowed" column="PENAL_WAIVER"/>
        <property name="noticeWaiveOffAllowed" column="NOTICE_WAIVER"/>
        <property name="principalWaiverAllowed" column="PRINCIPAL_WAIVER"/>
        <property name="interestWaiverAllowed" column="INTEREST_WAIVER"/>
        <property name="epWaiver" column="EP_COST_WAIVER"/>
        <property name="postageWaiver" column="POSTAGE_WAIVER"/>
        <property name="advertiseWaiver" column="ADVERTISE_WAIVER"/>
        <property name="legalWaiver" column="LEGAL_WAIVER"/>
        <property name="insurenceWaiver" column="INSURANCE_WAIVER"/>
        <property name="miscellaneousWaiver" column="MISCELLANEOUS_WAIVER"/>
        <property name="arbitraryWaiver" column="ARBITRARY_WAIVER"/>
        <property name="arcWaiver" column="ARC_WAIVER"/>
        <property name="decreeWaiver" column="DECREE_WAIVER"/>
        <property name="prodId" column="PROD_ID"/>
        <property name="status" column="STATUS"/>
        <property name="chkRebtSpl" column="INT_RATE_REBATE"/>
        <property name="overdueIntWaiver" column="OVERDUEINT_WAIVER"/>   
        <property name="loanInteRebatePercent" column="LOAN_INT_PERCENT"/>
        <property name="recoveryWaiver" column="RECOVERY_WAIVER"/>   
        <property name="measurementWaiver" column="MEASUREMENT_WAIVER"/>
        <property name="koleFieldOperationWaiver" column="KOLE_FIELD_OPERATION_WAIVER"/>   
        <property name="koleFieldExpenseWaiver" column="KOLE_FIELD_EXPENSE_WAIVER"/>
    </result-map>
    
    <mapped-statement name="getSelectLoanProductSubsidyInterestRebateTO" result-map="LoanProductSubsidyInterestRebateTOResult" >
        SELECT * FROM LOANS_PROD_SUBSIDY_REBATE 
        WHERE PROD_ID = #value:VARCHAR# 
        AND ( STATUS != 'DELETED' OR STATUS IS NULL ) 
    </mapped-statement>
    <mapped-statement name="getSelectCloseAccForTOD" result-class="java.util.HashMap" >
        SELECT CLOSE_ACC_FOR_TOD FROM LOANS_PRODUCT WHERE PROD_ID = #VALUE:VARCHAR#
        AND STATUS != 'DELETED'
    </mapped-statement>
    
    <mapped-statement name="createAccountHeads" result-class="java.util.HashMap" > 
          call ACCOUNT_HEAD_CREATION(#CREATE_HEAD:varchar#,#MODUL:varchar#)
    </mapped-statement>
    
    <mapped-statement name="getSelectCreatedHeads" result-class="java.util.HashMap" >
        SELECT MJR_AC_HD_ID, AC_HD_CODE FROM AC_HD WHERE AC_HD_DESC LIKE '%' || #CREATE_HEAD:VARCHAR# || '%'
    </mapped-statement>    
    
</sql-map>


