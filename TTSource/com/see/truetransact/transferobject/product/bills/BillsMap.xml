<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="BillsTOMap">

	<!-- Use BillsTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertBillsTO" inline-parameters="true">
        INSERT INTO BILLS_PRODUCT
        (PROD_ID, GL_AC_HD, INT_AC_HD, CHRG_AC_HD, CONTRA_AC_HD_YN, DD_AC_HD, TRANS_PERIOD, POST_DT_CHQ_YN, MARGIN_AC_HD, COMM_AC_HD, POSTAGE_AC_HD, CONTRA_AC_HD, 
        IBR_AC_HD, AT_PAR_LIMIT, STATUS, AUTHORIZE_STATUS, AUTHORIZE_USER, AUTHORIZE_DT, BASE_CURRENCY, CREATED_BY, CREATED_DT, STATUS_BY, STATUS_DT, 
        AUTHORIZE_REMARK, PROD_DESC, BILLS_REALISED_HD, TELEPHONE_CHRG_HD, OTHER_HD, DISCOUNT_RATE_BD, OVERDUE_RATE_BD, INTEREST_RATE_CBP, OVERDUE_RATE_CBP, 
        POSTAGE_RATE, OPERATES_LIKE, REG_TYPE, SUB_REG_TYPE, DELAYED_RATE_CHQ, NO_INT_DAYS, SERVICE_TAX_HD, INT_FOR_ICC,CONTRA_DR_AC_HD, 
        COLL_OBC_FROM_CUST,CREDIT_OBC_TO,OBC_AC_HD,BANK_CHARGE_HEAD,DEBIT_BANK_CHRG_HEAD,CONT_EXP_BNK_CHRG_DR_HD,MISC_INC_BNK_CHRG_CR_HD
        ) VALUES (
        #prodId:VARCHAR#, #glAcHd:VARCHAR#, #intAcHd:VARCHAR#, #chrgAcHd:VARCHAR#, #contraAcHdYn:VARCHAR#, #ddAcHd:VARCHAR#, #transPeriod:NUMERIC#, 
        #postDtChqYn:VARCHAR#, #marginAcHd:VARCHAR#, #commAcHd:VARCHAR#, #postageAcHd:VARCHAR#, #contraAcHd:VARCHAR#, #ibrAcHd:VARCHAR#, #atParLimit:VARCHAR#, 
        #status:VARCHAR#, #authorizeStatus:VARCHAR#, #authorizeUser:VARCHAR#, #authorizeDt:DATE#, #baseCurrency:VARCHAR#, #createdBy:VARCHAR#, #createdDt:DATE#, 
        #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #authorizeRemark:VARCHAR#, #prodDesc:VARCHAR#, #billsRealisedHd:VARCHAR#, #telephoneChrgHd:VARCHAR#, #otherHd:VARCHAR#, 
        #discountRateBd:NUMERIC#, #overdueRateBd:NUMERIC#, #interestRateCbp:NUMERIC#, #overdueRateCbp:NUMERIC#, #postageRate:NUMERIC#, #operatesLike:VARCHAR#, 
        #regType:VARCHAR#, #regSubType:VARCHAR#, #rateForDelay:NUMERIC#, #noOfIntDays:NUMERIC#, #servTaxAcHd:VARCHAR#, #intIcc:VARCHAR#, #contraDrAcHd:VARCHAR#, 
        #otherBankCommFrmCust:VARCHAR#,#creditOtherBankTo:VARCHAR#,#txtOBCCommAcHd:VARCHAR#,#bankChargesAcHd:VARCHAR#,#debitBankChargesAcHd:VARCHAR#,#bankChargesDrAcHd:varchar#,#bankChargesMisAcHd:varchar#)
    </mapped-statement>

	<!-- Use BillsTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateBillsTO" inline-parameters="true">
        UPDATE BILLS_PRODUCT SET 		
        GL_AC_HD = #glAcHd:VARCHAR#,
        INT_AC_HD = #intAcHd:VARCHAR#,
        CHRG_AC_HD = #chrgAcHd:VARCHAR#,
        CONTRA_AC_HD_YN = #contraAcHdYn:VARCHAR#,
        DD_AC_HD = #ddAcHd:VARCHAR#,
        TRANS_PERIOD = #transPeriod:NUMERIC#,
        POST_DT_CHQ_YN = #postDtChqYn:VARCHAR#,
        MARGIN_AC_HD = #marginAcHd:VARCHAR#,
        COMM_AC_HD = #commAcHd:VARCHAR#,
        POSTAGE_AC_HD = #postageAcHd:VARCHAR#,
        CONTRA_AC_HD = #contraAcHd:VARCHAR#,
        CONTRA_DR_AC_HD = #contraDrAcHd:VARCHAR#,
        IBR_AC_HD = #ibrAcHd:VARCHAR#,
        AT_PAR_LIMIT = #atParLimit:VARCHAR#,
        COLL_OBC_FROM_CUST = #otherBankCommFrmCust:VARCHAR#,
        STATUS = #status:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
        AUTHORIZE_USER = #authorizeUser:VARCHAR#,
        AUTHORIZE_DT = #authorizeDt:DATE#,
        BASE_CURRENCY = #baseCurrency:VARCHAR#,
        CREATED_BY = #createdBy:VARCHAR#,
        CREATED_DT = #createdDt:TIMESTAMP#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#,
        AUTHORIZE_REMARK = #authorizeRemark:VARCHAR#,
        PROD_DESC = #prodDesc:VARCHAR#,
        BILLS_REALISED_HD = #billsRealisedHd:VARCHAR#,
        TELEPHONE_CHRG_HD = #telephoneChrgHd:VARCHAR#,
        OTHER_HD = #otherHd:VARCHAR#,
        DISCOUNT_RATE_BD = #discountRateBd:NUMERIC#,
        OVERDUE_RATE_BD = #overdueRateBd:NUMERIC#,
        INTEREST_RATE_CBP = #interestRateCbp:NUMERIC#,
        OVERDUE_RATE_CBP = #overdueRateCbp:NUMERIC#,
        POSTAGE_RATE = #postageRate:NUMERIC#,
        OPERATES_LIKE = #operatesLike:VARCHAR#,
        REG_TYPE = #regType:VARCHAR#,
        SUB_REG_TYPE = #regSubType:VARCHAR#,
        DELAYED_RATE_CHQ = #rateForDelay:NUMERIC#,
        NO_INT_DAYS = #noOfIntDays:NUMERIC#,
        SERVICE_TAX_HD = #servTaxAcHd:VARCHAR#,
        INT_FOR_ICC = #intIcc:VARCHAR#,
        CREDIT_OBC_TO=#creditOtherBankTo:VARCHAR#,
        OBC_AC_HD=#txtOBCCommAcHd:VARCHAR#,
        BANK_CHARGE_HEAD=#bankChargesAcHd:VARCHAR#,
        DEBIT_BANK_CHRG_HEAD=#debitBankChargesAcHd:VARCHAR#,
        CONT_EXP_BNK_CHRG_DR_HD=#bankChargesDrAcHd:varchar#,
        MISC_INC_BNK_CHRG_CR_HD=#bankChargesMisAcHd:varchar#
        WHERE PROD_ID = #prodId:VARCHAR# AND STATUS NOT IN ('DELETED')
    </mapped-statement>

	<!-- Use BillsTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteBillsTO" inline-parameters="true">
        UPDATE BILLS_PRODUCT SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE PROD_ID = #prodId:VARCHAR# AND STATUS NOT IN ('DELETED')
    </mapped-statement>
        
        <!-- Use BillsTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertBillsChargesTO" inline-parameters="true">
        INSERT INTO BILLS_CHARGES
        (INSTRU_TYPE, CHARGE_TYPE, CUST_CATEGORY, START_DT, END_DT, FROM_SLAB, TO_SLAB,
        COMMISION, FIX_RATE, FOR_EVERY_AMT, FOR_EVERY_RATE, FOR_EVERY_TYPE, PROD_ID, STATUS, SERVICE_TAX
        ) VALUES (
        #instrumentType:VARCHAR#, #chargeType:VARCHAR#, #custCategory:VARCHAR#, #startDate:DATE#, #endDate:DATE#,
        #fromSlab:NUMERIC#, #toSlab:NUMERIC#, #commision:NUMERIC#, #fixedRate:NUMERIC#, #forEveryAmt:NUMERIC#,
        #forEveryRate:NUMERIC#,#rateType:VARCHAR#, #prodID:VARCHAR#, #status:VARCHAR#, #serviceTax:NUMERIC#)
    </mapped-statement>

	<!-- Use BillsTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateBillsChargesTO" inline-parameters="true">
        UPDATE BILLS_CHARGES SET 		
                <!--INSTRU_TYPE = #instrumentType:VARCHAR#,
                CHARGE_TYPE = #chargeType:VARCHAR#,
                CUST_CATEGORY = #custCategory:VARCHAR#,-->
        START_DT = #startDate:DATE#,
        END_DT =  #endDate:DATE#,
                <!--FROM_SLAB = #fromSlab:NUMERIC#,-->
        TO_SLAB = #toSlab:NUMERIC#,
        COMMISION = #commision:NUMERIC#,
        SERVICE_TAX = #serviceTax:NUMERIC#,
        FIX_RATE = #fixedRate:NUMERIC#,
        FOR_EVERY_AMT = #forEveryAmt:NUMERIC#,
        FOR_EVERY_RATE = #forEveryRate:NUMERIC#,
        FOR_EVERY_TYPE = #rateType:VARCHAR#,
                <!--PROD_ID = #prodID:VARCHAR#,-->
        STATUS = #status:VARCHAR#
        WHERE PROD_ID = #prodID:VARCHAR#
        AND INSTRU_TYPE = #instrumentType:VARCHAR#
        AND CHARGE_TYPE = #chargeType:VARCHAR#
        AND CUST_CATEGORY = #custCategory:VARCHAR#
        AND FROM_SLAB = #fromSlab:NUMERIC#
    </mapped-statement>
        
    <mapped-statement name="deleteBillsChargesTO" inline-parameters="true">
        UPDATE BILLS_CHARGES SET 
        STATUS = #status:VARCHAR#
        WHERE PROD_ID = #prodID:VARCHAR# AND STATUS NOT IN ('DELETED')
        AND INSTRU_TYPE = #instrumentType:VARCHAR#
        AND CHARGE_TYPE = #chargeType:VARCHAR#
        AND CUST_CATEGORY = #custCategory:VARCHAR#
        AND FROM_SLAB = #fromSlab:NUMERIC#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to BillsTO object (JavaBean) properties -->
    <result-map name="getBillsTOResult" class="com.see.truetransact.transferobject.product.bills.BillsTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="glAcHd" column="GL_AC_HD"/>
        <property name="intAcHd" column="INT_AC_HD"/>
        <property name="chrgAcHd" column="CHRG_AC_HD"/>
        <property name="contraAcHdYn" column="CONTRA_AC_HD_YN"/>
        <property name="ddAcHd" column="DD_AC_HD"/>
        <property name="transPeriod" column="TRANS_PERIOD"/>
        <property name="postDtChqYn" column="POST_DT_CHQ_YN"/>
        <property name="marginAcHd" column="MARGIN_AC_HD"/>
        <property name="commAcHd" column="COMM_AC_HD"/>
        <property name="postageAcHd" column="POSTAGE_AC_HD"/>
        <property name="contraAcHd" column="CONTRA_AC_HD"/>
        <property name="contraDrAcHd" column="CONTRA_DR_AC_HD"/>
        <property name="ibrAcHd" column="IBR_AC_HD"/>
        <property name="atParLimit" column="AT_PAR_LIMIT"/>
        <property name="status" column="STATUS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="authorizeUser" column="AUTHORIZE_USER"/>
        <property name="authorizeDt" column="AUTHORIZE_DT"/>
        <property name="baseCurrency" column="BASE_CURRENCY"/>
        <property name="createdBy" column="CREATED_BY"/>
        <property name="createdDt" column="CREATED_DT"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizeRemark" column="AUTHORIZE_REMARK"/>
        <property name="prodDesc" column="PROD_DESC"/>
        <property name="billsRealisedHd" column="BILLS_REALISED_HD"/>
        <property name="telephoneChrgHd" column="TELEPHONE_CHRG_HD"/>
        <property name="otherHd" column="OTHER_HD"/>
        <property name="discountRateBd" column="DISCOUNT_RATE_BD"/>
        <property name="overdueRateBd" column="OVERDUE_RATE_BD"/>
        <property name="interestRateCbp" column="INTEREST_RATE_CBP"/>
        <property name="overdueRateCbp" column="OVERDUE_RATE_CBP"/>
        <property name="postageRate" column="POSTAGE_RATE"/>
        <property name="operatesLike" column="OPERATES_LIKE"/>
        <property name="regType" column="REG_TYPE"/>
        <property name="regSubType" column="SUB_REG_TYPE"/>
        <property name="rateForDelay" column="DELAYED_RATE_CHQ"/> 
        <property name="noOfIntDays" column="NO_INT_DAYS"/>
        <property name="servTaxAcHd" column="SERVICE_TAX_HD"/> 
        <property name="intIcc" column="INT_FOR_ICC"/> 
        <property name="otherBankCommFrmCust" column="COLL_OBC_FROM_CUST"/> 
        <property name="creditOtherBankTo" column="CREDIT_OBC_TO"/> 
        <property name="txtOBCCommAcHd" column="OBC_AC_HD"/> 
        <property name="bankChargesAcHd" column="BANK_CHARGE_HEAD"/> 
        <property name="debitBankChargesAcHd" column="DEBIT_BANK_CHRG_HEAD"/> 
        <property name="bankChargesDrAcHd" column="CONT_EXP_BNK_CHRG_DR_HD"/> 
        <property name="bankChargesMisAcHd" column="MISC_INC_BNK_CHRG_CR_HD"/> 
    </result-map>
        
    <result-map name="getBillsChargesTOResult" class="com.see.truetransact.transferobject.product.bills.BillsChargesTO">
        <property name="instrumentType" column="INSTRU_TYPE"/>
        <property name="chargeType" column="CHARGE_TYPE"/>
        <property name="custCategory" column="CUST_CATEGORY"/>
        <property name="startDate" column="START_DT"/>
        <property name="endDate" column="END_DT"/>
        <property name="fromSlab" column="FROM_SLAB"/>
        <property name="toSlab" column="TO_SLAB"/>
        <property name="commision" column="COMMISION"/>
        <property name="serviceTax" column="SERVICE_TAX"/>
        <property name="fixedRate" column="FIX_RATE"/>
        <property name="forEveryAmt" column="FOR_EVERY_AMT"/>
        <property name="forEveryRate" column="FOR_EVERY_RATE"/>
        <property name="rateType" column="FOR_EVERY_TYPE"/>
        <property name="prodID" column="PROD_ID"/>
        <property name="status" column="STATUS"/>
    </result-map>
    <mapped-statement name="getSelectBillsChargesTO" result-map="getBillsChargesTOResult" >
        SELECT * FROM BILLS_CHARGES 
        WHERE PROD_ID = #PROD_ID:VARCHAR# and status != 'DELETED'
    </mapped-statement>
    <mapped-statement name="getSelectBillsTO" result-map="getBillsTOResult" >
        SELECT * FROM BILLS_PRODUCT 
        WHERE PROD_ID = #PROD_ID:VARCHAR# AND STATUS != 'DELETED' 
    </mapped-statement>
        
    <mapped-statement name="getSelectBillsMap" result-class="java.util.LinkedHashMap" >
        SELECT PROD_ID, GL_AC_HD, BILLS_REALISED_HD FROM BILLS_PRODUCT 
        WHERE STATUS != 'DELETED' AND AUTHORIZE_STATUS != 'REJECTED'
    </mapped-statement>
        
    <mapped-statement name="getSelectBills" result-class="java.util.LinkedHashMap" >
        SELECT  AC_HD_ID, AC_HD_DESC FROM AC_HD
        WHERE STATUS != 'DELETED' 
    </mapped-statement>        
        
<!--     Authorization Queries -->
    <dynamic-mapped-statement name="getBillsProductAuthorizeList" result-class="java.util.LinkedHashMap">
        SELECT PROD_ID as "PROD_ID", GL_AC_HD as "GL A/c Head",
        BILLS_REALISED_HD as "Bills Realised A/c Head", STATUS_BY FROM BILLS_PRODUCT BP
        WHERE (STATUS != 'DELETED' OR STATUS IS NULL)
        AND cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DISTINCT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y', HIERARCHY_ID, HIERARCHY_ID + 1)
        FROM USER_MASTER UM, ROLE_MASTER RM 
        WHERE RM.ROLE_ID = UM.USER_ROLE AND UM.USER_ID = BP.STATUS_BY)
        <dynamic>
            <isEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                BP.AUTHORIZE_STATUS = 'EXCEPTION'
            </isEqual>
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (BP.AUTHORIZE_STATUS IS NULL OR 
                BP.AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
            </isNotEqual>
        </dynamic>
    </dynamic-mapped-statement>

    <mapped-statement name="authorizeBillsProduct" result-class="java.util.HashMap">
        UPDATE BILLS_PRODUCT SET 
        AUTHORIZE_STATUS = #STATUS:VARCHAR#,
        AUTHORIZE_USER = #USER_ID:VARCHAR#, 
        AUTHORIZE_DT = #AUTHORIZEDT:TIMESTAMP#
        WHERE PROD_ID = #PROD_ID:VARCHAR# AND STATUS NOT IN ('DELETED')
    </mapped-statement>
    <mapped-statement name="countProdId" result-class="java.util.HashMap">
        SELECT COUNT(PROD_ID) AS "COUNT" FROM BILLS_PRODUCT
        WHERE PROD_ID = #PROD_ID:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getCommisionAmount" result-class="java.util.HashMap" >
        SELECT BC.COMMISION FROM BILLS_CHARGES BC
        WHERE  BC.PROD_ID = #BILLS_TYPE:VARCHAR# AND #AMOUNT:NUMBER#
        BETWEEN BC.FROM_SLAB AND BC.TO_SLAB
    </mapped-statement>

</sql-map>