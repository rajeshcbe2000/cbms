<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="IntroSelfMap">

	<!-- Use IntroSelf object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertIntroSelf" inline-parameters="true">
        INSERT INTO ACT_INTRO_SELF
        (ACT_NUM, ACT_NUM_INTRO, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #actNum:VARCHAR#, #actNumIntro:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:DATE#)
    </mapped-statement>

	<!-- Use IntroSelf object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateIntroSelf" inline-parameters="true">
        UPDATE ACT_INTRO_SELF SET 
<!--		ACT_NUM = #actNum:VARCHAR#, -->
        ACT_NUM_INTRO = #actNumIntro:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use IntroSelf object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteIntroSelf" inline-parameters="true">
        UPDATE ACT_INTRO_SELF SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:DATE# 
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to IntroSelf object (JavaBean) properties -->
    <result-map name="getIntroSelfResult" class="com.see.truetransact.transferobject.common.introducer.IntroSelfTO">
        <property name="actNum" column="ACT_NUM"/>
        <property name="actNumIntro" column="ACT_NUM_INTRO"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectIntroSelf" result-map="getIntroSelfResult" >
        SELECT * FROM ACT_INTRO_SELF 
        WHERE ACT_NUM = #value:VARCHAR#
        AND STATUS != 'DELETED'
    </mapped-statement>
        
        
        
<!-- ============================================================================ -->        
        
        
        <!-- Use IntroIdentity object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertIntroIdentity" inline-parameters="true">
        INSERT INTO ACT_INTRO_PROOF
        (ACT_NUM, PROOF_TYPE_ID, PROOF_NUM, ISSUE_AUTH, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #actNum:VARCHAR#, #proofTypeId:VARCHAR#, #proofNum:VARCHAR#, #issueAuth:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:DATE#)
    </mapped-statement>
        

	<!-- Use IntroIdentity object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateIntroIdentity" inline-parameters="true">
        UPDATE ACT_INTRO_PROOF SET 
<!--		ACT_NUM = #actNum:VARCHAR#,-->
        PROOF_TYPE_ID = #proofTypeId:VARCHAR#,
        PROOF_NUM = #proofNum:VARCHAR#,
        ISSUE_AUTH = #issueAuth:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use IntroIdentity object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteIntroIdentity" inline-parameters="true">
        UPDATE ACT_INTRO_PROOF SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:DATE# 
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to IntroIdentity object (JavaBean) properties -->
    <result-map name="getIntroIdentityResult" class="com.see.truetransact.transferobject.common.introducer.IntroIdentityTO">
        <property name="actNum" column="ACT_NUM"/>
        <property name="proofTypeId" column="PROOF_TYPE_ID"/>
        <property name="proofNum" column="PROOF_NUM"/>
        <property name="issueAuth" column="ISSUE_AUTH"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectIntroIdentity" result-map="getIntroIdentityResult" >
        SELECT * FROM ACT_INTRO_PROOF 
        WHERE ACT_NUM = #value:VARCHAR#
        AND STATUS != 'DELETED'
    </mapped-statement>
        
<!-- ================================================================================ -->

    <!-- Use IntroOthers object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertIntroOthers" inline-parameters="true">
        INSERT INTO ACT_INTRO_OTHERS
        (ACT_NUM, INTRO_NAME, INTRO_DESIG, STREET, AREA, CITY, STATE, PIN_CODE, AREA_CODE, PH_NO, COUNTRY_CODE, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #actNum:VARCHAR#, #introName:VARCHAR#, #introDesig:VARCHAR#, #street:VARCHAR#, #area:VARCHAR#, #city:VARCHAR#, #state:VARCHAR#, #pinCode:VARCHAR#, #areaCode:VARCHAR#, #phNo:VARCHAR#, #countryCode:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:DATE#)
    </mapped-statement>

	<!-- Use IntroOthers object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateIntroOthers" inline-parameters="true">
        UPDATE ACT_INTRO_OTHERS SET 
<!--		ACT_NUM = #actNum:VARCHAR#,-->
        INTRO_NAME = #introName:VARCHAR#,
        INTRO_DESIG = #introDesig:VARCHAR#,
        STREET = #street:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        PIN_CODE = #pinCode:VARCHAR#,
        AREA_CODE = #areaCode:VARCHAR#,
        PH_NO = #phNo:VARCHAR#,
        COUNTRY_CODE = #countryCode:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use IntroOthers object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteIntroOthers" inline-parameters="true">
        UPDATE ACT_INTRO_OTHERS SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:DATE# 
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to IntroOthers object (JavaBean) properties -->
    <result-map name="getIntroOthersResult" class="com.see.truetransact.transferobject.common.introducer.IntroOthersTO">
        <property name="actNum" column="ACT_NUM"/>
        <property name="introName" column="INTRO_NAME"/>
        <property name="introDesig" column="INTRO_DESIG"/>
        <property name="street" column="STREET"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="pinCode" column="PIN_CODE"/>
        <property name="areaCode" column="AREA_CODE"/>
        <property name="phNo" column="PH_NO"/>
        <property name="countryCode" column="COUNTRY_CODE"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectIntroOthers" result-map="getIntroOthersResult" >
        SELECT * FROM ACT_INTRO_OTHERS 
        WHERE ACT_NUM = #value:VARCHAR#
        AND STATUS != 'DELETED'
    </mapped-statement>
        
<!-- ===========================================================================================-->

<!-- Use IntroOtherBank object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertIntroOtherBank" inline-parameters="true">
        INSERT INTO ACT_INTRO_OTHERBANK
        (ACT_NUM, BANK_NAME, BRANCH_NAME, OTHER_ACT_NUM, OTHER_ACT_NAME, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #actNum:VARCHAR#, #bankName:VARCHAR#, #branchName:VARCHAR#, #otherActNum:VARCHAR#, #otherActName:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:DATE#)
    </mapped-statement>

	<!-- Use IntroOtherBank object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateIntroOtherBank" inline-parameters="true">
        UPDATE ACT_INTRO_OTHERBANK SET 
<!--		ACT_NUM = #actNum:VARCHAR#,-->
        BANK_NAME = #bankName:VARCHAR#,
        BRANCH_NAME = #branchName:VARCHAR#,
        OTHER_ACT_NUM = #otherActNum:VARCHAR#,
        OTHER_ACT_NAME = #otherActName:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use IntroOtherBank object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteIntroOtherBank" inline-parameters="true">
        UPDATE ACT_INTRO_OTHERBANK SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:DATE#
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to IntroOtherBank object (JavaBean) properties -->
    <result-map name="getIntroOtherBankResult" class="com.see.truetransact.transferobject.common.introducer.IntroOtherBankTO">
        <property name="actNum" column="ACT_NUM"/>
        <property name="bankName" column="BANK_NAME"/>
        <property name="branchName" column="BRANCH_NAME"/>
        <property name="otherActNum" column="OTHER_ACT_NUM"/>
        <property name="otherActName" column="OTHER_ACT_NAME"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectIntroOtherBank" result-map="getIntroOtherBankResult" >
        SELECT * FROM ACT_INTRO_OTHERBANK 
        WHERE ACT_NUM = #value:VARCHAR#
        AND STATUS != 'DELETED'
    </mapped-statement>
        
        
<!-- ================================================================================= -->

       <!-- Use IntroDocDetails object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertIntroDocDetails" inline-parameters="true">
        INSERT INTO ACT_INTRO_DOC
        (ACT_NUM, DOC_TYPE, ISSUE_DT, EXPIRY_DT, ISSUED_BY, DOC_NO, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #actNum:VARCHAR#, #docType:VARCHAR#, #issueDt:DATE#, #expiryDt:DATE#, #issuedBy:VARCHAR#, #docNo:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:DATE#)
    </mapped-statement>

	<!-- Use IntroDocDetails object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateIntroDocDetails" inline-parameters="true">
        UPDATE ACT_INTRO_DOC SET 
<!--		ACT_NUM = #actNum:VARCHAR#,-->
        DOC_TYPE = #docType:VARCHAR#,
        ISSUE_DT = #issueDt:DATE#,
        EXPIRY_DT = #expiryDt:DATE#,
        ISSUED_BY = #issuedBy:VARCHAR#,
        DOC_NO = #docNo:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use IntroDocDetails object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteIntroDocDetails" inline-parameters="true">
        UPDATE ACT_INTRO_DOC SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:DATE# 
        WHERE ACT_NUM = #actNum:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to IntroDocDetails object (JavaBean) properties -->
    <result-map name="getIntroDocDetailsResult" class="com.see.truetransact.transferobject.common.introducer.IntroDocDetailsTO">
        <property name="actNum" column="ACT_NUM"/>
        <property name="docType" column="DOC_TYPE"/>
        <property name="issueDt" column="ISSUE_DT"/>
        <property name="expiryDt" column="EXPIRY_DT"/>
        <property name="issuedBy" column="ISSUED_BY"/>
        <property name="docNo" column="DOC_NO"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectIntroDocDetails" result-map="getIntroDocDetailsResult" >
        SELECT * FROM ACT_INTRO_DOC 
        WHERE ACT_NUM = #value:VARCHAR#
        AND STATUS != 'DELETED'
    </mapped-statement>
        

</sql-map>