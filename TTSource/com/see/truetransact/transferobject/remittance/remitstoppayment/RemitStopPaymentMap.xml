<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="RemitStopPaymentToMap">

	<!-- Use RemitStopPaymentTo object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertRemitStopPaymentTO" inline-parameters="true">
        INSERT INTO DD_STOP_PAYMENT
        (STOP_PAYMENT_ID, PROD_ID, DD_LEAF_TYPE, START_DD_NO1, START_DD_NO2, END_DD_NO1, END_DD_NO2, START_VARIABLE_NO, END_VARIABLE_NO, REMARKS, CREATED_BY, CREATED_DT, STATUS, STATUS_BY, STATUS_DT, AUTHORIZE_STATUS, AUTHORIZE_DT, AUTHORIZE_BY, STOP_STATUS, BRANCH_ID, INITIATED_BRANCH, REVOKED_REMARKS, STOP_STATUS_DT,REVOKE_STATUS_DT
        ) VALUES (
        #stopPaymentId:VARCHAR#, #prodId:VARCHAR#, #ddLeafType:VARCHAR#, #startDdNo1:VARCHAR#, #startDdNo2:VARCHAR#, #endDdNo1:VARCHAR#, #endDdNo2:VARCHAR#, #startVariableNo:VARCHAR#, #endVariableNo:VARCHAR#, #remarks:VARCHAR#, #createdBy:VARCHAR#, #createdDt:TIMESTAMP#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #authorizeStatus:VARCHAR#, #authorizeDt:DATE#, #authorizeBy:VARCHAR#, #stopStatus:VARCHAR#, #branchId:VARCHAR#, #initiatedBranch:VARCHAR#, #revokeRemark:VARCHAR#, #stopStatusDt:DATE#, #revokeStatusDt:DATE#)
    </mapped-statement>

	<!-- Use RemitStopPaymentTo object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateRemitStopPaymentTO" inline-parameters="true">
        UPDATE DD_STOP_PAYMENT SET 
<!--		STOP_PAYMENT_ID = #stopPaymentId:VARCHAR#,
		PROD_ID = #prodId:VARCHAR#,-->
        DD_LEAF_TYPE = #ddLeafType:VARCHAR#,
        START_DD_NO1 = #startDdNo1:VARCHAR#,
        START_DD_NO2 = #startDdNo2:VARCHAR#,
        END_DD_NO1 = #endDdNo1:VARCHAR#,
        END_DD_NO2 = #endDdNo2:VARCHAR#,
        START_VARIABLE_NO = #startVariableNo:VARCHAR#,
        END_VARIABLE_NO = #endVariableNo:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        REVOKED_REMARKS = #revokeRemark:VARCHAR#,
<!--		CREATED_BY = #createdBy:VARCHAR#,
		CREATED_DT = #createdDt:DATE#,-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#,
<!--		AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
		AUTHORIZE_DT = #authorizeDt:DATE#,
		AUTHORIZE_BY = #authorizeBy:VARCHAR#,
		BRANCH_ID = #branchId:VARCHAR# , -->
        STOP_STATUS = #stopStatus:VARCHAR#,
        INITIATED_BRANCH = #initiatedBranch:VARCHAR#
        WHERE STOP_PAYMENT_ID = #stopPaymentId:VARCHAR#
    </mapped-statement>

	<!-- Use RemitStopPaymentTo object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteRemitStopPaymentTO" inline-parameters="true">
        UPDATE DD_STOP_PAYMENT SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:TIMESTAMP#
        WHERE STOP_PAYMENT_ID = #stopPaymentId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to RemitStopPaymentTo object (JavaBean) properties -->
    <result-map name="getRemitStopPaymentToResult" class="com.see.truetransact.transferobject.remittance.remitstoppayment.RemitStopPaymentTO">
        <property name="stopPaymentId" column="STOP_PAYMENT_ID"/>
        <property name="prodId" column="PROD_ID"/>
        <property name="ddLeafType" column="DD_LEAF_TYPE"/>
        <property name="startDdNo1" column="START_DD_NO1"/>
        <property name="startDdNo2" column="START_DD_NO2"/>
        <property name="endDdNo1" column="END_DD_NO1"/>
        <property name="endDdNo2" column="END_DD_NO2"/>
        <property name="startVariableNo" column="START_VARIABLE_NO"/>
        <property name="endVariableNo" column="END_VARIABLE_NO"/>
        <property name="remarks" column="REMARKS"/>
        <property name="revokeRemark" column="REVOKED_REMARKS"/>
        <property name="createdBy" column="CREATED_BY"/>
        <property name="createdDt" column="CREATED_DT"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="authorizeDt" column="AUTHORIZE_DT"/>
        <property name="authorizeBy" column="AUTHORIZE_BY"/>
        <property name="stopStatus" column="STOP_STATUS"/>
        <property name="branchId" column="BRANCH_ID"/>
        <property name="initiatedBranch" column="INITIATED_BRANCH"/>
        <property name="stopStatusDt" column="STOP_STATUS_DT"/>
        <property name="revokeStatusDt" column="REVOKE_STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectRemitStopPaymentTO" result-map="getRemitStopPaymentToResult" >
        SELECT * FROM DD_STOP_PAYMENT 
        WHERE STOP_PAYMENT_ID = #value:VARCHAR#
    </mapped-statement>
        
    <dynamic-mapped-statement name="viewStopDDPayment" result-class="java.util.LinkedHashMap">
		<!--SELECT STOP_PAYMENT_ID as "Stop Payment ID", PROD_ID as "Product ID,", BRANCH_ID as "Issue Branch", STATUS 
                FROM DD_STOP_PAYMENT 
                WHERE STATUS != 'DELETED'
                AND STOP_STATUS != 'REVOKED'-->
        SELECT DSP.STOP_PAYMENT_ID as "Stop Payment ID", DSP.PROD_ID as "Product ID",  DSP.BRANCH_ID as "Issue Branch", RI.BATCH_DT AS "Issue Date",
        CONCAT(DSP.START_DD_NO1,DSP.START_DD_NO2) AS "Instr From", CONCAT(DSP.END_DD_NO1,DSP.END_DD_NO2) AS "Instr To", 
        DSP.START_VARIABLE_NO AS "Variable No From", DSP.END_VARIABLE_NO AS "Variable No To", RI.AMOUNT AS "Amount",
        DSP.AUTHORIZE_STATUS,DSP.STOP_STATUS,ri.remarks,ri.paid_status
        FROM DD_STOP_PAYMENT DSP,REMIT_ISSUE RI   WHERE DSP.STATUS != 'DELETED'   AND ((DSP.STOP_STATUS != 'STOPPED' AND 
        DSP.AUTHORIZE_STATUS = 'REJECTED')  OR (DSP.STOP_STATUS != 'REVOKED' AND (DSP.AUTHORIZE_STATUS = 'AUTHORIZED' OR 
        DSP.AUTHORIZE_STATUS IS NULL))) AND RI.VARIABLE_NO = DSP.START_VARIABLE_NO 
         <dynamic>
             <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="Stop Payment ID">
                    UPPER(DSP.STOP_PAYMENT_ID) LIKE UPPER('%$Stop Payment ID$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="Product ID">
                    UPPER(DSP.PROD_ID) LIKE UPPER('%$Product ID$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="Issue Branch">
                    UPPER(DSP.BRANCH_ID) LIKE UPPER('%$Issue Branch$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="Issue Date">
                    UPPER(RI.BATCH_DT) LIKE UPPER('%$Issue Date$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="Instr From">
                    UPPER(CONCAT(DSP.START_DD_NO1,DSP.START_DD_NO2)) LIKE UPPER('%$Instr From$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="Instr To">
                    UPPER(CONCAT(DSP.END_DD_NO1,DSP.END_DD_NO2)) LIKE UPPER('%$Instr To$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="Variable No From">
                    UPPER(DSP.START_VARIABLE_NO) LIKE UPPER('%$Variable No From$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="Amount">
                    UPPER(RI.AMOUNT) LIKE UPPER('%$Amount$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="STOP_STATUS">
                    UPPER(DSP.STOP_STATUS) LIKE UPPER('%$STOP_STATUS$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="Variable No To">
                    UPPER(DSP.END_VARIABLE_NO) LIKE UPPER('%$Variable No To$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="paid_status">
                    UPPER(ri.paid_status) LIKE UPPER('%$paid_status$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>
        
    <dynamic-mapped-statement name="getDDStopData" result-class="java.util.LinkedHashMap" >
                <!--SELECT RI.INSTRUMENT_NO1 AS "Instrument No1" , RI.INSTRUMENT_NO2 AS "Instrument No2" , RI.VARIABLE_NO AS "Variable No",  RI.BATCH_DT AS "Issue Date", RI.FAVOURING AS "Payee Name", RI.AMOUNT AS "Amount"
                FROM REMIT_ISSUE RI, REMIT_PAYMENT RP
                WHERE RI.STATUS != 'DELETED'
                
                AND RI.VARIABLE_NO = RP.SERIAL_NO
                 OR (RI.AUTHORIZE_STATUS = 'AUTHORIZED' AND RP.PAY_STATUS != 'PAID')
                AND RI.PROD_ID = #PRODID# -->
                <!--AND (RI.INSTRUMENT_NO1 || RI.INSTRUMENT_NO2 NOT IN 
                (SELECT DSP.START_DD_NO1 || DSP.START_DD_NO2 FROM DD_STOP_PAYMENT DSP WHERE
                                DSP.END_DD_NO1 || DSP.END_DD_NO2 IS NULL AND DSP.STATUS != 'DELETED' AND DSP.STOP_STATUS != 'REVOKED'))-->
                 <!--AND  NOT EXISTS 
                (SELECT DSP.START_DD_NO1 || DSP.START_DD_NO2 FROM DD_STOP_PAYMENT DSP WHERE
                                DSP.END_DD_NO1 || DSP.END_DD_NO2 IS NULL AND DSP.STATUS != 'DELETED' AND DSP.STOP_STATUS != 'REVOKED' AND RI.INSTRUMENT_NO1 || RI.INSTRUMENT_NO2=DSP.START_DD_NO1 || DSP.START_DD_NO2  AND DSP.AUTHORIZE_STATUS != 'REJECTED')
                                               
                                
            <dynamic>
                <isParameterPresent>
                    <isNotNull prepend="AND" property="INSTRUMENTNO1">
                       RI.INSTRUMENT_NO1 = #INSTRUMENTNO1#
                    </isNotNull>
                    <isNotNull prepend="AND" property="INSTRUMENTNO2">
                       TO_NUMBER(RI.INSTRUMENT_NO2) &gt; TO_NUMBER(#INSTRUMENTNO2#)
                    </isNotNull>
                </isParameterPresent>
            </dynamic>
            
                MINUS 
                 SELECT RI.INSTRUMENT_NO1 AS "Instrument No1" , RI.INSTRUMENT_NO2 AS "Instrument No2" , RI.VARIABLE_NO AS "Variable No",  RI.BATCH_DT AS "Issue Date", RI.FAVOURING AS "Payee Name", RI.AMOUNT AS "Amount"
                                FROM REMIT_ISSUE RI, DD_STOP_PAYMENT DSP, REMIT_PAYMENT RP
                                WHERE RI.STATUS != 'DELETED'
              
                                AND RI.VARIABLE_NO = RP.SERIAL_NO
                                OR (RI.AUTHORIZE_STATUS = 'AUTHORIZED' AND RP.PAY_STATUS != 'PAID')
                                
                                AND RI.PROD_ID = #PRODID# 
                                AND  (RI.INSTRUMENT_NO1 || RI.INSTRUMENT_NO2 BETWEEN DSP.START_DD_NO1 || DSP.START_DD_NO2  
                                AND DSP.END_DD_NO1 || DSP.END_DD_NO2)
                                AND DSP.STATUS != 'DELETED' AND DSP.STOP_STATUS != 'REVOKED'-->
                                
                <!--SELECT RI.INSTRUMENT_NO1 AS "Instrument No1" , RI.INSTRUMENT_NO2 AS "Instrument No2" ,  RI.VARIABLE_NO AS 
                "Variable No",  RI.BATCH_DT AS "Issue Date", RI.FAVOURING AS "Payee Name",  RI.AMOUNT AS "Amount",RI.BRANCH_ID   FROM REMIT_ISSUE RI    WHERE    RI.PROD_ID = #PRODID# AND 
                RI.AUTHORIZE_STATUS = 'AUTHORIZED' AND  RI.STATUS != 'DELETED' AND RI.BRANCH_ID = #BRANCH_ID#
                AND RI.INSTRUMENT_NO2 NOT IN (SELECT INSTRUMENT_NO2 FROM REMIT_PAYMENT WHERE PAY_STATUS IN ('PAID','CANCEL')
                AND AUTHORIZE_STATUS = 'AUTHORIZED' AND STATUS != 'DELETED' AND INSTRUMENT_NO1 IS NOT NULL AND INSTRUMENT_NO2 IS NOT NULL) AND  
                NOT EXISTS (SELECT DSP.START_DD_NO1,DSP.START_DD_NO2 FROM DD_STOP_PAYMENT DSP WHERE 
                DSP.STATUS !=  'DELETED' AND DSP.STOP_STATUS != 'REVOKED' AND (((RI.INSTRUMENT_NO1 = DSP.START_DD_NO1) AND (RI.INSTRUMENT_NO2 = DSP.START_DD_NO2 ))  
                OR (((RI.INSTRUMENT_NO1 = DSP.START_DD_NO1 AND RI.INSTRUMENT_NO1 = DSP.END_DD_NO1)) AND (RI.INSTRUMENT_NO2 BETWEEN DSP.START_DD_NO2
                AND DSP.END_DD_NO2)))  AND DSP.AUTHORIZE_STATUS != 'REJECTED')  and RI.INSTRUMENT_NO1 IS NOT NULL AND RI.INSTRUMENT_NO2 IS NOT NULL 
                AND RI.INSTRUMENT_NO2 NOT IN (SELECT START_DD_NO2  FROM DD_STOP_PAYMENT  WHERE STOP_STATUS = 'STOPPED'
                AND  AUTHORIZE_STATUS IS NULL AND BRANCH_ID = #BRANCH_ID# and status in ('CREATED','MODIFIED'))  
                AND RI.INSTRUMENT_NO2 NOT IN (SELECT START_DD_NO2  FROM DD_STOP_PAYMENT  WHERE STOP_STATUS = 'REVOKED'
                AND  (AUTHORIZE_STATUS IS NULL or AUTHORIZE_STATUS = 'REJECTED') AND BRANCH_ID = #BRANCH_ID# and status in ('CREATED','MODIFIED'))          
                
            <dynamic>
                <isParameterPresent>
                    <isNotNull prepend="AND" property="INSTRUMENTNO1">
                       RI.INSTRUMENT_NO1 = #INSTRUMENTNO1#
                    </isNotNull>
                    <isNotNull prepend="AND" property="INSTRUMENTNO2">
                       TO_NUMBER(RI.INSTRUMENT_NO2) &gt; TO_NUMBER(#INSTRUMENTNO2#)
                    </isNotNull>
                </isParameterPresent>
            </dynamic>
            
                MINUS 
                SELECT RI.INSTRUMENT_NO1 AS "Instrument No1" , RI.INSTRUMENT_NO2 AS "Instrument No2" ,  RI.VARIABLE_NO AS 
                "Variable No",  RI.BATCH_DT AS "Issue Date", RI.FAVOURING AS "Payee Name",  RI.AMOUNT AS "Amount",RI.BRANCH_ID   FROM 
                REMIT_ISSUE RI, DD_STOP_PAYMENT DSP, REMIT_PAYMENT RP   WHERE  RI.STATUS != 'DELETED'   AND 
                RI.VARIABLE_NO = RP.SERIAL_NO   OR (RI.AUTHORIZE_STATUS =  'AUTHORIZED' AND RP.PAY_STATUS != 'PAID') AND 
                RI.PROD_ID = #PRODID# AND (((RI.INSTRUMENT_NO1 = DSP.START_DD_NO1) AND (RI.INSTRUMENT_NO2 = DSP.START_DD_NO2 ))  
                OR (((RI.INSTRUMENT_NO1 = DSP.START_DD_NO1 AND RI.INSTRUMENT_NO1 = DSP.END_DD_NO1)) AND (RI.INSTRUMENT_NO2 BETWEEN DSP.START_DD_NO2
                AND DSP.END_DD_NO2)))  AND DSP.STATUS != 'DELETED' AND ((DSP.STOP_STATUS != 'REVOKED' AND
                DSP.AUTHORIZE_STATUS IS NULL OR DSP.AUTHORIZE_STATUS = 'REJECTED') or
                (DSP.STOP_STATUS = 'REVOKED' AND DSP.AUTHORIZE_STATUS IS NULL ) OR (DSP.STOP_STATUS = 'REVOKED'
                AND DSP.AUTHORIZE_STATUS = 'REJECTED')) AND RI.BRANCH_ID = #BRANCH_ID# 
                AND RI.INSTRUMENT_NO2 NOT IN (SELECT START_DD_NO2  FROM DD_STOP_PAYMENT  WHERE STOP_STATUS = 'STOPPED'
                AND AUTHORIZE_STATUS = 'REJECTED' AND BRANCH_ID = #BRANCH_ID#) -->
        SELECT RI.INSTRUMENT_NO1 AS "Instrument No1" , RI.INSTRUMENT_NO2 AS "Instrument No2" ,  RI.VARIABLE_NO AS 
        "Variable No", RI.BATCH_DT AS "Issue Date", RI.FAVOURING AS "Payee Name",  RI.AMOUNT AS "Amount", RI.BRANCH_ID, ri.remarks,
        ri.PAID_STATUS
        FROM REMIT_ISSUE RI WHERE RI.PROD_ID = #PRODID:VARCHAR# AND RI.AUTHORIZE_STATUS = 'AUTHORIZED' AND  RI.STATUS != 'DELETED' AND 
        RI.BRANCH_ID = #BRANCH_ID:VARCHAR# AND RI.INSTRUMENT_NO2 NOT IN (SELECT INSTRUMENT_NO2 FROM REMIT_PAYMENT WHERE PAY_STATUS IN 
        ('PAID','CANCEL')   AND STATUS != 'DELETED' AND INSTRUMENT_NO1 IS NOT NULL AND 
        INSTRUMENT_NO2 IS NOT NULL AND (AUTHORIZE_STATUS = 'AUTHORIZED'
        OR AUTHORIZE_STATUS IS NULL)) AND NOT EXISTS (SELECT DSP.START_DD_NO1,DSP.START_DD_NO2 FROM DD_STOP_PAYMENT DSP WHERE
        DSP.STATUS !=  'DELETED' AND DSP.STOP_STATUS = 'STOPPED' AND
        (((RI.INSTRUMENT_NO1 = DSP.START_DD_NO1) AND (RI.INSTRUMENT_NO2 = DSP.START_DD_NO2 )) OR 
        (((RI.INSTRUMENT_NO1 = DSP.START_DD_NO1 AND RI.INSTRUMENT_NO1 = DSP.END_DD_NO1)) AND 
        (RI.INSTRUMENT_NO2 BETWEEN DSP.START_DD_NO2  AND DSP.END_DD_NO2)))  AND (DSP.AUTHORIZE_STATUS = 'AUTHORIZED'
        OR DSP.AUTHORIZE_STATUS IS NULL) and DSP.BRANCH_ID = #BRANCH_ID:VARCHAR#) 
        AND NOT EXISTS (SELECT DSP.START_DD_NO1,DSP.START_DD_NO2 FROM DD_STOP_PAYMENT DSP WHERE
        DSP.STATUS !=  'DELETED' AND DSP.STOP_STATUS = 'REVOKED' AND
        (((RI.INSTRUMENT_NO1 = DSP.START_DD_NO1) AND (RI.INSTRUMENT_NO2 = DSP.START_DD_NO2 )) OR 
        (((RI.INSTRUMENT_NO1 = DSP.START_DD_NO1 AND RI.INSTRUMENT_NO1 = DSP.END_DD_NO1)) AND 
        (RI.INSTRUMENT_NO2 BETWEEN DSP.START_DD_NO2  AND DSP.END_DD_NO2)))  AND (DSP.AUTHORIZE_STATUS IS NULL
        OR DSP.AUTHORIZE_STATUS = 'REJECTED') AND DSP.BRANCH_ID = #BRANCH_ID:VARCHAR#)  
        AND
        RI.INSTRUMENT_NO1 IS NOT NULL AND RI.INSTRUMENT_NO2 IS NOT NULL AND 
        (RI.PAID_STATUS NOT IN('PAID','CANCEL') OR RI.PAID_STATUS IS NULL)
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="INSTRUMENTNO1">
                    RI.INSTRUMENT_NO1 = #INSTRUMENTNO1:VARCHAR#
                </isNotNull>
                <isNotNull prepend="AND" property="INSTRUMENTNO2">
                    TO_NUMBER(RI.INSTRUMENT_NO2) &gt; TO_NUMBER(#INSTRUMENTNO2:VARCHAR#)
                </isNotNull>
            </isParameterPresent>
             <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
          <isParameterPresent>
                <isNotNull prepend="AND"      property="Instrument No1">
                    UPPER(RI.INSTRUMENT_NO1) LIKE UPPER('%$Instrument No1$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="Instrument No2">
                    UPPER(RI.INSTRUMENT_NO2) LIKE UPPER('%$Instrument No2$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="Variable No">
                    UPPER(RI.VARIABLE_NO) LIKE UPPER('%$Variable No$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="Issue Date">
                    UPPER(RI.BATCH_DT) LIKE UPPER('%$Issue Date$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="Payee Name">
                    UPPER(RI.FAVOURING) LIKE UPPER('%$Payee Name$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="Amount">
                    UPPER(RI.AMOUNT) LIKE UPPER('%$Amount$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="BRANCH_ID">
                    UPPER(RI.BRANCH_ID) LIKE UPPER('%$BRANCH_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="PAID_STATUS">
                    UPPER(ri.PAID_STATUS) LIKE UPPER('%$PAID_STATUS$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic>            
    </dynamic-mapped-statement>
    
    
    <mapped-statement name="getStopDDDetails" result-class="java.util.HashMap" >
        SELECT BATCH_DT, FAVOURING, AMOUNT
        FROM REMIT_ISSUE
        WHERE STATUS != 'DELETED'
        AND AUTHORIZE_STATUS = 'AUTHORIZED' 
        AND INSTRUMENT_NO1= #INSTRUMENTNO1:VARCHAR#
        AND  INSTRUMENT_NO2 = #INSTRUMENTNO2:VARCHAR#
        AND VARIABLE_NO = #VARIABLENO:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="DDStop.setPaymentRevoke" result-class="java.util.HashMap">
        UPDATE DD_STOP_PAYMENT SET 
        STOP_STATUS = #STOPSTATUS:VARCHAR#,
        AUTHORIZE_STATUS = '',
        REVOKED_REMARKS = #REVOKE_REMARK:VARCHAR#,
        REVOKE_STATUS_DT = #REVOKE_STATUS_DT:DATE#
        WHERE STOP_PAYMENT_ID = #STOPPAYMENTID:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="rejectDDStopPayment" result-class="java.util.HashMap">
        UPDATE DD_STOP_PAYMENT SET 
        STOP_STATUS = #STOP_STATUS:VARCHAR#,
        AUTHORIZE_STATUS = #STATUS:VARCHAR#,
        REVOKED_REMARKS = '',
        REVOKE_STATUS_DT = ''
        WHERE STOP_PAYMENT_ID = #STOPPAYMENTID:VARCHAR#
    </mapped-statement>
        

<!-- ========================================================================================================== -->

   

    <dynamic-mapped-statement name="getDDStopPaymentAuthorizeList" result-class="java.util.LinkedHashMap">
        SELECT STOP_PAYMENT_ID as "Stop Payment ID", PROD_ID as "Product ID,", BRANCH_ID as "Issue Branch", STATUS,
        STOP_STATUS,AUTHORIZE_STATUS FROM DD_STOP_PAYMENT 
        WHERE STATUS != 'DELETED'
        AND STATUS_BY != #USER_ID:VARCHAR#
        AND cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y', HIERARCHY_ID, HIERARCHY_ID + 1)
        FROM USER_MASTER UM, ROLE_MASTER RM 
        WHERE INITIATED_BRANCH = #BRANCH_CODE:VARCHAR# AND
        RM.ROLE_ID = UM.USER_ROLE AND UM.USER_ID = DD_STOP_PAYMENT.STATUS_BY)
        <dynamic>
            <isEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                AUTHORIZE_STATUS = 'EXCEPTION'
            </isEqual>
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (AUTHORIZE_STATUS IS NULL OR 
                AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
            </isNotEqual>
        </dynamic>    
                                
        ORDER BY STOP_PAYMENT_ID               
<!--            AND (AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED') OR AUTHORIZE_STATUS IS NULL)-->
    </dynamic-mapped-statement> 
        
    <mapped-statement name="authorizeDDStopPayment" result-class="java.util.HashMap">
        UPDATE DD_STOP_PAYMENT SET 
        AUTHORIZE_STATUS = #STATUS:VARCHAR#,
        AUTHORIZE_BY = #USER_ID:VARCHAR#, 
        AUTHORIZE_DT = #AUTHORIZEDT:TIMESTAMP#
        WHERE STOP_PAYMENT_ID = #STOP PAYMENT ID:VARCHAR# 
    </mapped-statement>

    
                

</sql-map>