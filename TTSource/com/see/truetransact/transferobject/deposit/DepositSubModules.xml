<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="DepAuthorizeTOMap">

	<!-- Use DepAuthorizeTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
	<!--mapped-statement name="insertDepAuthorizeTO" inline-parameters="true">
		INSERT INTO DEPOSIT_AUTHORIZE
		(DEPOSIT_NO, AUTHRIZE_NO, CUST_ID, CUST_NAME, COMM_ADDR, STREET, AREA, CITY, STATE, COUNTRY_CODE, PINCODE, LIMITS, DESIGNATION, HOME_PHONE, HOME_FAX, PAGER, EMAIL_ID, BUSINESS_PHONE, BUSINESS_FAX, MOBILE, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, STATUS, SLNO
		) VALUES (
		#depositNo:VARCHAR#, #authrizeNo:VARCHAR#, #custId:VARCHAR#, #custName:VARCHAR#, #commAddr:VARCHAR#, #street:VARCHAR#, #area:VARCHAR#, #city:VARCHAR#, #state:VARCHAR#, #countryCode:VARCHAR#, #pincode:VARCHAR#, #limits:NUMERIC#, #designation:VARCHAR#, #homePhone:VARCHAR#, #homeFax:VARCHAR#, #pager:VARCHAR#, #emailId:VARCHAR#, #businessPhone:VARCHAR#, #businessFax:VARCHAR#, #mobile:VARCHAR#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #status:VARCHAR#, #slno:VARCHAR#)
	</mapped-statement-->
        
    <mapped-statement name="insertAuthorizedSignatoryTOTD" inline-parameters="true">
        INSERT INTO DEPOSIT_AUTHORIZE
        (DEPOSIT_NO, AUTHRIZE_NO, CUST_ID, CUST_NAME, COMM_ADDR, STREET, AREA, CITY, STATE, COUNTRY_CODE, PINCODE, LIMITS, DESIGNATION, HOME_PHONE, HOME_FAX, PAGER, EMAIL_ID, BUSINESS_PHONE, BUSINESS_FAX, MOBILE, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, STATUS, SLNO, STATUS_BY, STATUS_DT
        ) VALUES (
        #borrowNo:VARCHAR#, #authrizeNo:VARCHAR#, #custId:VARCHAR#, #custName:VARCHAR#, #commAddr:VARCHAR#, #street:VARCHAR#, #area:VARCHAR#, #city:VARCHAR#, #state:VARCHAR#, #countryCode:VARCHAR#, #pincode:VARCHAR#, #limits:NUMERIC#, #designation:VARCHAR#, #homePhone:VARCHAR#, #homeFax:VARCHAR#, #pager:VARCHAR#, #emailId:VARCHAR#, #businessPhone:VARCHAR#, #businessFax:VARCHAR#, #mobile:VARCHAR#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #status:VARCHAR#, #slNo:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>
        
	<!-- Use DepAuthorizeTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAuthorizedSignatoryTOTD" inline-parameters="true">
        UPDATE DEPOSIT_AUTHORIZE SET 
        AUTHRIZE_NO = #authrizeNo:VARCHAR#,
        CUST_ID = #custId:VARCHAR#,
        CUST_NAME = #custName:VARCHAR#,
        COMM_ADDR = #commAddr:VARCHAR#,
        STREET = #street:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        COUNTRY_CODE = #countryCode:VARCHAR#,
        PINCODE = #pincode:VARCHAR#,
        LIMITS = #limits:NUMERIC#,
        DESIGNATION = #designation:VARCHAR#,
        HOME_PHONE = #homePhone:VARCHAR#,
        HOME_FAX = #homeFax:VARCHAR#,
        PAGER = #pager:VARCHAR#,
        EMAIL_ID = #emailId:VARCHAR#,
        BUSINESS_PHONE = #businessPhone:VARCHAR#,
        BUSINESS_FAX = #businessFax:VARCHAR#,
        MOBILE = #mobile:VARCHAR#,
        AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE DEPOSIT_NO = #borrowNo:VARCHAR# AND SLNO = #slNo# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>

	<!-- Use DepAuthorizeTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAuthorizedSignatoryTOTD" inline-parameters="true">
        UPDATE DEPOSIT_AUTHORIZE SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE DEPOSIT_NO = #borrowNo:VARCHAR# AND SLNO = #slNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to DepAuthorizeTO object (JavaBean) properties 
             com.see.truetransact.transferobject.deposit.DepositAuthorizeTO -->
             
    <result-map name="getDepAuthorizeTOResult" class="com.see.truetransact.transferobject.common.authorizedsignatory.AuthorizedSignatoryTO">
		<!--property name="depositNo" column="DEPOSIT_NO"/-->
        <property name="borrowNo" column="DEPOSIT_NO"/>
        <property name="authrizeNo" column="AUTHRIZE_NO"/>
        <property name="custId" column="CUST_ID"/>
        <property name="custName" column="CUST_NAME"/>
        <property name="commAddr" column="COMM_ADDR"/>
        <property name="street" column="STREET"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="countryCode" column="COUNTRY_CODE"/>
        <property name="pincode" column="PINCODE"/>
        <property name="limits" column="LIMITS"/>
        <property name="designation" column="DESIGNATION"/>
        <property name="homePhone" column="HOME_PHONE"/>
        <property name="homeFax" column="HOME_FAX"/>
        <property name="pager" column="PAGER"/>
        <property name="emailId" column="EMAIL_ID"/>
        <property name="businessPhone" column="BUSINESS_PHONE"/>
        <property name="businessFax" column="BUSINESS_FAX"/>
        <property name="mobile" column="MOBILE"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="status" column="STATUS"/>
        <property name="slNo" column="SLNO"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
        
    <mapped-statement name="getSelectAuthorizedSignatoryTOTD" result-map="getDepAuthorizeTOResult" >
        SELECT * FROM DEPOSIT_AUTHORIZE 
        WHERE DEPOSIT_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(SLNO)
    </mapped-statement>
               		
                
    <mapped-statement name="getSelectAuthorizedSignatoryMaxSLNOTD" result-class="java.util.HashMap" >
        SELECT MAX(SLNO) AS MAX_AUTHORIZE_NO FROM DEPOSIT_AUTHORIZE WHERE DEPOSIT_NO = #borrowNo:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
        <!-- Use AuthorizedSignatoryInstructionTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAuthorizedSignatoryInstructionTOTD" inline-parameters="true">
        INSERT INTO DEPOSIT_AUTHORIZE_INSTRUCTION
        (DEPOSIT_NO, SL_NO, FROM_AMT, TO_AMT, INSTRUCTION, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #borrowNo:VARCHAR#, #slNo:NUMERIC#, #fromAmt:NUMERIC#, #toAmt:NUMERIC#, #instruction:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use AuthorizedSignatoryInstructionTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAuthorizedSignatoryInstructionTOTD" inline-parameters="true">
        UPDATE DEPOSIT_AUTHORIZE_INSTRUCTION SET 
        FROM_AMT = #fromAmt:NUMERIC#,
        TO_AMT = #toAmt:NUMERIC#,
        INSTRUCTION = #instruction:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#
        WHERE DEPOSIT_NO = #borrowNo:VARCHAR# AND SL_NO = #slNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use AuthorizedSignatoryInstructionTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAuthorizedSignatoryInstructionTOTD" inline-parameters="true">
        UPDATE DEPOSIT_AUTHORIZE_INSTRUCTION SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE DEPOSIT_NO = #borrowNo:VARCHAR# AND SL_NO = #slNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to AuthorizedSignatoryInstructionTO object (JavaBean) properties -->
    <result-map name="getAuthorizedSignatoryInstructionTOResult" class="com.see.truetransact.transferobject.common.authorizedsignatory.AuthorizedSignatoryInstructionTO">
        <property name="borrowNo" column="DEPOSIT_NO"/>
        <property name="slNo" column="SL_NO"/>
        <property name="fromAmt" column="FROM_AMT"/>
        <property name="toAmt" column="TO_AMT"/>
        <property name="instruction" column="INSTRUCTION"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectAuthorizedSignatoryInstructionTOTD" result-map="getAuthorizedSignatoryInstructionTOResult" >
        SELECT * FROM DEPOSIT_AUTHORIZE_INSTRUCTION 
        WHERE DEPOSIT_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY SL_NO
    </mapped-statement>
        
    <mapped-statement name="getSelectAuthorizedSignatoryInstructionMaxSLNOTD" result-class="java.util.HashMap" >
        SELECT MAX(SL_NO) AS MAX_AUTHORIZE_INSTRUCTION_NO FROM DEPOSIT_AUTHORIZE_INSTRUCTION WHERE DEPOSIT_NO = #borrowNo:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
    <mapped-statement name="insertPowerAttorneyTOTD" inline-parameters="true">
        INSERT INTO DEPOSIT_POA
        (DEPOSIT_NO, POA_NO, POA_HOLDER_NAME, STREET, AREA, CITY, STATE, COUNTRY_CODE, PINCODE, PHONE, PERIOD_FROM, PERIOD_TO, REMARKS, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, STATUS, TO_WHOM, ADDR_TYPE, STATUS_BY, STATUS_DT, CUST_ID
        ) VALUES (
        #borrowNo:VARCHAR#, #poaNo:VARCHAR#, #poaHolderName:VARCHAR#, #street:VARCHAR#, #area:VARCHAR#, #city:VARCHAR#, #state:VARCHAR#, #countryCode:VARCHAR#, #pincode:VARCHAR#, #phone:VARCHAR#, #periodFrom:VARCHAR#, #periodTo:VARCHAR#, #remarks:VARCHAR#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #status:VARCHAR#, #toWhom:VARCHAR#, #addrType:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #custId:VARCHAR# )
    </mapped-statement>

    <mapped-statement name="updatePowerAttorneyTOTD" inline-parameters="true">
        UPDATE DEPOSIT_POA SET 
        DEPOSIT_NO = #borrowNo:VARCHAR#,
        POA_NO = #poaNo:VARCHAR#,
        POA_HOLDER_NAME = #poaHolderName:VARCHAR#,
        STREET = #street:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        COUNTRY_CODE = #countryCode:VARCHAR#,
        PINCODE = #pincode:VARCHAR#,
        PHONE = #phone:VARCHAR#,
        PERIOD_FROM = #periodFrom:VARCHAR#,
        PERIOD_TO = #periodTo:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
        STATUS = #status:VARCHAR#,
        TO_WHOM = #toWhom:VARCHAR#,
        ADDR_TYPE = #addrType:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#,
        CUST_ID = #custId:VARCHAR#
        WHERE DEPOSIT_NO = #borrowNo:VARCHAR# AND POA_NO = #poaNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>


    <mapped-statement name="deletePowerAttorneyTOTD" inline-parameters="true">
        UPDATE DEPOSIT_POA SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE DEPOSIT_NO = #borrowNo:VARCHAR# AND POA_NO = #poaNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

        <!--result-map name="getDepPoaTOResult" class="com.see.truetransact.transferobject.deposit.DepositPoATO"-->
    <result-map name="getDepPoaTOResult" class="com.see.truetransact.transferobject.common.powerofattorney.PowerAttorneyTO">
		<!--property name="depositNo" column="DEPOSIT_NO"/-->
        <property name="borrowNo" column="DEPOSIT_NO"/>
        <property name="poaNo" column="POA_NO"/>
        <property name="poaHolderName" column="POA_HOLDER_NAME"/>
        <property name="street" column="STREET"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="countryCode" column="COUNTRY_CODE"/>
        <property name="pincode" column="PINCODE"/>
        <property name="phone" column="PHONE"/>
        <property name="periodFrom" column="PERIOD_FROM"/>
        <property name="periodTo" column="PERIOD_TO"/>
        <property name="remarks" column="REMARKS"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="status" column="STATUS"/>
        <property name="toWhom" column="TO_WHOM"/>
        <property name="addrType" column="ADDR_TYPE"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="custId" column="CUST_ID"/>
    </result-map>
        
    <mapped-statement name="getSelectPowerAttorneyTOTD" result-map="getDepPoaTOResult" >
        SELECT * FROM DEPOSIT_POA 
        WHERE DEPOSIT_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(POA_NO)
    </mapped-statement>
        
    <mapped-statement name="getSelectPowerAttorneyMaxSLNOTD" result-class="java.util.HashMap" >
        SELECT MAX(POA_NO) AS MAX_POA_NO FROM DEPOSIT_POA 
        WHERE DEPOSIT_NO = #borrowNo:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
        <!-- Use DepositNomTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
             
    <mapped-statement name="insertNomineeTOTD" inline-parameters="true">
        INSERT INTO DEPOSIT_NOMINEE_DETAIL
        (DEPOSIT_NO, NOMINEE_ID, NOMINEE_NAME, RELATIONSHIP, STREET, AREA, CITY, STATE, PIN_CODE, AREA_CODE, PH_NO, SHARE_PER, NOMINEE_STATUS, NOMINEE_DOB, GUARDIAN_NAME, G_STREET, G_AREA, G_CITY, G_STATE, G_PIN_CODE, G_AREA_CODE, G_PH_NO, G_RELATIONSHIP, COUNTRY_CODE, G_COUNTRY_CODE, STATUS, STATUS_BY, STATUS_DT, CUST_ID,NOMINEE_CURRENT_STATUS
        ) VALUES (
        #actNum:VARCHAR#, #nomineeId:VARCHAR#, #nomineeName:VARCHAR#, #relationship:VARCHAR#, #street:VARCHAR#, #area:VARCHAR#, #city:VARCHAR#, #state:VARCHAR#, #pinCode:VARCHAR#, #areaCode:VARCHAR#, #phNo:VARCHAR#, #sharePer:NUMERIC#, #nomineeStatus:VARCHAR#, #nomineeDob:DATE#, #guardianName:VARCHAR#, #gStreet:VARCHAR#, #gArea:VARCHAR#, #gCity:VARCHAR#, #gState:VARCHAR#, #gPinCode:VARCHAR#, #gAreaCode:VARCHAR#, #gPhNo:VARCHAR#, #gRelationship:VARCHAR#, #countryCode:VARCHAR#, #gCountryCode:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:DATE#, #custId:VARCHAR#,#nomineeCurrStatus:VARCHAR#)
    </mapped-statement>

	<!-- Use DepositNomTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateNomineeTOTD" inline-parameters="true">
        UPDATE DEPOSIT_NOMINEE_DETAIL SET 
		<!--DEPOSIT_NO = #actNum:VARCHAR#,
		NOMINEE_ID = #nomineeId:VARCHAR#,-->
        NOMINEE_NAME = #nomineeName:VARCHAR#,
        RELATIONSHIP = #relationship:VARCHAR#,
        STREET = #street:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        PIN_CODE = #pinCode:VARCHAR#,
        AREA_CODE = #areaCode:VARCHAR#,
        PH_NO = #phNo:VARCHAR#,
        SHARE_PER = #sharePer:NUMERIC#,
        NOMINEE_STATUS = #nomineeStatus:VARCHAR#,
        NOMINEE_DOB = #nomineeDob:DATE#,
        GUARDIAN_NAME = #guardianName:VARCHAR#,
        G_STREET = #gStreet:VARCHAR#,
        G_AREA = #gArea:VARCHAR#,
        G_CITY = #gCity:VARCHAR#,
        G_STATE = #gState:VARCHAR#,
        G_PIN_CODE = #gPinCode:VARCHAR#,
        G_AREA_CODE = #gAreaCode:VARCHAR#,
        G_PH_NO = #gPhNo:VARCHAR#,
        G_RELATIONSHIP = #gRelationship:VARCHAR#,
        COUNTRY_CODE = #countryCode:VARCHAR#,
        G_COUNTRY_CODE = #gCountryCode:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#, 
        CUST_ID = #custId:VARCHAR#
        WHERE DEPOSIT_NO = #actNum:VARCHAR# and NOMINEE_ID = #nomineeId:VARCHAR#
    </mapped-statement>

	<!-- Use DepositNomTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteNomineeTOTD" inline-parameters="true">
		<!--UPDATE DEPOSIT_NOMINEE_DETAIL SET 
		STATUS = #STATUS:VARCHAR#, 
		STATUS_BY = #USER_ID:VARCHAR#, 
		STATUS_DT = #CURR_DATE# 
		WHERE -->
        DELETE FROM DEPOSIT_NOMINEE_DETAIL 
        WHERE DEPOSIT_NO = #value:VARCHAR# 
        and (STATUS ='MODIFIED' OR STATUS = 'CREATED')
    </mapped-statement>

    
	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to DepositNomTO object (JavaBean) properties -->
    <result-map name="getDepositNomTOResult" class="com.see.truetransact.transferobject.common.nominee.NomineeTO">
		<!--property name="depositNo" column="DEPOSIT_NO"/-->
        <property name="actNum" column="DEPOSIT_NO"/>
        <property name="nomineeId" column="NOMINEE_ID"/>
        <property name="nomineeName" column="NOMINEE_NAME"/>
        <property name="relationship" column="RELATIONSHIP"/>
        <property name="street" column="STREET"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="pinCode" column="PIN_CODE"/>
        <property name="areaCode" column="AREA_CODE"/>
        <property name="phNo" column="PH_NO"/>
        <property name="sharePer" column="SHARE_PER"/>
        <property name="nomineeStatus" column="NOMINEE_STATUS"/>
        <property name="nomineeDob" column="NOMINEE_DOB"/>
        <property name="guardianName" column="GUARDIAN_NAME"/>
        <property name="gStreet" column="G_STREET"/>
        <property name="gArea" column="G_AREA"/>
        <property name="gCity" column="G_CITY"/>
        <property name="gState" column="G_STATE"/>
        <property name="gPinCode" column="G_PIN_CODE"/>
        <property name="gAreaCode" column="G_AREA_CODE"/>
        <property name="gPhNo" column="G_PH_NO"/>
        <property name="gRelationship" column="G_RELATIONSHIP"/>
        <property name="countryCode" column="COUNTRY_CODE"/>
        <property name="gCountryCode" column="G_COUNTRY_CODE"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="custId" column="CUST_ID"/>
    </result-map>
        
    <mapped-statement name="getSelectNomineeTOTD" result-map="getDepositNomTOResult" >
        SELECT * FROM DEPOSIT_NOMINEE_DETAIL WHERE DEPOSIT_NO = #value:VARCHAR# 
        AND(STATUS!='DELETED' OR STATUS IS NULL)
    </mapped-statement>
        
    <dynamic-mapped-statement name="getSelectRenewNomineeTOTD" result-map="getDepositNomTOResult" >
        SELECT * FROM DEPOSIT_NOMINEE_DETAIL WHERE DEPOSIT_NO = #DEPOSIT_NO:VARCHAR# 
        AND(STATUS != 'DELETED' OR STATUS IS NULL
        <dynamic>
            <isPropertyAvailable prepend = "OR" property="STATUS">
                STATUS = #STATUS:VARCHAR#
            </isPropertyAvailable>
            )
        </dynamic>
    </dynamic-mapped-statement>
        
    <mapped-statement name="getSelectRenewalNomineeTOTD" result-map="getDepositNomTOResult" >
        SELECT * FROM DEPOSIT_NOMINEE_DETAIL WHERE DEPOSIT_NO = #DEPOSIT_NO:VARCHAR# 
        AND (STATUS != 'DELETED' OR STATUS IS NULL) AND STATUS != 'EXISTING'
    </mapped-statement>
        
    <mapped-statement name="StatusUpdationinTD" inline-parameters="true">
        UPDATE DEPOSIT_NOMINEE_DETAIL SET STATUS = #STATUS:VARCHAR#, 
        STATUS_BY = #USER_ID:VARCHAR#, STATUS_DT = (SELECT SYS_DATE() FROM DUAL)
        WHERE DEPOSIT_NO = #DEPOSIT_NO:VARCHAR# and (STATUS ='MODIFIED' OR STATUS = 'CREATED')
    </mapped-statement>
    <mapped-statement name="getDailyDepositFrequency" result-class="java.util.HashMap">
        select DEPOSIT_FREQ,WEEKLY_SPEC,INSTALL_RECURRING_DEPAC,INCLUDE_FULL_MONTH from deposits_prod_rd where prod_id=#PID:VARCHAR#
    </mapped-statement>
    
     <mapped-statement name="UpdateCurrentNomineeStatusTD" inline-parameters="true">
        UPDATE DEPOSIT_NOMINEE_DETAIL  SET NOMINEE_CURRENT_STATUS = 'PREVIOUS'
        where DEPOSIT_NO = #DEPOSIT_NO:VARCHAR#        
    </mapped-statement>
    
    
</sql-map>