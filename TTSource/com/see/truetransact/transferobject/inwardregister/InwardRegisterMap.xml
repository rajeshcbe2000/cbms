<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="InwardRegisterMap">

  <!--  Added BRANCH_ID by nithya on 14-07-2016 for 4796 -->
	<!-- Use InwardRegisterTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertInwardTO" inline-parameters="true">
        INSERT INTO INWARD_REGISTER
        (INWARD_NUMBER, DATE_INWARD, REFERENCE_NUMBER,
        SUBMITTED_BY, DETAILS, ACTION_TAKEN, REMARKS,
        STATUS_BY, STATUS_DT,CREATED_BY,CREATED_DT,STATUS,BRANCH_ID) VALUES (
        #inwardNo:VARCHAR#, #idate:DATE#,                
        #referenceNo:VARCHAR#, #submittedBy:VARCHAR#, 
        #details:VARCHAR#, #actionTaken:VARCHAR#, #remarks:VARCHAR#,
        #statusBy:VARCHAR#, #statusDt:DATE#, 
        #createdBy:VARCHAR#, #createdDt:DATE#,
        #status:VARCHAR#,#branchId:VARCHAR#)
    </mapped-statement>


	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to InwardRegisterTO object (JavaBean) properties -->
    <result-map name="getInwardTOResult" class="com.see.truetransact.transferobject.inwardregister.InwardRegisterTO">
        <property name="inwardNo" column="INWARD_NUMBER"/>
        <property name="idate" column="DATE_INWARD"/>
        <property name="referenceNo" column="REFERENCE_NUMBER"/>
        <property name="submittedBy" column="SUBMITTED_BY"/>
        <property name="details" column="DETAILS"/>
        <property name="actionTaken" column="ACTION_TAKEN"/>
        <property name="remarks" column="REMARKS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="createdBy" column="CREATED_BY"/>
        <property name="createdDt" column="CREATED_DT"/>
        <property name="status" column="STATUS"/>
        <property name="branchId" column="BRANCH_ID"/>
    </result-map>
    <mapped-statement name="getInwardRegisterEdit" result-class="java.util.LinkedHashMap">
        SELECT INWARD_NUMBER,DATE_INWARD,
        REFERENCE_NUMBER,SUBMITTED_BY FROM INWARD_REGISTER
        WHERE STATUS!='DELETED' AND BRANCH_ID = #BRANCH_CODE:VARCHAR#
    </mapped-statement>
    <mapped-statement name="getSelectInwardTO" result-map="getInwardTOResult" >
        SELECT * FROM INWARD_REGISTER  
        WHERE INWARD_NUMBER =#INWARD_NUMBER:VARCHAR# AND STATUS != 'DELETED' AND BRANCH_ID = #BRANCH_CODE:VARCHAR#
    </mapped-statement>
    <mapped-statement name="updateInwardTO" inline-parameters="true">
        UPDATE INWARD_REGISTER SET 
        DATE_INWARD =  #idate:DATE#,
        REFERENCE_NUMBER = #referenceNo:VARCHAR#,
        SUBMITTED_BY= #submittedBy:VARCHAR#, 
        DETAILS=  #details:VARCHAR#,
        ACTION_TAKEN= #actionTaken:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        STATUS_BY =#statusBy:VARCHAR#,
        STATUS_DT =#statusDt:DATE#, 
        CREATED_BY =#createdBy:VARCHAR#,
        CREATED_DT =#createdDt:DATE#,
        STATUS = #status:VARCHAR#
        WHERE INWARD_NUMBER = #inwardNo:VARCHAR# AND BRANCH_ID = #branchId:VARCHAR#
    </mapped-statement>
    <mapped-statement name="deleteInwardTO" inline-parameters="true">
        UPDATE Inward_Register SET 
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#,
        STATUS = #status:VARCHAR#
        WHERE INWARD_NUMBER = #inwardNo:VARCHAR# AND BRANCH_ID = #branchId:VARCHAR#
    </mapped-statement>


    <mapped-statement name="insertFileManagementTO" inline-parameters="true">
        INSERT INTO INWARD_FILE_MANAGEMENT
        (APPLN_DT,APPLN_NO, FILE_NO, MEMBER_NO,
        SUBMITTED_BY, ADDRESS, PARTICULARS, REMARKS,SUBMITTED_TO,SUBMISSION_DT1,SUBMISSION_DT2,SUBMISSION_DT3,
        SUBMISSION_ACTION1,SUBMISSION_ACTION2,SUBMISSION_ACTION3,APPROVAL_SATUS,APPROVAL_DT1,APPROVAL_DT2,APPROVAL_DT3,
        APPROVAL_ACTION1,APPROVAL_ACTION2,APPROVAL_ACTION3,BRANCH_ID,
        CREATED_DT,CREATED_BY,STATUS) VALUES (
        #applnDt:DATE#,#applnNo:VARCHAR#, #fileNo:VARCHAR#,#memberNo:VARCHAR#,#submittedBy:VARCHAR#,		#address:VARCHAR#,#particulars:VARCHAR#,#remarks:VARCHAR#,#submittedTo:VARCHAR#,
        #submissionDt1:DATE#,#submissionDt2:DATE#,#submissionDt3:DATE#,                
        #submissionAction1:VARCHAR#,#submissionAction2:VARCHAR#,#submissionAction3:VARCHAR#,#approvalStatus:VARCHAR#,
        #approvalDt1:DATE#,#approvalDt2:DATE#,#approvalDt3:DATE#,
        #approvalAction1:VARCHAR#,#approvalAction2:VARCHAR#,#approvalAction3:VARCHAR#,
        #branchId:VARCHAR#,
        #createdDt:DATE#,#createdBy:VARCHAR#,#status:VARCHAR#
        )
    </mapped-statement>
    
    <result-map name="getFileManagementResult" class="java.util.LinkedHashMap">
        <property name="FILE_NO" column="FILE_NO"/>       
        <property name="SUBMITTED_BY" column="SUBMITTED_BY"/>
        <property name="REMARKS" column="REMARKS"/>
        <property name="PARTICULARS" column="PARTICULARS"/>              
    </result-map>
    
    <dynamic-mapped-statement name="getFileManagementEdit" result-map="getFileManagementResult">            
        SELECT IFM.FILE_NO,IFM.APPLN_DT,IFM.MEMBER_NO,IFM.SUBMITTED_BY,IFM.REMARKS AS REMARKS,IFM.PARTICULARS   
        FROM INWARD_FILE_MANAGEMENT IFM
        WHERE IFM.STATUS!='DELETED' <!--AND IFM.BRANCH_ID = #BRANCH_CODE:VARCHAR#-->
        <dynamic>      
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="REMARKS">
                    UPPER(IFM.REMARKS) LIKE UPPER('%$REMARKS$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="PARTICULARS">
                    UPPER(IFM.PARTICULARS) LIKE UPPER('%$PARTICULARS$%')
                </isNotNull>
            </isParameterPresent>    
            <isParameterPresent>
                <isNotNull prepend="AND"      property="SUBMITTED_BY">
                    UPPER(IFM.SUBMITTED_BY) LIKE UPPER('%$SUBMITTED_BY$%')
                </isNotNull>
            </isParameterPresent>    
        </dynamic>        
    </dynamic-mapped-statement>
    
    <result-map name="getFileManagementTOResult" class="com.see.truetransact.transferobject.filemenagement.FileManagementTO">
        <property name="applnDt" column="APPLN_DT"/>
        <property name="applnNo" column="APPLN_NO"/>
        <property name="fileNo" column="FILE_NO"/>
        <property name="memberNo" column="MEMBER_NO"/>       
        <property name="submittedBy" column="SUBMITTED_BY"/>
        <property name="address" column="ADDRESS"/>
        <property name="particulars" column="PARTICULARS"/>
        <property name="remarks" column="REMARKS"/>
        <property name="submittedTo" column="SUBMITTED_TO"/>
        <property name="submissionDt1" column="SUBMISSION_DT1"/>
        <property name="submissionDt2" column="SUBMISSION_DT2"/>
        <property name="submissionDt3" column="SUBMISSION_DT3"/>
        <property name="submissionAction1" column="SUBMISSION_ACTION1"/>		
        <property name="submissionAction2" column="SUBMISSION_ACTION2"/>
        <property name="submissionAction3" column="SUBMISSION_ACTION3"/>
        <property name="approvalStatus" column="APPROVAL_SATUS"/>
        <property name="approvalDt1" column="APPROVAL_DT1"/>
        <property name="approvalDt2" column="APPROVAL_DT2"/>
        <property name="approvalDt3" column="APPROVAL_DT3"/>
        <property name="approvalAction1" column="APPROVAL_ACTION1"/>
        <property name="approvalAction2" column="APPROVAL_ACTION2"/>
        <property name="approvalAction3" column="APPROVAL_ACTION3"/>		
        <property name="branchId" column="BRANCH_ID"/>
        <property name="createdDt" column="CREATED_DT"/>
        <property name="createdBy" column="CREATED_BY"/>
        <property name="status" column="STATUS"/>       
    </result-map>
  
    <mapped-statement name="getSelectFileManagementTO" result-map="getFileManagementTOResult" >
        SELECT * FROM INWARD_FILE_MANAGEMENT IFM  
        WHERE IFM.FILE_NO =#FILE_NO:VARCHAR# AND IFM.STATUS != 'DELETED' AND IFM.BRANCH_ID = #BRANCH_CODE:VARCHAR#
    </mapped-statement>
    
    <mapped-statement name="updateFileManagementTO" inline-parameters="true">
        UPDATE INWARD_FILE_MANAGEMENT SET 
        APPLN_DT =  #applnDt:DATE#,
        APPLN_NO = #applnNo:VARCHAR#,
        MEMBER_NO = #memberNo:VARCHAR#,
        SUBMITTED_BY= #submittedBy:VARCHAR#, 
        ADDRESS=  #address:VARCHAR#,
        PARTICULARS = #particulars:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        SUBMITTED_TO = #submittedTo:VARCHAR#,
        SUBMISSION_DT1 = #submissionDt1:DATE#,
        SUBMISSION_DT2 = #submissionDt2:DATE#,
        SUBMISSION_DT3 = #submissionDt3:DATE#,
        SUBMISSION_ACTION1 = #submissionAction1:VARCHAR#,
        SUBMISSION_ACTION2 = #submissionAction2:VARCHAR#,
        SUBMISSION_ACTION3 = #submissionAction3:VARCHAR#,
        APPROVAL_SATUS= #approvalStatus:VARCHAR#,
        APPROVAL_DT1 = #approvalDt1:DATE#,
        APPROVAL_DT2 = #approvalDt2:DATE#,
        APPROVAL_DT3 = #approvalDt3:DATE#,
        APPROVAL_ACTION1 = #approvalAction1:VARCHAR#,
        APPROVAL_ACTION2 = #approvalAction2:VARCHAR#,
        APPROVAL_ACTION3 = #approvalAction3:VARCHAR#,               
        CREATED_BY =#createdBy:VARCHAR#,
        CREATED_DT =#createdDt:DATE#,
        STATUS = #status:VARCHAR#
        WHERE FILE_NO = #fileNo:VARCHAR# AND BRANCH_ID = #branchId:VARCHAR#
    </mapped-statement>
    
    <mapped-statement name="deleteFileManagementTO" inline-parameters="true">
        UPDATE INWARD_FILE_MANAGEMENT IFM SET 
        IFM.CREATED_BY = #createdBy:VARCHAR#,
        IFM.CREATED_DT = #createdDt:DATE#,
        IFM.STATUS = #status:VARCHAR#
        WHERE IFM.FILE_NO = #fileNo:VARCHAR# AND IFM.BRANCH_ID = #branchId:VARCHAR#
    </mapped-statement>


   
</sql-map>