<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="CustomerPhoneMap">

<!-- Use CustomerPhoneTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertCustomerPhoneTO" inline-parameters="true">
        INSERT INTO CUST_PHONE
        (CUST_ID, PHONE_TYPE_ID, AREA_CODE, PHONE_NUMBER, ADDR_TYPE, PHONE_ID, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #custId:VARCHAR#, #phoneTypeId:VARCHAR#, #areaCode:VARCHAR#, #phoneNumber:VARCHAR#, #addrType:VARCHAR#, #phoneId:NUMERIC#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use CustomerPhoneTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="updateCustomerPhoneTO" inline-parameters="true">
        UPDATE CUST_PHONE SET 
        PHONE_TYPE_ID = #phoneTypeId:VARCHAR#,
        AREA_CODE = #areaCode:VARCHAR#,
        PHONE_NUMBER = #phoneNumber:VARCHAR#,
        ADDR_TYPE = #addrType:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#
        WHERE CUST_ID = #custId# AND ADDR_TYPE = #addrType:VARCHAR# 
<!--                AND PHONE_TYPE_ID = #phoneTypeId:VARCHAR#  -->
        AND PHONE_ID = #phoneId:NUMERIC# AND STATUS NOT IN ('DELETED')
    </mapped-statement>

    <mapped-statement name="deleteCustomerPhoneTO" inline-parameters="true">
        UPDATE CUST_PHONE SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#
        WHERE CUST_ID = #custId# AND ADDR_TYPE = #addrType:VARCHAR# AND PHONE_TYPE_ID = #phoneTypeId:VARCHAR# AND PHONE_ID = #phoneId:NUMERIC#
    </mapped-statement>
        
	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to CustomerPhoneTO object (JavaBean) properties -->
    <result-map name="getCustomerPhoneTOResult" class="com.see.truetransact.transferobject.customer.CustomerPhoneTO">
        <property name="custId" column="CUST_ID"/>
        <property name="phoneTypeId" column="PHONE_TYPE_ID"/>
        <property name="phoneId" column="PHONE_ID"/>
        <property name="areaCode" column="AREA_CODE"/>
        <property name="phoneNumber" column="PHONE_NUMBER"/>
        <property name="addrType" column="ADDR_TYPE"/>
        <property name="status" column="STATUS" />
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <dynamic-mapped-statement name="getSelectCustomerPhoneTO" result-map="getCustomerPhoneTOResult" >
        SELECT * FROM CUST_PHONE WHERE CUST_ID=#CUST_ID:VARCHAR#  
        <dynamic>
            <isNotPropertyAvailable prepend = "AND" property="DELETECHECK">
                (STATUS NOT IN ('DELETED')
            </isNotPropertyAvailable>
            <isPropertyAvailable prepend = "AND" property="DELETECHECK">
                ( STATUS IN ('DELETED')
            </isPropertyAvailable>
            <isPropertyAvailable prepend = "OR" property="AUTHORIZECHECK">
                STATUS IN ('DELETED')
            </isPropertyAvailable>
            )
        </dynamic>
        ORDER BY PHONE_ID 
    </dynamic-mapped-statement>
        
    <mapped-statement name="getSelectOldCustomerPhoneTO" result-map="getCustomerPhoneTOResult" >
        SELECT * FROM CUST_PHONE CP, CUSTOMER C WHERE CP.CUST_ID = #custId:VARCHAR# AND CP.ADDR_TYPE = #addrType:VARCHAR# AND CP.STATUS NOT IN ('DELETED') 
        AND C.CUST_ID=CP.CUST_ID <!-- AND (C.AUTHORIZE_STATUS='AUTHORIZED' OR C.AUTHORIZE_STATUS='REJECTED') -->
    </mapped-statement>
        
</sql-map>        
