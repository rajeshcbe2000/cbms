<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="GuaranteeMasterTOMap">

	<!-- Use ShareProductLoanTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertGuaranteeMasterTO" inline-parameters="true">
        insert inTo GUARANTEE_MASTER
        ( PLI_NAME, PLIBRANCH_NAME , CUST_ID , SANCTION_NO , SANCTION_DATE , LOAN_NO , 
        LOAN_DATE , LOAN_AMOUNT , HOLIDAY_PERIOD , NO_INSTALLMENTS , REPAYMENT_FREQUENCY , INTEREST_RATE , 
        GUARANTEE_NO , GUARANTEE_DATE , GUARANTEE_SANCTION_BY , GUARANTEE_SANCTION_NO , GUARANTEE_AMOUNT , 
        GUARANTEE_FEE_PAYBY , GUARANTEE_FEE_PERCENTAGE , GUARANTEE_FEE , STATUS_DT , STATUS_BY , STATUS ) 
        values( #cboPli:VARCHAR#,#cbopliBranch:VARCHAR#,#custId:VARCHAR#,#sanctionNo:VARCHAR#,#sanctionDt:DATE#,#loanNo:VARCHAR#,
        #loanDt:DATE#,#sanctionAmt:NUMERIC#,#holidayPeriod:NUMERIC#,#noOfInst:NUMERIC#,#cboRepaymentFrequency:VARCHAR#,#intRate:NUMERIC#,
        #guaranteeNo:VARCHAR#, #guaranteeDt:DATE#,#cboGuranteeSanctionBy:VARCHAR#,#guaranteeSanctionNo:VARCHAR#,#guranteAmt:NUMERIC#,
        #guranteFeepayBy:VARCHAR#, #guranteFeePer:NUMERIC#,#guranteFee:NUMERIC#
        ,#statusDt:DATE#,#statusBy:VARCHAR#,#status:VARCHAR#)
 
    </mapped-statement>

    <mapped-statement name="insertGuaranteeTransTO" inline-parameters="true">
        insert inTo GUARANTEE_trans
        (TRANS_DT , TRANS_ID , BATCH_ID , GUARANTEE_NO , PLI_NAME , TRANS_AMT , 
        AUTHORIZED_BY , AUTHORIZED_DT , AUTHORIZE_STATUS , 
        STATUS_DT , STATUS_BY , STATUS )
        values(#transDt:DATE#,#transID:VARCHAR#,#batchID:VARCHAR#,#guaranteeNo:VARCHAR#,#cboPli:VARCHAR#,#trnAmt:NUMERIC#,
        #authorizeBy:VARCHAR#,#authorizeDt:DATE#,#authorizeStatus:VARCHAR#,
        #statusDt:DATE#,#statusBy:VARCHAR#,#status:VARCHAR#)
    </mapped-statement>
   
        
        
	<!-- Use ShareProductLoanTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateGuaranteetMasterTO" inline-parameters="true">
        update  GUARANTEE_MASTER set  
        PLI_NAME=#cboPli:VARCHAR#, 
        PLIBRANCH_NAME=#cbopliBranch:VARCHAR# , 
        CUST_ID =#custId:VARCHAR#, 
        SANCTION_NO =#sanctionNo:VARCHAR#,
        SANCTION_DATE =#sanctionDt:DATE# , 
        LOAN_NO =#loanNo:VARCHAR#, 
        LOAN_DATE =#loanDt:DATE#, 
        LOAN_AMOUNT=#sanctionAmt:NUMERIC# , 
        HOLIDAY_PERIOD= #holidayPeriod:NUMERIC#, 
        NO_INSTALLMENTS = #noOfInst:NUMERIC#, 
        REPAYMENT_FREQUENCY=#cboRepaymentFrequency:VARCHAR# , 
        INTEREST_RATE=#intRate:NUMERIC# , 
        GUARANTEE_NO=#guaranteeNo:VARCHAR# ,
        GUARANTEE_DATE=#guaranteeDt:DATE# ,
        GUARANTEE_SANCTION_BY=#cboGuranteeSanctionBy:VARCHAR# ,
        GUARANTEE_SANCTION_NO=#guaranteeSanctionNo:VARCHAR# , 
        GUARANTEE_AMOUNT =#guranteAmt:NUMERIC#, 
        GUARANTEE_FEE_PAYBY = #guranteFeepayBy:VARCHAR#, 
        GUARANTEE_FEE_PERCENTAGE= #guranteFeePer:NUMERIC#, 
        GUARANTEE_FEE=#guranteFee:NUMERIC# , 
        AUTHORIZED_BY =#authorizeBy:VARCHAR#,
        AUTHORIZED_DT = #authorizeDt:DATE#, 
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#, 
        STATUS_DT =#statusDt:DATE#, 
        STATUS_BY =#statusBy:VARCHAR# ,
        STATUS =#status:VARCHAR#
        where  GUARANTEE_NO=#guaranteeNo:VARCHAR#
                   
                    
    </mapped-statement>
     	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to ShareProductLoanTO object (JavaBean) properties -->
    <result-map name="getGuaranteeMasterTOResult" class="com.see.truetransact.transferobject.termloan.guarantee.GuaranteeMasterTO">
        <property name="cboPli" column="PLI_NAME"/>
        <property name="cbopliBranch" column="PLIBRANCH_NAME"/>
        <property name="custId" column="CUST_ID"/>
        <property name="sanctionNo" column="SANCTION_NO"/>
        <property name="sanctionDt" column="SANCTION_DATE"/>
        <property name="loanNo" column="LOAN_NO"/>
        <property name="loanDt" column="LOAN_DATE"/>
        <property name="sanctionAmt" column="LOAN_AMOUNT"/>
        <property name="holidayPeriod" column="HOLIDAY_PERIOD"/>
        <property name="noOfInst" column="NO_INSTALLMENTS"/>
        <property name="cboRepaymentFrequency" column="REPAYMENT_FREQUENCY"/>
        <property name="intRate" column="INTEREST_RATE"/>
        <property name="guaranteeNo" column="GUARANTEE_NO"/>
        <property name="guaranteeDt" column="GUARANTEE_DATE"/>
        <property name="cboGuranteeSanctionBy" column="GUARANTEE_SANCTION_BY"/>
        <property name="guaranteeSanctionNo" column="GUARANTEE_SANCTION_NO"/>
        <property name="guranteAmt" column="GUARANTEE_AMOUNT"/>
        <property name="guranteFeepayBy" column="GUARANTEE_FEE_PAYBY"/>
        <property name="guranteFeePer" column="GUARANTEE_FEE_PERCENTAGE"/>
        <property name="guranteFee" column="GUARANTEE_FEE"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
                        
    </result-map>

    <result-map name="getGuaranteeTransTOResult" class="com.see.truetransact.transferobject.termloan.guarantee.GuaranteeTransTO">
        <property name="cboPli" column="PLI_NAME"/>
        <property name="guaranteeNo" column="GUARANTEE_NO"/>
        <property name="transDt" column="TRANS_DT"/>
        <property name="batchID" column="BATCH_ID"/>
        <property name="transID" column="TRANS_ID"/>
        <property name="trnAmt" column="TRANS_AMT"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="authorizeBy" column="AUTHORIZED_BY"/>
        <property name="authorizeDt" column="AUTHORIZED_DT"/>
    </result-map>
        
        
        
        
    <mapped-statement name="deleteGuaranteeMasterTO" inline-parameters="true">
        UPDATE INVESTMENT_MASTER SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:TIMESTAMP#
        WHERE INVESTMENT_NAME = #investmentName:VARCHAR#  AND STATUS NOT IN ('DELETED')
    </mapped-statement>
    <dynamic-mapped-statement name="getGuaranteeMasterAuthorizeList" result-class="java.util.LinkedHashMap">
          
        select GUARANTEE_NO,PLI_NAME,SANCTION_NO,loan_no  from guarantee_master SCD
     
        WHERE  (STATUS != 'DELETED' OR STATUS IS NULL)
        AND STATUS_BY != #USER_ID:VARCHAR# 
        AND cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y', HIERARCHY_ID, HIERARCHY_ID + 1)
        FROM USER_MASTER UM, ROLE_MASTER RM 
        WHERE RM.ROLE_ID = UM.USER_ROLE AND UM.USER_ID = SCD.STATUS_BY)
        <dynamic>
            <isEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                AUTHORIZE_STATUS = 'EXCEPTION'
            </isEqual>
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (AUTHORIZE_STATUS IS NULL OR 
                AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
            </isNotEqual>
        </dynamic>
        ORDER BY GUARANTEE_NO
    </dynamic-mapped-statement>
    <mapped-statement name="authorizeGuaranteeMaster" inline-parameters="true">
        UPDATE GUARANTEE_MASTER  SET 
        AUTHORIZE_STATUS = #AUTHORIZE_STATUS:VARCHAR#,
        AUTHORIZED_BY = #AUTHORIZE_BY:VARCHAR#, 
        AUTHORIZED_DT = #AUTHORIZE_DT:TIMESTAMP#
        WHERE GUARANTEE_NO = #GUARANTEE_NO:VARCHAR#   AND (STATUS != 'DELETED' OR (STATUS IN('CREATED', 'MODIFIED')))
    </mapped-statement>
    <mapped-statement name="getSelectGaranteeMaster" result-class="java.util.LinkedHashMap" >
		      
        select GUARANTEE_NO,PLI_NAME,SANCTION_NO,loan_no  from 
        guarantee_master 
        where status!='DELETED' AND (AUTHORIZE_STATUS!='REJECTED' OR AUTHORIZE_STATUS IS NULL)
    </mapped-statement>
    <mapped-statement name="getSelectGuaranteeMasterTO" result-map="getGuaranteeMasterTOResult" >
        SELECT * FROM guarantee_master
        WHERE  GUARANTEE_NO=#value:VARCHAR#
    </mapped-statement>     
        
    <mapped-statement name="getSelectGuaranteeTransTO" result-map="getGuaranteeTransTOResult" >
        SELECT * FROM guarantee_trans
        WHERE  GUARANTEE_NO=#value:VARCHAR#
    </mapped-statement>       
                   
                 
    <dynamic-mapped-statement name="getSelectGuaranteeMaster" result-class="java.util.LinkedHashMap" >
        SELECT  INVESTMENT_TYPE,INVESTMENT_PROD_ID,INVESTMENT_NAME,STATUS from INVESTMENT_MASTER
        WHERE  STATUS NOT IN ('DELETED')  AND   (INVESTMENT_STATUS!='CLOSED' OR  INVESTMENT_STATUS IS NULL)  
        AND (INVESTMENT_STATUS!='CLOSED' OR INVESTMENT_STATUS IS NULL)
        <dynamic>    
            <isParameterPresent>
                <isNotEmpty prepend= "AND" property = "INVESTMENT_TYPE" >
                    INVESTMENT_TYPE = #INVESTMENT_TYPE:VARCHAR#
                </isNotEmpty>
            </isParameterPresent>
        </dynamic>
        <dynamic>    
            <isParameterPresent>
                <isNotEmpty prepend= "AND" property = "INVESTMENT_PROD_ID" >
                    INVESTMENT_PROD_ID=#INVESTMENT_PROD_ID:VARCHAR#
                </isNotEmpty>
            </isParameterPresent>
        </dynamic>
        <dynamic>    
            <isParameterPresent>
                <isNotEmpty prepend= "AND" property = "AUTHORIZE_STATUS" >
                    (AUTHORIZE_STATUS!='REJECTED' OR AUTHORIZE_STATUS IS NOT NULL)
                </isNotEmpty>
            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>
        
        

</sql-map>