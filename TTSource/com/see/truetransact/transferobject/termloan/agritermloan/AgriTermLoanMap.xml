<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="AgriTermLoanMap">

	<!-- Use TermLoanBorrowerTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanBorrowerTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_BORROWER
        (BORROW_NO, CUST_ID, CONSTITUTION, CATEGORY, REFERENCES, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, STATUS, AUTHORIZED_BY, AUTHORIZED_DT, STATUS_BY, STATUS_DT, BRANCH_CODE, INITIATED_BRANCH
        ) VALUES (
        #borrowNo:VARCHAR#, #custId:VARCHAR#, #constitution:VARCHAR#, #category:VARCHAR#, #references:VARCHAR#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #status:VARCHAR#, #authorizedBy:VARCHAR#, #authorizedDt:TIMESTAMP#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #branchCode:VARCHAR#, #initiatedBranch:VARCHAR#)
    </mapped-statement>

	<!-- Use TermLoanBorrowerTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanBorrowerTO" inline-parameters="true">
        UPDATE AGRI_LOANS_BORROWER SET 
<!--		BORROW_NO = #borrowNo:VARCHAR#,-->
        CUST_ID = #custId:VARCHAR#,
        CONSTITUTION = #constitution:VARCHAR#,
        CATEGORY = #category:VARCHAR#,
        REFERENCES = #references:VARCHAR#,
<!--		AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
		AUTHORIZE_STATUS = #authorizeStatus:VARCHAR# -->
        STATUS = #status:VARCHAR#,
        BRANCH_CODE = #branchCode:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#,
        INITIATED_BRANCH = #initiatedBranch:VARCHAR# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanBorrowerTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanBorrowerTO" inline-parameters="true">
<!--		DELETE FROM AGRI_LOANS_BORROWER 
		WHERE BORROW_NO = #borrowNo:VARCHAR#-->
        UPDATE AGRI_LOANS_BORROWER SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
        
    <mapped-statement name="updateStatusForAccountATL" inline-parameters="true">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET 
        ACCT_STATUS = #ACCT_STATUS:VARCHAR#,
          
        ACCT_CLOSE_DT = NULL
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="authorizeAcctStatusATL"  inline-parameters="true">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET 
        ACCT_STATUS = #ACCOUNT_STATUS:VARCHAR#,
        ACCT_CLOSE_DT = #AUTHORIZEDT:TIMESTAMP#
        WHERE ACCT_NUM = #ACCOUNTNO:VARCHAR#	
    </mapped-statement>
    
    
    <dynamic-mapped-statement name="getStatusForAccountATL" result-class="java.util.HashMap" >
        SELECT ACCT_NUM, ACCT_STATUS, CREATED_BY, ACCT_CLOSE_DT FROM AGRI_LOANS_FACILITY_DETAILS
        <dynamic>
            <isParameterPresent>
                <isNotEmpty prepend= "" property = "ACCT_CLOSE_DT" >
                    AS OF TIMESTAMP #ACCT_CLOSE_DT:DATE#
                </isNotEmpty>
            </isParameterPresent>
        </dynamic>
        WHERE ACCT_NUM=#ACCT_NUM:VARCHAR#
    </dynamic-mapped-statement>
	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanBorrowerTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanBorrowerTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanBorrowerTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="custId" column="CUST_ID"/>
        <property name="constitution" column="CONSTITUTION"/>
        <property name="category" column="CATEGORY"/>
        <property name="references" column="REFERENCES"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="branchCode" column="BRANCH_CODE"/>
        <property name="initiatedBranch" column="INITIATED_BRANCH"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanBorrowerTO" result-map = "getAgriTermLoanBorrowerTOResult" >
        SELECT * FROM AGRI_LOANS_BORROWER 
        WHERE BORROW_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
        
    <dynamic-mapped-statement name="viewAgriTermLoan" result-class = "java.util.LinkedHashMap" >
        <!--SELECT AGRI_LOANS_BORROWER.BORROW_NO AS "BORROWER NO", AGRI_LOANS_BORROWER.CUST_ID AS "CUSTOMER ID", 
        CUSTOMER.FNAME || ' ' || CUSTOMER.MNAME || ' ' || CUSTOMER.LNAME AS "CUSTOMER NAME"
        FROM AGRI_LOANS_BORROWER, CUSTOMER WHERE AGRI_LOANS_BORROWER.BRANCH_CODE = #BRANCH_ID# AND 
        (AGRI_LOANS_BORROWER.STATUS = 'CREATED' OR AGRI_LOANS_BORROWER.STATUS = 'MODIFIED')
        AND (AGRI_LOANS_BORROWER.CUST_ID = CUSTOMER.CUST_ID) ORDER BY "BORROWER NO" -->
        SELECT AGRI_LOANS_FACILITY_DETAILS.ACCT_NUM AS "LOAN_NO", get_cust_name(CUSTOMER.CUST_ID) AS "CUSTOMER NAME",
        AGRI_LOANS_BORROWER.CUST_ID AS "CUSTOMER ID",LSD.LIMIT AS SANCTION_AMT,LSD.FROM_DT AS ACCOUNT_OPENDT,LCD.ASSET_STATUS,AGRI_LOANS_FACILITY_DETAILS.ACCT_STATUS,AGRI_LOANS_BORROWER.BORROW_NO AS "BORROWER NO"

        FROM AGRI_LOANS_BORROWER, CUSTOMER,AGRI_LOANS_FACILITY_DETAILS,AGRI_LOANS_SANCTION_DETAILS LSD,AGRI_LOANS_CLASSIFY_DETAILS LCD WHERE AGRI_LOANS_BORROWER.BRANCH_CODE = #BRANCH_ID:VARCHAR# AND   AGRI_LOANS_FACILITY_DETAILS.BORROW_NO=AGRI_LOANS_BORROWER.BORROW_NO AND
        (AGRI_LOANS_BORROWER.STATUS = 'CREATED' OR AGRI_LOANS_BORROWER.STATUS = 'MODIFIED') AND LSD.STATUS !='DELETED'
        AND (AGRI_LOANS_FACILITY_DETAILS.STATUS IS NULL OR  AGRI_LOANS_FACILITY_DETAILS.STATUS !='DELETED')
        AND (AGRI_LOANS_FACILITY_DETAILS.AUTHORIZE_STATUS_1 IS NULL OR AGRI_LOANS_FACILITY_DETAILS.AUTHORIZE_STATUS_1 !='REJECTED')

        AND LSD.BORROW_NO
        =AGRI_LOANS_FACILITY_DETAILS.BORROW_NO AND  LSD.SL_NO 
        =AGRI_LOANS_FACILITY_DETAILS.SL_NO 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND"  property="CLOSED_ACCT">
                    ACCT_STATUS='CLOSED'
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        AND LSD.SANCTION_NO=AGRI_LOANS_FACILITY_DETAILS.SANCTION_NO AND
        AGRI_LOANS_FACILITY_DETAILS.ACCT_NUM =LCD.ACCT_NUM
        AND (AGRI_LOANS_BORROWER.CUST_ID = CUSTOMER.CUST_ID) AND NOT EXISTS
        (SELECT BORROW_NO FROM AGRI_LOANS_FACILITY_DETAILS WHERE PROD_ID IN 
        (SELECT PROD_ID FROM LOANS_PRODUCT WHERE BEHAVES_LIKE = 'AGRI_LOANS_AGAINST_DEPOSITS')
        AND AGRI_LOANS_BORROWER.BORROW_NO = AGRI_LOANS_FACILITY_DETAILS.BORROW_NO)
        ORDER BY "BORROWER NO"        
    </dynamic-mapped-statement>
        
    <mapped-statement name="viewAgriTermLoanForDelete" result-class = "java.util.LinkedHashMap" >
        SELECT FD.PROD_ID,  FD.BORROW_NO, FD.ACCT_NUM, FD.SANCTION_NO, 
        get_cust_name(C.CUST_ID) AS "CUSTOMER NAME",
        FD.AUTHORIZE_BY_1, FD.AUTHORIZE_STATUS_1
        FROM AGRI_LOANS_BORROWER LB, CUSTOMER C, AGRI_LOANS_FACILITY_DETAILS FD WHERE 
        LB.BRANCH_CODE = #BRANCH_ID:VARCHAR# AND FD.BORROW_NO=LB.BORROW_NO AND LB.CUST_ID = C.CUST_ID AND 
        FD.ACCT_STATUS !='CLOSED' AND NOT EXISTS
        (SELECT BORROW_NO FROM AGRI_LOANS_FACILITY_DETAILS LFD WHERE PROD_ID IN 
        (SELECT PROD_ID FROM LOANS_PRODUCT WHERE BEHAVES_LIKE = 'LOANS_AGAINST_DEPOSITS')
        AND LB.BORROW_NO = LFD.BORROW_NO)
        AND NOT EXISTS (SELECT ACT_NUM FROM LOAN_TRANS_DETAILS WHERE ACT_NUM = FD.ACCT_NUM)
        AND NOT EXISTS (SELECT ACT_NUM FROM ADV_TRANS_DETAILS WHERE ACT_NUM = FD.ACCT_NUM)
        AND LB.STATUS NOT IN('DELETED') AND FD.STATUS NOT IN('DELETED')
        ORDER BY FD.BORROW_NO 
    </mapped-statement>
        
    <dynamic-mapped-statement name="viewAgriTermLoanForLTD" result-class = "java.util.LinkedHashMap" >
       <!-- SELECT AGRI_LOANS_BORROWER.BORROW_NO AS "BORROWER NO", AGRI_LOANS_BORROWER.CUST_ID AS "CUSTOMER ID", 
        CUSTOMER.FNAME || ' ' || CUSTOMER.MNAME || ' ' || CUSTOMER.LNAME AS "CUSTOMER NAME"
        FROM AGRI_LOANS_BORROWER, CUSTOMER WHERE AGRI_LOANS_BORROWER.BRANCH_CODE = #BRANCH_ID# AND 
        (AGRI_LOANS_BORROWER.STATUS = 'CREATED' OR AGRI_LOANS_BORROWER.STATUS = 'MODIFIED')
        AND (AGRI_LOANS_BORROWER.CUST_ID = CUSTOMER.CUST_ID) AND BORROW_NO IN 
        (SELECT BORROW_NO FROM AGRI_LOANS_FACILITY_DETAILS WHERE PROD_ID IN 
        (SELECT PROD_ID FROM AGRI_LOANS_PRODUCT WHERE BEHAVES_LIKE = 'AGRI_LOANS_AGAINST_DEPOSITS'))
        ORDER BY "BORROWER NO"  -->
        SELECT AGRI_LOANS_BORROWER.BORROW_NO AS "BORROWER NO", AGRI_LOANS_BORROWER.CUST_ID AS "CUSTOMER ID",AGRI_LOANS_FACILITY_DETAILS.ACCT_NUM AS "LOAN_NO", 
        get_cust_name(CUSTOMER.CUST_ID)  AS "CUSTOMER NAME"
        FROM AGRI_LOANS_BORROWER, CUSTOMER ,AGRI_LOANS_FACILITY_DETAILS WHERE AGRI_LOANS_BORROWER.BRANCH_CODE = #BRANCH_ID:VARCHAR#  AND AGRI_LOANS_FACILITY_DETAILS.BORROW_NO=AGRI_LOANS_BORROWER.BORROW_NO AND
        (AGRI_LOANS_BORROWER.STATUS = 'CREATED' OR AGRI_LOANS_BORROWER.STATUS = 'MODIFIED')
        AND (AGRI_LOANS_FACILITY_DETAILS.STATUS IS NULL OR  AGRI_LOANS_FACILITY_DETAILS.STATUS !='DELETED')
        AND (AGRI_LOANS_FACILITY_DETAILS.AUTHORIZE_STATUS_1 IS NULL OR AGRI_LOANS_FACILITY_DETAILS.AUTHORIZE_STATUS_1 !='REJECTED')

        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND"  property="CLOSED_ACCT">
                    ACCT_STATUS='CLOSED'
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        AND (AGRI_LOANS_BORROWER.CUST_ID = CUSTOMER.CUST_ID) AND EXISTS 
        (SELECT BORROW_NO FROM AGRI_LOANS_FACILITY_DETAILS WHERE EXISTS 
        (SELECT PROD_ID FROM LOANS_PRODUCT WHERE BEHAVES_LIKE = 'LOANS_AGAINST_DEPOSITS' AND 
        PROD_ID=AGRI_LOANS_FACILITY_DETAILS.PROD_ID)AND BORROW_NO=AGRI_LOANS_BORROWER.BORROW_NO)
        ORDER BY "BORROWER NO"       
    </dynamic-mapped-statement>        
    
    <mapped-statement name="getAgriTermLoanPaidDetails" result-class="java.util.HashMap" >
        SELECT PRINCIPLE,INTEREST ,PENAL FROM AGRILOAN_TRANS_DETAILS WHERE 
        TRANS_ID=#TRANS_ID:VARCHAR# AND  ACT_NUM=#ACCOUNTNO:VARCHAR# AND
        TRANS_DT = #TRANS_DT:DATE# AND
        BRANCH_ID = #BRANCH_ID:VARCHAR# 
    </mapped-statement>
        

    <mapped-statement name="viewAgriTermLoanForDeleteLTD" result-class = "java.util.LinkedHashMap" >
        SELECT FD.PROD_ID,  FD.BORROW_NO, FD.ACCT_NUM, FD.SANCTION_NO, 
        get_cust_name(C.CUST_ID) AS "CUSTOMER NAME",
        FD.AUTHORIZE_BY_1, FD.AUTHORIZE_STATUS_1
        FROM AGRI_LOANS_BORROWER LB, CUSTOMER C, AGRI_LOANS_FACILITY_DETAILS FD WHERE 
        LB.BRANCH_CODE = #BRANCH_ID:VARCHAR# AND FD.BORROW_NO=LB.BORROW_NO AND LB.CUST_ID = C.CUST_ID AND 
        FD.STATUS !='DELETED' AND FD.ACCT_STATUS !='CLOSED' AND EXISTS
        (SELECT BORROW_NO FROM AGRI_LOANS_FACILITY_DETAILS LFD WHERE PROD_ID IN 
        (SELECT PROD_ID FROM LOANS_PRODUCT WHERE BEHAVES_LIKE = 'AGRI_LOANS_AGAINST_DEPOSITS')
        AND LB.BORROW_NO = LFD.BORROW_NO)
        AND NOT EXISTS (SELECT ACT_NUM FROM LOAN_TRANS_DETAILS WHERE ACT_NUM = FD.ACCT_NUM)
        AND NOT EXISTS (SELECT ACT_NUM FROM ADV_TRANS_DETAILS WHERE ACT_NUM = FD.ACCT_NUM)
        ORDER BY FD.BORROW_NO 
    </mapped-statement>
                
<!-- ===================================================== -->

<!-- Use TermLoanCompanyTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanCompanyTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_COMPANY
        (BORROW_NO, CO_REG_NO, ESTABLISH_DT, DEAL_BANK_SINCE, NET_WORTH, NET_WORTH_ON, CHIEF_EXEC_NAME, ADDR_TYPE, STREET, AREA, CITY, STATE, COUNTRY_CODE, PINCODE, PHONE, RISK_RATE, BUSINESS_NATURE, REMARKS, CR_FACILITIES_SINCE, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #borrowNo:VARCHAR#, #coRegNo:VARCHAR#, #establishDt:DATE#, #dealBankSince:DATE#, #netWorth:NUMERIC#, #netWorthOn:DATE#, #chiefExecName:VARCHAR#, #addrType:VARCHAR#, #street:VARCHAR#, #area:VARCHAR#, #city:VARCHAR#, #state:VARCHAR#, #countryCode:VARCHAR#, #pincode:VARCHAR#, #phone:VARCHAR#, #riskRate:NUMERIC#, #businessNature:VARCHAR#, #remarks:VARCHAR#, #crFacilitiesSince:DATE#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use TermLoanCompanyTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanCompanyTO" inline-parameters="true">
        UPDATE AGRI_LOANS_COMPANY SET 
<!--		BORROW_NO = #borrowNo:VARCHAR#,-->
        CO_REG_NO = #coRegNo:VARCHAR#,
        ESTABLISH_DT = #establishDt:DATE#,
        DEAL_BANK_SINCE = #dealBankSince:DATE#,
        NET_WORTH = #netWorth:NUMERIC#,
        NET_WORTH_ON = #netWorthOn:DATE#,
        CHIEF_EXEC_NAME = #chiefExecName:VARCHAR#,
        ADDR_TYPE = #addrType:VARCHAR#,
        STREET = #street:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        COUNTRY_CODE = #countryCode:VARCHAR#,
        PINCODE = #pincode:VARCHAR#,
        PHONE = #phone:VARCHAR#,
        RISK_RATE = #riskRate:NUMERIC#,
        BUSINESS_NATURE = #businessNature:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        CR_FACILITIES_SINCE = #crFacilitiesSince:DATE#,
<!--		AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
		AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanCompanyTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanCompanyTO" inline-parameters="true">
<!--		DELETE FROM AGRI_LOANS_COMPANY 
		WHERE BORROW_NO = #borrowNo:VARCHAR# -->
        UPDATE AGRI_LOANS_COMPANY SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
        
       

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanCompanyTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanCompanyTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanCompanyTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="coRegNo" column="CO_REG_NO"/>
        <property name="establishDt" column="ESTABLISH_DT"/>
        <property name="dealBankSince" column="DEAL_BANK_SINCE"/>
        <property name="netWorth" column="NET_WORTH"/>
        <property name="netWorthOn" column="NET_WORTH_ON"/>
        <property name="chiefExecName" column="CHIEF_EXEC_NAME"/>
        <property name="addrType" column="ADDR_TYPE"/>
        <property name="street" column="STREET"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="countryCode" column="COUNTRY_CODE"/>
        <property name="pincode" column="PINCODE"/>
        <property name="phone" column="PHONE"/>
        <property name="riskRate" column="RISK_RATE"/>
        <property name="businessNature" column="BUSINESS_NATURE"/>
        <property name="remarks" column="REMARKS"/>
        <property name="crFacilitiesSince" column="CR_FACILITIES_SINCE"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanCompanyTO" result-map="getAgriTermLoanCompanyTOResult" >
        SELECT * FROM AGRI_LOANS_COMPANY 
        WHERE BORROW_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
<!-- ================================================================= -->

<!-- Use TermLoanAuthorizedSignatoryTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAuthorizedSignatoryTOATL" inline-parameters="true">
        INSERT INTO AGRI_LOANS_AUTHORIZE
        (SLNO, BORROW_NO,ACCT_NUM, AUTHRIZE_NO, CUST_ID, CUST_NAME, COMM_ADDR, STREET, AREA, CITY, STATE, COUNTRY_CODE, PINCODE, LIMITS, DESIGNATION, HOME_PHONE, HOME_FAX, PAGER, EMAIL_ID, BUSINESS_PHONE, BUSINESS_FAX, MOBILE, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #slNo:NUMERIC#, #borrowNo:VARCHAR#,#acctNum:VARCHAR#, #authrizeNo:NUMERIC#, #custId:VARCHAR#, #custName:VARCHAR#, #commAddr:VARCHAR#, #street:VARCHAR#, #area:VARCHAR#, #city:VARCHAR#, #state:VARCHAR#, #countryCode:VARCHAR#, #pincode:VARCHAR#, #limits:NUMERIC#, #designation:VARCHAR#, 
        #homePhone:VARCHAR#, #homeFax:VARCHAR#, #pager:VARCHAR#, #emailId:VARCHAR#, #businessPhone:VARCHAR#, #businessFax:VARCHAR#, #mobile:VARCHAR#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use TermLoanAuthorizedSignatoryTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAuthorizedSignatoryTOATL" inline-parameters="true">
        UPDATE AGRI_LOANS_AUTHORIZE SET 
		<!-- BORROW_NO = #borrowNo:VARCHAR#, 
                SLNO = #slNo:NUMERIC#,-->
        AUTHRIZE_NO = #authrizeNo:NUMERIC#,
        CUST_ID = #custId:VARCHAR#,
        CUST_NAME = #custName:VARCHAR#,
        COMM_ADDR = #commAddr:VARCHAR#,
        STREET = #street:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        COUNTRY_CODE = #countryCode:VARCHAR#,
        PINCODE = #pincode:VARCHAR#,
        LIMITS = #limits:NUMERIC#,
        DESIGNATION = #designation:VARCHAR#,
        HOME_PHONE = #homePhone:VARCHAR#,
        HOME_FAX = #homeFax:VARCHAR#,
        PAGER = #pager:VARCHAR#,
        EMAIL_ID = #emailId:VARCHAR#,
        BUSINESS_PHONE = #businessPhone:VARCHAR#,
        BUSINESS_FAX = #businessFax:VARCHAR#,
        MOBILE = #mobile:VARCHAR#,
		<!-- AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#, 
		AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SLNO = #slNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanAuthorizedSignatoryTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAuthorizedSignatoryTOATL" inline-parameters="true">
		<!-- DELETE FROM AGRI_LOANS_AUTHORIZE 
		WHERE -->
        UPDATE AGRI_LOANS_AUTHORIZE SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SLNO = #slNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanAuthorizedSignatoryTO object (JavaBean) properties -->
    <result-map name="getAuthorizedSignatoryTOResultATL" class="com.see.truetransact.transferobject.common.authorizedsignatory.AuthorizedSignatoryTO">
        <property name="slNo" column="SLNO"/>
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="authrizeNo" column="AUTHRIZE_NO"/>
        <property name="custId" column="CUST_ID"/>
        <property name="custName" column="CUST_NAME"/>
        <property name="commAddr" column="COMM_ADDR"/>
        <property name="street" column="STREET"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="countryCode" column="COUNTRY_CODE"/>
        <property name="pincode" column="PINCODE"/>
        <property name="limits" column="LIMITS"/>
        <property name="designation" column="DESIGNATION"/>
        <property name="homePhone" column="HOME_PHONE"/>
        <property name="homeFax" column="HOME_FAX"/>
        <property name="pager" column="PAGER"/>
        <property name="emailId" column="EMAIL_ID"/>
        <property name="businessPhone" column="BUSINESS_PHONE"/>
        <property name="businessFax" column="BUSINESS_FAX"/>
        <property name="mobile" column="MOBILE"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectAuthorizedSignatoryTOATL" result-map="getAuthorizedSignatoryTOResultATL" >
        SELECT * FROM AGRI_LOANS_AUTHORIZE 
        WHERE BORROW_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY SLNO
    </mapped-statement>
                                
    <mapped-statement name="getSelectAuthorizedSignatoryMaxSLNOATL" result-class="java.util.HashMap" >
        SELECT MAX(SLNO) AS MAX_AUTHORIZE_NO FROM LOANS_AUTHORIZE WHERE BORROW_NO = #borrowNo:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
        <!-- Use AuthorizedSignatoryInstructionTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAuthorizedSignatoryInstructionTOATL" inline-parameters="true">
        INSERT INTO AGRI_LOANS_AUTHORIZE_INSTRUCTION
        (BORROW_NO, SL_NO, FROM_AMT, TO_AMT, INSTRUCTION, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #borrowNo:VARCHAR#, #slNo:NUMERIC#, #fromAmt:NUMERIC#, #toAmt:NUMERIC#, #instruction:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use AuthorizedSignatoryInstructionTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAuthorizedSignatoryInstructionTOATL" inline-parameters="true">
        UPDATE AGRI_LOANS_AUTHORIZE_INSTRUCTION SET 
        FROM_AMT = #fromAmt:NUMERIC#,
        TO_AMT = #toAmt:NUMERIC#,
        INSTRUCTION = #instruction:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SL_NO = #slNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use AuthorizedSignatoryInstructionTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAuthorizedSignatoryInstructionTOATL" inline-parameters="true">
        UPDATE AGRI_LOANS_AUTHORIZE_INSTRUCTION SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SL_NO = #slNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to AuthorizedSignatoryInstructionTO object (JavaBean) properties -->
    <result-map name="getAuthorizedSignatoryInstructionTOResultATL" class="com.see.truetransact.transferobject.common.authorizedsignatory.AuthorizedSignatoryInstructionTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="slNo" column="SL_NO"/>
        <property name="fromAmt" column="FROM_AMT"/>
        <property name="toAmt" column="TO_AMT"/>
        <property name="instruction" column="INSTRUCTION"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectAuthorizedSignatoryInstructionTOATL" result-map="getAuthorizedSignatoryInstructionTOResultATL" >
        SELECT * FROM AGRI_LOANS_AUTHORIZE_INSTRUCTION 
        WHERE BORROW_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY SL_NO
    </mapped-statement>
        
    <mapped-statement name="getSelectAuthorizedSignatoryInstructionMaxSLNOATL" result-class="java.util.HashMap" >
        SELECT MAX(SL_NO) AS MAX_AUTHORIZE_INSTRUCTION_NO FROM AGRI_LOANS_AUTHORIZE_INSTRUCTION WHERE BORROW_NO = #borrowNo:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
<!-- ================================================================= -->
        
	<!-- Use TermLoanPowerAttorneyTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertPowerAttorneyTOATL" inline-parameters="true">
        INSERT INTO AGRI_LOANS_POA
        (BORROW_NO, POA_NO, POA_HOLDER_NAME, STREET, AREA, CITY, STATE, COUNTRY_CODE, PINCODE, PHONE, PERIOD_FROM, PERIOD_TO, REMARKS, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, STATUS, TO_WHOM, ADDR_TYPE, STATUS_BY, STATUS_DT, CUST_ID
        ) VALUES (
        #borrowNo:VARCHAR#, #poaNo:NUMERIC#, #poaHolderName:VARCHAR#, #street:VARCHAR#, #area:VARCHAR#, #city:VARCHAR#, #state:VARCHAR#, #countryCode:VARCHAR#, #pincode:VARCHAR#, #phone:VARCHAR#, #periodFrom:DATE#, #periodTo:DATE#, #remarks:VARCHAR#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #status:VARCHAR#, #toWhom:VARCHAR#, #addrType:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #custId:VARCHAR#)
    </mapped-statement>

	<!-- Use TermLoanPowerAttorneyTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updatePowerAttorneyTOATL" inline-parameters="true">
        UPDATE AGRI_LOANS_POA SET 
		<!--BORROW_NO = #borrowNo:VARCHAR#,
		POA_NO = #poaNo:NUMERIC#,-->
        POA_HOLDER_NAME = #poaHolderName:VARCHAR#,
        STREET = #street:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        COUNTRY_CODE = #countryCode:VARCHAR#,
        PINCODE = #pincode:VARCHAR#,
        PHONE = #phone:VARCHAR#,
        PERIOD_FROM = #periodFrom:DATE#,
        PERIOD_TO = #periodTo:DATE#,
        REMARKS = #remarks:VARCHAR#,
        TO_WHOM = #toWhom:VARCHAR#,
        ADDR_TYPE = #addrType:VARCHAR#,
		<!--AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
		AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#,
        CUST_ID = #custId:VARCHAR# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND POA_NO = #poaNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanPowerAttorneyTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deletePowerAttorneyTOATL" inline-parameters="true">
		<!-- DELETE FROM AGRI_LOANS_POA 
		WHERE BORROW_NO = #value# -->
        UPDATE AGRAGRI_LOANS_POA SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND POA_NO = #poaNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanPowerAttorneyTO object (JavaBean) properties -->
    <result-map name="getPowerAttorneyTOResultATL" class="com.see.truetransact.transferobject.common.powerofattorney.PowerAttorneyTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="poaNo" column="POA_NO"/>
        <property name="poaHolderName" column="POA_HOLDER_NAME"/>
        <property name="street" column="STREET"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="countryCode" column="COUNTRY_CODE"/>
        <property name="pincode" column="PINCODE"/>
        <property name="phone" column="PHONE"/>
        <property name="periodFrom" column="PERIOD_FROM"/>
        <property name="periodTo" column="PERIOD_TO"/>
        <property name="remarks" column="REMARKS"/>
        <property name="toWhom" column="TO_WHOM"/>
        <property name="addrType" column="ADDR_TYPE"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="custId" column="CUST_ID"/>
    </result-map>
    <mapped-statement name="getSelectPowerAttorneyTOATL" result-map="getPowerAttorneyTOResultATL" >
        SELECT * FROM AGRI_LOANS_POA 
        WHERE BORROW_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(POA_NO)
    </mapped-statement>

    <mapped-statement name="getSelectPowerAttorneyMaxSLNOATL" result-class="java.util.HashMap" >
        SELECT MAX(POA_NO) AS MAX_POA_NO FROM AGRI_LOANS_POA WHERE BORROW_NO = #borrowNo:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
        <!-- Use TermLOANS_anctionTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanSanctionTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_SANCTION
        (BORROW_NO, SANCTION_NO, SANCTION_AUTHORITY, SANCTION_DT, SANCTION_MODE, REMARKS, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, STATUS, SL_NO, STATUS_BY, STATUS_DT
        ) VALUES (
        #borrowNo:VARCHAR#, #sanctionNo:VARCHAR#, #sanctionAuthority:VARCHAR#, #sanctionDt:DATE#, #sanctionMode:VARCHAR#, #remarks:VARCHAR#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#,  #status:VARCHAR#, #slNo:NUMERIC#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use TermLOANS_anctionTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanSanctionTO" inline-parameters="true">
        UPDATE AGRI_LOANS_SANCTION SET 
		<!--BORROW_NO = #borrowNo:VARCHAR#,
		SANCTION_NO = #sanctionNo:VARCHAR#,-->
        SANCTION_AUTHORITY = #sanctionAuthority:VARCHAR#,
        SANCTION_DT = #sanctionDt:DATE#,
        SANCTION_MODE = #sanctionMode:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        SL_NO = #slNo:NUMERIC#,
		<!--AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
		AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLOANS_anctionTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanSanctionTO" inline-parameters="true">
        UPDATE AGRI_LOANS_SANCTION SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLOANS_anctionTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanSanctionTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanSanctionTO">


        <property name="borrowNo" column="BORROW_NO"/>
        <property name="sanctionNo" column="SANCTION_NO"/>
        <property name="slNo" column="SL_NO"/>
        <property name="sanctionAuthority" column="SANCTION_AUTHORITY"/>
        <property name="sanctionDt" column="SANCTION_DT"/>
        <property name="sanctionMode" column="SANCTION_MODE"/>
        <property name="remarks" column="REMARKS"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanSanctionTO" result-map="getAgriTermLoanSanctionTOResult" >
        SELECT * FROM AGRI_LOANS_SANCTION 
        WHERE BORROW_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(SL_NO)
    </mapped-statement>
        
    <mapped-statement name="getSelectAgriTermLoanSanctionMaxSLNO" result-class="java.util.HashMap">
        SELECT MAX(SL_NO) AS MAX_SL_NO FROM AGRI_LOANS_SANCTION WHERE BORROW_NO = #borrowNo:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
        	<!-- Use TermLOANS_anctionFacilityTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanSanctionFacilityTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_SANCTION_DETAILS
        (BORROW_NO, SANCTION_NO, SL_NO, FACILITY_TYPE, LIMIT, FROM_DT, TO_DT, STATUS, NO_INSTALL, REPAYMENT_FREQUENCY, PRODUCT_ID, REPAYMENT_DT, MORATORIUM_GIVEN, NO_MORATORIUM, STATUS_BY, STATUS_DT
        ) VALUES (
        #borrowNo:VARCHAR#, #sanctionNo:VARCHAR#, #slNo:NUMERIC#, #facilityType:VARCHAR#, #limit:NUMERIC#, #fromDt:DATE#, #toDt:DATE#, #status:VARCHAR#, #noInstall:NUMERIC#, #repaymentFrequency:NUMERIC#, #productId:VARCHAR#, #repaymentDt:DATE#, #moratoriumGiven:VARCHAR#, #noMoratorium:NUMERIC#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use TermLOANS_anctionFacilityTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanSanctionFacilityTO" inline-parameters="true">
        UPDATE AGRI_LOANS_SANCTION_DETAILS SET 
		<!--BORROW_NO = #borrowNo:VARCHAR#,
		SANCTION_NO = #sanctionNo:VARCHAR#,
		SL_NO = #slNo:NUMERIC#,-->
        FACILITY_TYPE = #facilityType:VARCHAR#,
        LIMIT = #limit:NUMERIC#,
        FROM_DT = #fromDt:DATE#,
        TO_DT = #toDt:DATE#,
        NO_INSTALL = #noInstall:NUMERIC#,
        REPAYMENT_FREQUENCY = #repaymentFrequency:NUMERIC#,
        PRODUCT_ID = #productId:VARCHAR#,
        REPAYMENT_DT = #repaymentDt:DATE#,
        MORATORIUM_GIVEN = #moratoriumGiven:VARCHAR#,
        NO_MORATORIUM = #noMoratorium:NUMERIC#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR# AND SL_NO = #slNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLOANS_anctionFacilityTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanSanctionFacilityTO" inline-parameters="true">
        UPDATE AGRI_LOANS_SANCTION_DETAILS SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR# AND SL_NO = #slNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
        
    <mapped-statement name="updateProdID_AgriTermLoanSanctionFacilityTO" inline-parameters="true">
        UPDATE AGRI_LOANS_SANCTION_DETAILS SET 
        FACILITY_TYPE = #facilityType:VARCHAR#,
        PRODUCT_ID = #productId:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR# AND SL_NO = #slNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLOANS_anctionFacilityTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanSanctionFacilityTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanSanctionFacilityTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="sanctionNo" column="SANCTION_NO"/>
        <property name="slNo" column="SL_NO"/>
        <property name="facilityType" column="FACILITY_TYPE"/>
        <property name="limit" column="LIMIT"/>
        <property name="fromDt" column="FROM_DT"/>
        <property name="toDt" column="TO_DT"/>
        <property name="noInstall" column="NO_INSTALL"/>
        <property name="repaymentFrequency" column="REPAYMENT_FREQUENCY"/>
        <property name="productId" column="PRODUCT_ID"/>
        <property name="status" column="STATUS"/>
        <property name="repaymentDt" column="REPAYMENT_DT"/>
        <property name="moratoriumGiven" column="MORATORIUM_GIVEN"/>
        <property name="noMoratorium" column="NO_MORATORIUM"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanSanctionFacilityTO" result-map="getAgriTermLoanSanctionFacilityTOResult" >
		<!--SELECT * FROM AGRI_LOANS_SANCTION_DETAILS "LSD" ,AGRI_LOANS_FACILITY_DETAILS "LFD"
		WHERE LSD.BORROW_NO = #value# AND LFD.BORROW_NO=#value# AND LFD.SL_NO=LSD.SL_NO AND LFD.ACCT_STATUS !='CLOSED' AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(SL_NO) -->
        SELECT * FROM AGRI_LOANS_SANCTION_DETAILS
        WHERE BORROW_NO||'_'||SANCTION_NO IN 
        (SELECT BORROW_NO||'_'||SANCTION_NO FROM AGRI_LOANS_FACILITY_DETAILS WHERE 
        BORROW_NO = #value:VARCHAR# <!--AND ACCT_STATUS !='CLOSED'-->)  AND 
        (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
        ORDER BY TO_NUMBER(SL_NO)
    </mapped-statement>
        
    <mapped-statement name="getSelectAgriTermLoanSanctionTO.AUTHORIZE" result-map="getAgriTermLoanSanctionTOResult" >
        SELECT LS.* FROM AGRI_LOANS_SANCTION LS, AGRI_LOANS_FACILITY_DETAILS LFD, AGRI_LOANS_SANCTION_DETAILS LSD  
        WHERE 
        LFD.ACCT_NUM = #value:VARCHAR#  
        AND LFD.BORROW_NO = LSD.BORROW_NO 
        AND LFD.SANCTION_NO = LSD.SANCTION_NO 
        AND LFD.SL_NO = LSD.SL_NO 
        AND LFD.BORROW_NO = LS.BORROW_NO 
        AND LFD.SANCTION_NO = LS.SANCTION_NO 
        AND (LFD.STATUS = 'CREATED' OR LFD.STATUS = 'MODIFIED') 
        AND (LSD.STATUS = 'CREATED' OR LSD.STATUS = 'MODIFIED') 
        AND (LS.STATUS = 'CREATED' OR LS.STATUS = 'MODIFIED') 
    </mapped-statement>
                
    <mapped-statement name="getSelectAgriTermLoanSanctionFacilityTO.AUTHORIZE" result-map="getAgriTermLoanSanctionFacilityTOResult" >
        SELECT LSD.* FROM AGRI_LOANS_FACILITY_DETAILS LFD, AGRI_LOANS_SANCTION_DETAILS LSD  
        WHERE 
        LFD.ACCT_NUM = #value:VARCHAR#  
        AND LFD.BORROW_NO = LSD.BORROW_NO 
        AND LFD.SANCTION_NO = LSD.SANCTION_NO 
        AND LFD.SL_NO = LSD.SL_NO 
        AND (LFD.STATUS = 'CREATED' OR LFD.STATUS = 'MODIFIED') 
        AND (LSD.STATUS = 'CREATED' OR LSD.STATUS = 'MODIFIED') 
    </mapped-statement>
        
        
        	<!-- Use TermLoanFacilityTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanFacilityTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_FACILITY_DETAILS
        (
        BORROW_NO, SANCTION_NO, SL_NO, PROD_ID, SECURITY_TYPE, SECURITY_DETAILS, ACCOUNT_TYPE, INTEREST_NATURE, 
        INTEREST_TYPE, ACCOUNT_LIMIT, RISK_WEIGHT, DEMAND_PROM_DT, DEMAND_PROM_EXPDT, MULTI_DISBURSE, AOD_DT, PURPOSE_DESC, 
        GROUP_DESC, INTEREST, CONTACT_PERSON, CONTACT_PHONE, REMARKS, AUTHORIZE_STATUS_1, AUTHORIZE_REMARKS_1, STATUS, ACCT_NUM, 
        AUTHORIZE_BY_1, AUTHORIZE_DT_1, CREATE_DT, STATUS_BY, STATUS_DT, AVAILABLE_BALANCE, CLEAR_BALANCE, UNCLEAR_BALANCE, 
        SHADOW_DEBIT, SHADOW_CREDIT, TOTAL_BALANCE, LAST_TRANS_DT, BRANCH_ID, ACCT_STATUS, INT_GET_FROM, LOAN_BALANCE_PRINCIPAL,
        LOAN_PAID_INT, LOAN_PAID_PENALINT, EXCESS_AMT, LAST_REPAY_DT, AUTHORIZE_STATUS_2, AUTHORIZE_REMARKS_2, AUTHORIZE_BY_2,
        AUTHORIZE_DT_2, CREATED_BY, ACCT_NAME,ACCT_OPEN_DT,RECOMMANDED_BY,POF_ATTORNEY,AUTH_SIGNATORY,DOC_DETAILS,CARD_TYPE,CARD_LIMIT,
        CARD_PERIOD,REVIEW_DT ,LAST_INT_CALC_DT,INSPECTION<!--,ACCT_CLOSE_DT-->
        ) VALUES (
        #borrowNo:VARCHAR#, #sanctionNo:VARCHAR#, #slNo:NUMERIC#, #prodId:VARCHAR#, #securityType:VARCHAR#, 
        #securityDetails:VARCHAR#, #accountType:VARCHAR#, #interestNature:VARCHAR#, #interestType:VARCHAR#, #accountLimit:VARCHAR#,
        #riskWeight:VARCHAR#, #demandPromDt:DATE#, #demandPromExpdt:DATE#, #multiDisburse:VARCHAR#, #aodDt:DATE#,
        #purposeDesc:VARCHAR#, #groupDesc:VARCHAR#, #interest:VARCHAR#, #contactPerson:VARCHAR#, #contactPhone:VARCHAR#,
        #remarks:VARCHAR#, #authorizeStatus1:VARCHAR#, #authorizeRemarks1:VARCHAR#, #status:VARCHAR#, #acctNum:VARCHAR#,
        #authorizeBy1:VARCHAR#, #authorizeDt1:TIMESTAMP#, #createDt:TIMESTAMP#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, 
        #availableBalance:NUMERIC#, #clearBalance:NUMERIC#, 
        #unclearBalance:NUMERIC#, #shadowDebit:NUMERIC#, #shadowCredit:NUMERIC#, #totalBalance:NUMERIC#, #lastTransDt:TIMESTAMP#,
        #branchId:VARCHAR#, #acctStatus:VARCHAR#, #intGetFrom:VARCHAR#, #loanBalancePrincipal:NUMERIC#, #loanPaidInt:NUMERIC#,
        #loanPaidPenalint:NUMERIC#, #excessAmt:NUMERIC#, #lastRepayDt:TIMESTAMP#, #authorizeStatus2:VARCHAR#, 
        #authorizeRemarks2:VARCHAR#, #authorizeBy2:VARCHAR#, #authorizeDt2:TIMESTAMP#, #createdBy:VARCHAR#, 
        #acctName:VARCHAR#,#accOpenDt:DATE#,#recommendedBy:VARCHAR#,#pofAttorney:VARCHAR#,#authorizedSignatory:VARCHAR#,
        #docDetails:VARCHAR#,#cardType:VARCHAR#,#cardLimit:NUMERIC#,#cardPeriod:NUMERIC#,#reviewDate:DATE#,#accOpenDt:DATE#-1,
        #inspection:VARCHAR#<!--,#accCloseDt:DATE#-->)
    </mapped-statement>

	<!-- Use TermLoanFacilityTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanFacilityTO" inline-parameters="true">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET 
		<!--BORROW_NO = #borrowNo:VARCHAR#,
		SANCTION_NO = #sanctionNo:VARCHAR#,
		RECARABLE = #recarable:VARCHAR#,
		INTEREST_NATURE = #interestNature:VARCHAR#,
		SL_NO = #slNo:NUMERIC#,-->
        INSPECTION=#inspection:VARCHAR#,
        AVAILABLE_BALANCE  = #availableBalance:NUMERIC#,
        CARD_TYPE  =  #cardType:VARCHAR#,
        CARD_LIMIT  = #cardLimit:NUMERIC#,
        CARD_PERIOD = #cardPeriod:NUMERIC#,
        REVIEW_DT   = #reviewDate:DATE#,
        PROD_ID = #prodId:VARCHAR#,
        SECURITY_TYPE = #securityType:VARCHAR#,
        SECURITY_DETAILS = #securityDetails:VARCHAR#,
        ACCOUNT_TYPE = #accountType:VARCHAR#,
        INTEREST_TYPE = #interestType:VARCHAR#,
        ACCOUNT_LIMIT = #accountLimit:VARCHAR#,
        RISK_WEIGHT = #riskWeight:VARCHAR#,
        DEMAND_PROM_DT = #demandPromDt:DATE#,
        DEMAND_PROM_EXPDT = #demandPromExpdt:DATE#,
        MULTI_DISBURSE = #multiDisburse:VARCHAR#,
        AOD_DT = #aodDt:DATE#,
        PURPOSE_DESC = #purposeDesc:VARCHAR#,
        GROUP_DESC = #groupDesc:VARCHAR#,
        INTEREST = #interest:VARCHAR#,
        CONTACT_PERSON = #contactPerson:VARCHAR#,
        CONTACT_PHONE = #contactPhone:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        INT_GET_FROM = #intGetFrom:VARCHAR#,
        BRANCH_ID = #branchId:VARCHAR#,
        ACCT_STATUS = #acctStatus:VARCHAR#,
        ACCT_NAME = #acctName:VARCHAR#,
        AUTHORIZE_STATUS_1 = #authorizeStatus1:VARCHAR#,
        AUTHORIZE_REMARKS_1 = #authorizeRemarks1:VARCHAR#,
        AUTHORIZE_BY_1 = #authorizeBy1:VARCHAR#,
        AUTHORIZE_DT_1 = #authorizeDt1:TIMESTAMP#,
        AUTHORIZE_STATUS_2 = #authorizeStatus2:VARCHAR#,
        AUTHORIZE_REMARKS_2 = #authorizeRemarks2:VARCHAR#,
        AUTHORIZE_BY_2 = #authorizeBy2:VARCHAR#,
        AUTHORIZE_DT_2 = #authorizeDt2:TIMESTAMP#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#, 
        ACCT_OPEN_DT=#accOpenDt:TIMESTAMP#,
        POF_ATTORNEY=#pofAttorney:VARCHAR#,
        AUTH_SIGNATORY=#authorizedSignatory:VARCHAR#,
        DOC_DETAILS=#docDetails:VARCHAR#,
                
               <!-- ACCT_CLOSE_DT=#accCloseDt:DATE#,-->
        RECOMMANDED_BY=#recommendedBy:VARCHAR#
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR# AND SL_NO = #slNo:NUMERIC#  AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
    <mapped-statement name="updateAgriTermLoanFacilityTOMaterializedView" inline-parameters="true">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET 
		<!--BORROW_NO = #borrowNo:VARCHAR#,
		SANCTION_NO = #sanctionNo:VARCHAR#,
		RECARABLE = #recarable:VARCHAR#,
		INTEREST_NATURE = #interestNature:VARCHAR#,
		SL_NO = #slNo:NUMERIC#,-->
        CARD_TYPE  =  #cardType:VARCHAR#,
        PROD_ID = #prodId:VARCHAR#,
        SECURITY_TYPE = #securityType:VARCHAR#,
        SECURITY_DETAILS = #securityDetails:VARCHAR#,
        ACCOUNT_TYPE = #accountType:VARCHAR#,
        INTEREST_TYPE = #interestType:VARCHAR#,
        ACCOUNT_LIMIT = #accountLimit:VARCHAR#,
        RISK_WEIGHT = #riskWeight:VARCHAR#,
        DEMAND_PROM_DT = #demandPromDt:DATE#,
        DEMAND_PROM_EXPDT = #demandPromExpdt:DATE#,
        MULTI_DISBURSE = #multiDisburse:VARCHAR#,
        AOD_DT = #aodDt:DATE#,
        PURPOSE_DESC = #purposeDesc:VARCHAR#,
        GROUP_DESC = #groupDesc:VARCHAR#,
        INTEREST = #interest:VARCHAR#,
        CONTACT_PERSON = #contactPerson:VARCHAR#,
        CONTACT_PHONE = #contactPhone:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        INT_GET_FROM = #intGetFrom:VARCHAR#,
        BRANCH_ID = #branchId:VARCHAR#,
        ACCT_STATUS = #acctStatus:VARCHAR#,
        ACCT_NAME = #acctName:VARCHAR#,
        AUTHORIZE_STATUS_1 = #authorizeStatus1:VARCHAR#,
        AUTHORIZE_REMARKS_1 = #authorizeRemarks1:VARCHAR#,
        AUTHORIZE_BY_1 = #authorizeBy1:VARCHAR#,
        AUTHORIZE_DT_1 = #authorizeDt1:TIMESTAMP#,
        AUTHORIZE_STATUS_2 = #authorizeStatus2:VARCHAR#,
        AUTHORIZE_REMARKS_2 = #authorizeRemarks2:VARCHAR#,
        AUTHORIZE_BY_2 = #authorizeBy2:VARCHAR#,
        AUTHORIZE_DT_2 = #authorizeDt2:TIMESTAMP#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#, 
        ACCT_OPEN_DT=#accOpenDt:TIMESTAMP#,
        RECOMMANDED_BY=#recommendedBy:VARCHAR#
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR# AND SL_NO = #slNo:NUMERIC#  AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanFacilityTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanFacilityTO" inline-parameters="true">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR# AND SL_NO = #slNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
                <!--AND ACCT_NUM = #acctNum:VARCHAR#  This line added by Rajesh -->
    </mapped-statement>

    <mapped-statement name="updateProdID_AgriTermLoanFacilityTO" inline-parameters="true">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET
        PROD_ID = #prodId:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR# AND SL_NO = #slNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanFacilityTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanFacilityTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanFacilityTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="sanctionNo" column="SANCTION_NO"/>
        <property name="cardType" column="CARD_TYPE"/>
        <property name="slNo" column="SL_NO"/>
        <property name="prodId" column="PROD_ID"/>
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="securityType" column="SECURITY_TYPE"/>
        <property name="securityDetails" column="SECURITY_DETAILS"/>
        <property name="accountType" column="ACCOUNT_TYPE"/>
        <property name="interestType" column="INTEREST_TYPE"/>
        <property name="accountLimit" column="ACCOUNT_LIMIT"/>
        <property name="riskWeight" column="RISK_WEIGHT"/>
        <property name="demandPromDt" column="DEMAND_PROM_DT"/>
        <property name="demandPromExpdt" column="DEMAND_PROM_EXPDT"/>
        <property name="multiDisburse" column="MULTI_DISBURSE"/>
        <property name="aodDt" column="AOD_DT"/>
        <property name="purposeDesc" column="PURPOSE_DESC"/>
        <property name="groupDesc" column="GROUP_DESC"/>
        <property name="interest" column="INTEREST"/>
        <property name="contactPerson" column="CONTACT_PERSON"/>
        <property name="contactPhone" column="CONTACT_PHONE"/>
        <property name="remarks" column="REMARKS"/>
        <property name="authorizeStatus1" column="AUTHORIZE_STATUS_1"/>
        <property name="authorizeRemarks1" column="AUTHORIZE_REMARKS_1"/>
        <property name="authorizeBy1" column="AUTHORIZE_BY_1"/>
        <property name="authorizeDt1" column="AUTHORIZE_DT_1"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="intGetFrom" column="INT_GET_FROM"/>
        <property name="branchId" column="BRANCH_ID"/>
        <property name="acctStatus" column="ACCT_STATUS"/>
        <property name="authorizeStatus2" column="AUTHORIZE_STATUS_2"/>
        <property name="authorizeRemarks2" column="AUTHORIZE_REMARKS_2"/>
        <property name="authorizeBy2" column="AUTHORIZE_BY_2"/>
        <property name="authorizeDt2" column="AUTHORIZE_DT_2"/>
        <property name="createdBy" column="CREATED_BY"/>
        <property name="acctName" column="ACCT_NAME"/>
        <property name="accOpenDt" column="ACCT_OPEN_DT"/>
        <property name="availableBalance" column="AVAILABLE_BALANCE"/>  
        <property name="pofAttorney" column="POF_ATTORNEY"/>  
        <property name="authorizedSignatory" column="AUTH_SIGNATORY"/>  
        <property name="docDetails" column="DOC_DETAILS"/>                
        <property name="cardLimit" column="CARD_LIMIT"/>                
        <property name="cardPeriod" column="CARD_PERIOD"/>                
        <property name="reviewDate"  column="REVIEW_DT"/>
        <property name="inspection"  column="INSPECTION"/>
        <property name="clearBalance"  column="CLEAR_BALANCE"/>
        <property name="shadowDebit"  column="SHADOW_DEBIT"/>
        <property name="shadowCredit"  column="SHADOW_CREDIT"/>
        <property name="recommendedBy" column="RECOMMANDED_BY"/>
        <property name="lastIntCalcDt" column="LAST_INT_CALC_DT"/>
    </result-map>
        
    <mapped-statement name="getSelectAgriTermLoanFacilityTO" result-map="getAgriTermLoanFacilityTOResult" >
        SELECT * FROM AGRI_LOANS_FACILITY_DETAILS 
        WHERE BORROW_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')<!--AND ACCT_STATUS !='CLOSED'--> ORDER BY SANCTION_NO
    </mapped-statement>
        
    <mapped-statement name="getSelectAgriTermLoanFacilityTO.AUTHORIZE" result-map="getAgriTermLoanFacilityTOResult" >
        SELECT * FROM AGRI_LOANS_FACILITY_DETAILS 
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
    <mapped-statement name="getSelectAgriTermLoanFacilityTOMaterializedView" result-map="getTermLoanFacilityTOResult" >
        SELECT * FROM AGRI_LOANS_FACILITY_DETAILS_TMP 
        WHERE ACCT_NUM = #value:VARCHAR# 
    </mapped-statement>
        
        <!-- Use TermLOANS_ecurityTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanSecurityTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_SECURITY_DETAILS
        (BORROW_NO, SLNO, ACCT_NUM, CUST_ID, SECURITY_NO, FROM_DT, TO_DT, SECURITY_AMT, STATUS, STATUS_BY, STATUS_DT, MARGIN, ELIGIBLE_LOAN_AMT
        ) VALUES (
        #borrowNo:VARCHAR#, #slno:NUMERIC#, #acctNum:VARCHAR#, #custId:VARCHAR#, #securityNo:NUMERIC#, #fromDt:DATE#, #toDt:DATE#, #securityAmt:NUMERIC#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #margin:NUMERIC#, #eligibleLoanAmt:NUMERIC#)
    </mapped-statement>

	<!-- Use TermLOANS_ecurityTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanSecurityTO" inline-parameters="true">
        UPDATE AGRI_LOANS_SECURITY_DETAILS SET 
        SECURITY_NO = #securityNo:NUMERIC#, 
        CUST_ID = #custId:VARCHAR#,
        FROM_DT = #fromDt:DATE#,
        TO_DT = #toDt:DATE#,
        SECURITY_AMT = #securityAmt:NUMERIC#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#,
        MARGIN = #margin:NUMERIC#,
        ELIGIBLE_LOAN_AMT = #eligibleLoanAmt:NUMERIC#
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>

	<!-- Use TermLOANS_ecurityTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanSecurityTO" inline-parameters="true">
        UPDATE AGRI_LOANS_SECURITY_DETAILS SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLOANS_ecurityTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanSecurityTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanSecurityTO">
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="slno" column="SLNO"/>
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="custId" column="CUST_ID"/>
        <property name="securityNo" column="SECURITY_NO"/>
        <property name="fromDt" column="FROM_DT"/>
        <property name="toDt" column="TO_DT"/>
        <property name="securityAmt" column="SECURITY_AMT"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="margin" column="MARGIN"/>
        <property name="eligibleLoanAmt" column="ELIGIBLE_LOAN_AMT"/>
    </result-map>
        
    <mapped-statement name="getSelectAgriTermLoanSecurityTO" result-map="getAgriTermLoanSecurityTOResult" >
        SELECT * FROM AGRI_LOANS_SECURITY_DETAILS 
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(SLNO)
    </mapped-statement>

    <mapped-statement name="getSelectAgriTermLOANS_ecurityMaxSLNO" result-class="java.util.HashMap">
        SELECT MAX(SLNO) AS MAX_NO FROM AGRI_LOANS_SECURITY_DETAILS WHERE ACCT_NUM = #acctNum:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
    <mapped-statement name="getAgriLoanSecurity_Eligible_Loan_Amt" result-class="java.util.HashMap">
        SELECT SUM(ELIGIBLE_LOAN_AMT) AS ELIGIBLE_LOAN_AMOUNT 
        FROM AGRI_LOANS_SECURITY_DETAILS 
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR# AND STATUS IN ('CREATED', 'MODIFIED')
    </mapped-statement>
        
    <mapped-statement name="getMinimaminstallmentATL" result-class="java.util.HashMap">
        SELECT * FROM AGRI_LOANS_INSTALLMENT WHERE INSTALLMENT_DT =(SELECT MIN(INSTALLMENT_DT) FROM AGRI_LOANS_INSTALLMENT WHERE 
        ACCT_NUM =#ACT_NUM:VARCHAR#  AND IS_BALANCE IS NULL AND STATUS !='DELETED') AND STATUS !='DELETED' AND ACCT_NUM =#ACT_NUM:VARCHAR# ORDER BY INSTALLMENT_SLNO
    </mapped-statement>
        
    <mapped-statement name="updateloanInstallmentATL" inline-parameters="true">
        UPDATE AGRI_LOANS_INSTALLMENT SET IS_BALANCE=0,INSTALLMENT_PAID='Y' WHERE ACCT_NUM=#ACCT_NUM:VARCHAR# AND INSTALLMENT_SLNO=#INSTALLMENT_NO:NUMERIC# AND STATUS !='DELETED'
    </mapped-statement>
        
          <!-- Use TermLoanRepaymentTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanRepaymentTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_REPAY_SCHEDULE
        (BORROW_NO, PROD_ID, SCHEDULE_NO, LOAN_AMOUNT, INT_TYPE, INSTALL_TYPE, REPAYMENT_TYPE, NO_INSTALLMENTS, FIRST_INSTALL_DT, LAST_INSTALL_DT, TOTAL_BASE_AMT, BALANCE_LOAN_AMT, AMT_PENULTIMATE_INSTALL, EMI, AMT_LAST_INSTALL, REPAYMENT_PR, TOTAL_INSTALL_AMT, REPAY_INTEREST, ADD_SI, POST_DATE_CHQALLOWED, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, ACCT_NUM, STATUS, STATUS_BY, STATUS_DT, REPAY_ACTIVE, DISBURSEMENT_ID, DISBURSEMENT_DT, SCHEDULE_MODE, REF_SCHEDULE_NO
        ) VALUES (
        #borrowNo:VARCHAR#, #prodId:VARCHAR#, #scheduleNo:NUMERIC#, #loanAmount:NUMERIC#, #intType:VARCHAR#, #installType:VARCHAR#, #repaymentType:NUMERIC#, #noInstallments:NUMERIC#, #firstInstallDt:DATE#, #lastInstallDt:DATE#, #totalBaseAmt:NUMERIC#, #balanceLoanAmt:NUMERIC#, #amtPenultimateInstall:NUMERIC#, #emi:NUMERIC#, #amtLastInstall:NUMERIC#, #repaymentPr:NUMERIC#, #totalInstallAmt:NUMERIC#, #repayInterest:NUMERIC#, #addSi:VARCHAR#, #postDateChqallowed:VARCHAR#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #acctNum:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #repayActive:VARCHAR#, #disbursementId:NUMERIC#, #disbursementDt:DATE#, #scheduleMode:VARCHAR#, #refScheduleNo:NUMERIC#)
    </mapped-statement>

     
	<!-- Use TermLoanRepaymentTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanRepaymentTO" inline-parameters="true">
        UPDATE AGRI_LOANS_REPAY_SCHEDULE SET 
		<!--BORROW_NO = #borrowNo:VARCHAR#,-->
        PROD_ID = #prodId:VARCHAR#,
		<!--SCHEDULE_NO = #scheduleNo:VARCHAR#,-->
        LOAN_AMOUNT = #loanAmount:NUMERIC#,
        INT_TYPE = #intType:VARCHAR#,
        INSTALL_TYPE = #installType:VARCHAR#,
        REPAYMENT_TYPE = #repaymentType:NUMERIC#,
        NO_INSTALLMENTS = #noInstallments:NUMERIC#,
        FIRST_INSTALL_DT = #firstInstallDt:DATE#,
        LAST_INSTALL_DT = #lastInstallDt:DATE#,
        TOTAL_BASE_AMT = #totalBaseAmt:NUMERIC#,
        BALANCE_LOAN_AMT = #balanceLoanAmt:NUMERIC#,
        AMT_PENULTIMATE_INSTALL = #amtPenultimateInstall:NUMERIC#,
        EMI = #emi:NUMERIC#,
        AMT_LAST_INSTALL = #amtLastInstall:NUMERIC#,
        REPAYMENT_PR = #repaymentPr:NUMERIC#,
        TOTAL_INSTALL_AMT = #totalInstallAmt:NUMERIC#,
        REPAY_INTEREST = #repayInterest:NUMERIC#,
        ADD_SI = #addSi:VARCHAR#,
        POST_DATE_CHQALLOWED = #postDateChqallowed:VARCHAR#,
        AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
		<!--ACCT_NUM = #acctNum:VARCHAR#-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        REPAY_ACTIVE = #repayActive:VARCHAR#,
        DISBURSEMENT_ID = #disbursementId:NUMERIC#,
        SCHEDULE_MODE = #scheduleMode:VARCHAR#,
        REF_SCHEDULE_NO = #refScheduleNo:NUMERIC#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SCHEDULE_NO = #scheduleNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>

	<!-- Use TermLoanRepaymentTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanRepaymentTO" inline-parameters="true">
        UPDATE AGRI_LOANS_REPAY_SCHEDULE SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SCHEDULE_NO = #scheduleNo:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>

    <mapped-statement name="updateProdID_AgriTermLoanRepaymentTO" inline-parameters="true">
        UPDATE AGRI_LOANS_REPAY_SCHEDULE SET 
        PROD_ID = #prodId:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>
        
    <mapped-statement name="updateRepayScheduleNoInAgriLOANS_Disbursement" inline-parameters="true">
        UPDATE AGRI_LOANS_DISBURSEMENT SET 
        REPAYMENT_SCHEDULE_NO = #REPAYMENT_SCHEDULE_NO:VARCHAR#
        WHERE ACT_NUM = #ACCOUNTNO# AND DISBURSEMENT_ID = #DISBURSEMENT_ID:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>
        
	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanRepaymentTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanRepaymentTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanRepaymentTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="prodId" column="PROD_ID"/>
        <property name="scheduleNo" column="SCHEDULE_NO"/>
        <property name="loanAmount" column="LOAN_AMOUNT"/>
        <property name="intType" column="INT_TYPE"/>
        <property name="installType" column="INSTALL_TYPE"/>
        <property name="repaymentType" column="REPAYMENT_TYPE"/>
        <property name="noInstallments" column="NO_INSTALLMENTS"/>
        <property name="firstInstallDt" column="FIRST_INSTALL_DT"/>
        <property name="lastInstallDt" column="LAST_INSTALL_DT"/>
        <property name="totalBaseAmt" column="TOTAL_BASE_AMT"/>
        <property name="balanceLoanAmt" column="BALANCE_LOAN_AMT"/>
        <property name="amtPenultimateInstall" column="AMT_PENULTIMATE_INSTALL"/>
        <property name="emi" column="EMI"/>
        <property name="amtLastInstall" column="AMT_LAST_INSTALL"/>
        <property name="repaymentPr" column="REPAYMENT_PR"/>
        <property name="totalInstallAmt" column="TOTAL_INSTALL_AMT"/>
        <property name="repayInterest" column="REPAY_INTEREST"/>
        <property name="addSi" column="ADD_SI"/>
        <property name="postDateChqallowed" column="POST_DATE_CHQALLOWED"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="repayActive" column="REPAY_ACTIVE"/>
        <property name="disbursementId" column="DISBURSEMENT_ID"/>
        <property name="disbursementDt" column="DISBURSEMENT_DT"/>
        <property name="scheduleMode" column="SCHEDULE_MODE"/>

        <property name="refScheduleNo" column="REF_SCHEDULE_NO"/>
    </result-map>
        
    <mapped-statement name="getSelectAgriTermLoanRepaymentTO" result-map="getAgriTermLoanRepaymentTOResult" >
        SELECT * FROM AGRI_LOANS_REPAY_SCHEDULE 
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(SCHEDULE_NO)
    </mapped-statement>
        
    <mapped-statement name="getSelectAgriTermLoanRepaymentMaxSLNO" result-class="java.util.HashMap">
        SELECT MAX(SCHEDULE_NO) AS MAX_SCHEDULE_NO FROM AGRI_LOANS_REPAY_SCHEDULE WHERE ACCT_NUM = #acctNum:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        <!-- Use TermLoanInstallMultIntTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanInstallMultIntTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_INSTALLMENT_MULTIRATE
        (ACCT_NUM, SCHEDULE_ID, INSTALLMENT_SLNO, INTEREST_RATE, FROM_DT, TO_DT
        ) VALUES (
        #acctNum:VARCHAR#, #scheduleId:NUMERIC#, #installmentSlno:NUMERIC#, #interestRate:NUMERIC#, #fromDt:DATE#, #toDt:DATE#)
    </mapped-statement>

	<!-- Use TermLoanInstallMultIntTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanInstallMultIntTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INSTALLMENT_MULTIRATE SET 
        INTEREST_RATE = #interestRate:NUMERIC#,
        FROM_DT = #fromDt:DATE#,
        TO_DT = #toDt:DATE#
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SCHEDULE_ID = #scheduleId:NUMERIC# AND INSTALLMENT_SLNO = #installmentSlno:NUMERIC#
    </mapped-statement>

	<!-- Use TermLoanInstallMultIntTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanInstallMultIntTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INSTALLMENT_MULTIRATE SET 
        INTEREST_RATE = #interestRate:NUMERIC#
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SCHEDULE_ID = #scheduleId:NUMERIC# AND INSTALLMENT_SLNO = #installmentSlno:NUMERIC#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanInstallMultIntTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanInstallMultIntTOResult" class="com.see.truetransact.transferobject.termloan.TermLoanInstallMultIntTO">
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="scheduleId" column="SCHEDULE_ID"/>
        <property name="installmentSlno" column="INSTALLMENT_SLNO"/>
        <property name="interestRate" column="INTEREST_RATE"/>
        <property name="fromDt" column="FROM_DT"/>
        <property name="toDt" column="TO_DT"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanInstallMultIntTO" result-map="getAgriTermLoanInstallMultIntTOResult" >
        SELECT * FROM AGRI_LOANS_INSTALLMENT_MULTIRATE 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SCHEDULE_ID = #scheduleId:NUMERIC# AND INSTALLMENT_SLNO = #installmentSlno:NUMERIC#
    </mapped-statement>
        
        <!-- Use TermLoanInstallmentTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanInstallmentTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_INSTALLMENT
        (ACCT_NUM, SCHEDULE_ID, INSTALLMENT_SLNO, INSTALLMENT_DT, PRINCIPAL_AMT, INTEREST_AMT, TOTAL_AMT, BALANCE_AMT, STATUS, INTEREST_RATE, INSTALLMENT_PAID
        ) VALUES (
        #acctNum:VARCHAR#, #scheduleId:NUMERIC#, #installmentSlno:NUMERIC#, #installmentDt:DATE#, #principalAmt:NUMERIC#, #interestAmt:NUMERIC#, #totalAmt:NUMERIC#, #balanceAmt:NUMERIC#, #status:VARCHAR#, #interestRate:NUMERIC#, #installmentPaid:VARCHAR#)
    </mapped-statement>

	<!-- Use TermLoanInstallmentTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanInstallmentTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INSTALLMENT SET 
		<!--ACCT_NUM = #acctNum:VARCHAR#,
		SCHEDULE_ID = #scheduleId:VARCHAR#,
		INSTALLMENT_SLNO = #installmentSlno:NUMERIC#,-->
        INSTALLMENT_DT = #installmentDt:DATE#,
        PRINCIPAL_AMT = #principalAmt:NUMERIC#,
        INTEREST_AMT = #interestAmt:NUMERIC#,
        TOTAL_AMT = #totalAmt:NUMERIC#,
        BALANCE_AMT = #balanceAmt:NUMERIC#,
        INTEREST_RATE = #interestRate:NUMERIC#,
        INSTALLMENT_PAID = #installmentPaid:VARCHAR#,
        STATUS = #status:VARCHAR#
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SCHEDULE_ID = #scheduleId:NUMERIC# AND INSTALLMENT_SLNO = #installmentSlno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')   
    </mapped-statement>

	<!-- Use TermLoanInstallmentTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanInstallmentTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INSTALLMENT SET 
        STATUS = #status:VARCHAR#
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SCHEDULE_ID = #scheduleId:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')  
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanInstallmentTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanInstallmentTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanInstallmentTO">
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="scheduleId" column="SCHEDULE_ID"/>
        <property name="installmentSlno" column="INSTALLMENT_SLNO"/>
        <property name="installmentDt" column="INSTALLMENT_DT"/>
        <property name="principalAmt" column="PRINCIPAL_AMT"/>
        <property name="interestAmt" column="INTEREST_AMT"/>
        <property name="totalAmt" column="TOTAL_AMT"/>
        <property name="balanceAmt" column="BALANCE_AMT"/>
        <property name="status" column="STATUS"/>
        <property name="interestRate" column="INTEREST_RATE"/>
        <property name="installmentPaid" column="INSTALLMENT_PAID"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanInstallmentTO" result-map="getAgriTermLoanInstallmentTOResult" >
        SELECT * FROM AGRI_LOANS_INSTALLMENT 
        WHERE ACCT_NUM = #DELACTNUM:VARCHAR# AND SCHEDULE_ID = #DELSCHNUM:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(INSTALLMENT_SLNO) 
    </mapped-statement>
        
    <mapped-statement name="getSelectAgriTermLoanInstallmentMaxSLNO" result-class="java.util.HashMap">
        SELECT MAX(INSTALLMENT_SLNO) AS MAX_INSTALL_NO FROM AGRI_LOANS_INSTALLMENT WHERE ACCT_NUM = #acctNum:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
        <!-- Use TermLoanGuarantorTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanGuarantorTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_GUARANTOR_DETAILS
        (BORROW_NO, PROD_ID, CUST_ID, GUARANTOR_AC_NO, NAME, STREET, AREA, CITY, STATE, COUNTRY_CODE, PINCODE, PHONE, CONSTITUTION, GUARANTOR_NET_WORTH, GUARANTOR_NETWORTH_ON, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, ACCT_NUM, STATUS, SLNO, STATUS_BY, STATUS_DT, GUARANTOR_PROD_TYPE, GUARANTOR_PROD_ID, DOB,SECURITY_TYPE
        ) VALUES (
        #borrowNo:VARCHAR#, #prodId:VARCHAR#, #custId:VARCHAR#, #guarantorAcNo:VARCHAR#, #name:VARCHAR#, #street:VARCHAR#, #area:VARCHAR#, #city:VARCHAR#, #state:VARCHAR#, #countryCode:VARCHAR#, #pincode:VARCHAR#, #phone:VARCHAR#, #constitution:VARCHAR#, #guarantorNetWorth:NUMERIC#, #guarantorNetworthOn:DATE#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #acctNum:VARCHAR#, #status:VARCHAR#, #slno:NUMERIC#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #guarantorProdType:VARCHAR#, #guarantorProdId:VARCHAR#, #dob:DATE#,#securityType:VARCHAR#)
    </mapped-statement>

	<!-- Use TermLoanGuarantorTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanGuarantorTO" inline-parameters="true">
        UPDATE AGRI_LOANS_GUARANTOR_DETAILS SET 
		<!--BORROW_NO = #borrowNo:VARCHAR#,-->
        SECURITY_TYPE = #securityType:VARCHAR#,
        PROD_ID = #prodId:VARCHAR#,
        CUST_ID = #custId:VARCHAR#,
        GUARANTOR_AC_NO = #guarantorAcNo:VARCHAR#,
        NAME = #name:VARCHAR#,
        GUARANTOR_PROD_TYPE = #guarantorProdType:VARCHAR#,
        GUARANTOR_PROD_ID = #guarantorProdId:VARCHAR#,
        DOB = #dob:DATE#,
        STREET = #street:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        COUNTRY_CODE = #countryCode:VARCHAR#,
        PINCODE = #pincode:VARCHAR#,
        PHONE = #phone:VARCHAR#,
        CONSTITUTION = #constitution:VARCHAR#,
        GUARANTOR_NET_WORTH = #guarantorNetWorth:NUMERIC#,
        GUARANTOR_NETWORTH_ON = #guarantorNetworthOn:DATE#,
        AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
		<!--ACCT_NUM = #acctNum:VARCHAR#,-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
		<!--SLNO = #slno:VARCHAR#-->
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanGuarantorTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanGuarantorTO" inline-parameters="true">
        UPDATE AGRI_LOANS_GUARANTOR_DETAILS SET 
        AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

    <mapped-statement name="updateProdID_AgriTermLoanGuarantorTO" inline-parameters="true">
        UPDATE AGRI_LOANS_GUARANTOR_DETAILS SET
        PROD_ID = #prodId:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanGuarantorTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanGuarantorTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanGuarantorTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="prodId" column="PROD_ID"/>
        <property name="custId" column="CUST_ID"/>
        <property name="guarantorAcNo" column="GUARANTOR_AC_NO"/>
        <property name="name" column="NAME"/>
        <property name="street" column="STREET"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="countryCode" column="COUNTRY_CODE"/>
        <property name="pincode" column="PINCODE"/>
        <property name="phone" column="PHONE"/>
        <property name="constitution" column="CONSTITUTION"/>
        <property name="guarantorNetWorth" column="GUARANTOR_NET_WORTH"/>
        <property name="guarantorNetworthOn" column="GUARANTOR_NETWORTH_ON"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="status" column="STATUS"/>
        <property name="slno" column="SLNO"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="guarantorProdType" column="GUARANTOR_PROD_TYPE"/>
        <property name="guarantorProdId" column="GUARANTOR_PROD_ID"/>
        <property name="dob" column="DOB"/>
        <property name="securityType" column="SECURITY_TYPE"/> 
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanGuarantorTO" result-map="getAgriTermLoanGuarantorTOResult" >
        SELECT * FROM AGRI_LOANS_GUARANTOR_DETAILS 
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(SLNO)
    </mapped-statement>
        
    <mapped-statement name="getSelectAgriTermLoanGuarantorMaxSLNO" result-class="java.util.HashMap">
        SELECT MAX(SLNO) AS MAX_SL_NO FROM AGRI_LOANS_GUARANTOR_DETAILS WHERE ACCT_NUM = #acctNum:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
        <!-- Use TermLoanDocumentTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanDocumentTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_DOC
        (BORROW_NO, ACCT_NO, DOC_TYPE, DOC_FORM_NO, IS_SUBMITTED, SUBMITTED_DT, REMARKS, STATUS_BY, STATUS_DT, DOC_EXP_DT, IS_MANDATORY, IS_EXECUTED, DOC_EXEC_DT
        ) VALUES (
        #borrowNo:VARCHAR#, #acctNo:VARCHAR#, #docType:VARCHAR#, #docFormNo:VARCHAR#, #isSubmitted:VARCHAR#, #submittedDt:DATE#, #remarks:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#, #docExpDt:DATE#, #isMandatory:VARCHAR#, #isExecuted:VARCHAR#, #docExecDt:DATE#)
    </mapped-statement>

	<!-- Use TermLoanDocumentTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanDocumentTO" inline-parameters="true">
        UPDATE AGRI_LOANS_DOC SET 
        IS_SUBMITTED = #isSubmitted:VARCHAR#,
        SUBMITTED_DT = #submittedDt:DATE#,
        REMARKS = #remarks:VARCHAR#,
        DOC_EXP_DT = #docExpDt:DATE#,
        IS_MANDATORY = #isMandatory:VARCHAR#,
        IS_EXECUTED = #isExecuted:VARCHAR#,
        DOC_EXEC_DT = #docExecDt:DATE#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NO = #acctNo:VARCHAR# AND DOC_TYPE = #docType:VARCHAR# AND DOC_FORM_NO = #docFormNo:VARCHAR#
    </mapped-statement>
        
	<!-- Use TermLoanDocumentTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanDocumentTO" inline-parameters="true">
        UPDATE AGRI_LOANS_DOC SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NO = #acctNo:VARCHAR# AND  DOC_TYPE = #docType:VARCHAR# AND DOC_FORM_NO = #docFormNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanDocumentTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanDocumentTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanDocumentTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="acctNo" column="ACCT_NO"/>
        <property name="docType" column="DOC_TYPE"/>
        <property name="docFormNo" column="DOC_FORM_NO"/>
        <property name="isSubmitted" column="IS_SUBMITTED"/>
        <property name="submittedDt" column="SUBMITTED_DT"/>
        <property name="remarks" column="REMARKS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="docExpDt" column="DOC_EXP_DT"/>
        <property name="isMandatory" column="IS_MANDATORY"/>
        <property name="isExecuted" column="IS_EXECUTED"/>
        <property name="docExecDt" column="DOC_EXEC_DT"/>
    </result-map>
        
    <mapped-statement name="getSelectAgriTermLoanDocumentTO" result-class="java.util.HashMap">
        SELECT LPD.DOC_TYPE, LPD.DOC_NO DOC_FORM_NO, LPD.DOC_DESC, NULL IS_SUBMITTED, NULL SUBMITTED_DT, NULL BORROW_NO, NULL ACCT_NO, NULL REMARKS, 
        NULL DOC_EXP_DT, NULL IS_MANDATORY, NULL IS_EXECUTED, NULL DOC_EXEC_DT 
        FROM AGRILOANS_PROD_DOC LPD 
        WHERE ((LPD.STATUS != 'DELETED') AND LPD.PROD_ID = (SELECT PROD_ID FROM AGRI_LOANS_FACILITY_DETAILS WHERE ACCT_NUM = #value#) AND 
                <!--LPD.DOC_NO || LPD.DOC_TYPE NOT IN (SELECT DOC_FORM_NO || DOC_TYPE FROM 
                AGRI_LOANS_DOC WHERE ACCT_NO = #value#)) -->
        NOT EXISTS (SELECT DOC_FORM_NO || DOC_TYPE FROM 
        AGRI_LOANS_DOC WHERE ACCT_NO = #value:VARCHAR# AND LPD.DOC_NO || LPD.DOC_TYPE=DOC_FORM_NO || DOC_TYPE)) 
        UNION 
        SELECT LPD.DOC_TYPE, LPD.DOC_NO DOC_FORM_NO, LPD.DOC_DESC, LD.IS_SUBMITTED, 
        LD.SUBMITTED_DT, LD.BORROW_NO, LD.ACCT_NO, LD.REMARKS, 
        LD.DOC_EXP_DT, LD.IS_MANDATORY, LD.IS_EXECUTED, LD.DOC_EXEC_DT 
        FROM AGRILOANS_PROD_DOC LPD, AGRI_LOANS_DOC LD 
        WHERE (LPD.STATUS != 'DELETED') AND 
        LPD.PROD_ID = (SELECT PROD_ID FROM AGRI_LOANS_FACILITY_DETAILS WHERE ACCT_NUM = #value:VARCHAR#) AND 
        LPD.DOC_NO || LPD.DOC_TYPE = LD.DOC_FORM_NO || LD.DOC_TYPE AND LD.ACCT_NO = #value:VARCHAR#
    </mapped-statement>
        
        <!-- Use TermLoanInterestTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanInterestTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_INT_MAINTENANCE
        (BORROW_NO, PROD_ID, FROM_DT, TO_DT, FROM_AMT, TO_AMT, INTEREST, PENAL_INTEREST, AGAINST_CLEARING_INT, STATEMENT_PENAL, INTEREST_EXPIRY_LIMIT, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, ACCT_NUM, STATUS, SLNO, STATUS_BY, STATUS_DT,INT_ACTIVE_STATUS,RET_CREATE_DT
        ) VALUES (
        #borrowNo:VARCHAR#, #prodId:VARCHAR#, #fromDt:DATE#, #toDt:DATE#, #fromAmt:NUMERIC#, #toAmt:NUMERIC#, #interest:NUMERIC#, #penalInterest:NUMERIC#, #againstClearingInt:NUMERIC#, #statementPenal:NUMERIC#, #interestExpiryLimit:NUMERIC#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #acctNum:VARCHAR#, #status:VARCHAR#, #slno:NUMERIC#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#,#activeStatus:VARCHAR#,#retCreateDt:DATE#)
    </mapped-statement>

	<!-- Use TermLoanInterestTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanInterestTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INT_MAINTENANCE SET 
		<!--BORROW_NO = #borrowNo:VARCHAR#,-->
        PROD_ID = #prodId:VARCHAR#,
        FROM_DT = #fromDt:DATE#,
        TO_DT = #toDt:DATE#,
        FROM_AMT = #fromAmt:NUMERIC#,
        TO_AMT = #toAmt:NUMERIC#,
        INTEREST = #interest:NUMERIC#,
        PENAL_INTEREST = #penalInterest:NUMERIC#,
        AGAINST_CLEARING_INT = #againstClearingInt:NUMERIC#,
        STATEMENT_PENAL = #statementPenal:NUMERIC#,
        INTEREST_EXPIRY_LIMIT = #interestExpiryLimit:NUMERIC#,
        AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
		<!--ACCT_NUM = #acctNum:VARCHAR#,-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# ,
        INT_ACTIVE_STATUS=#activeStatus:VARCHAR#
		<!--SLNO = #slno:VARCHAR#-->
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanInterestTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanInterestTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INT_MAINTENANCE SET
        AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanInterestTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="authorizeAgriTermLoanInterestTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INT_MAINTENANCE SET
        AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
        AND AUTHORIZE_STATUS IS NULL
    </mapped-statement>
        
    <mapped-statement name="updateProdID_AgriTermLoanInterestTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INT_MAINTENANCE SET
        PROD_ID = #prodId:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanInterestTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanInterestTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanInterestTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="prodId" column="PROD_ID"/>
        <property name="fromDt" column="FROM_DT"/>
        <property name="toDt" column="TO_DT"/>
        <property name="fromAmt" column="FROM_AMT"/>
        <property name="toAmt" column="TO_AMT"/>
        <property name="interest" column="INTEREST"/>
        <property name="penalInterest" column="PENAL_INTEREST"/>
        <property name="againstClearingInt" column="AGAINST_CLEARING_INT"/>
        <property name="statementPenal" column="STATEMENT_PENAL"/>
        <property name="interestExpiryLimit" column="INTEREST_EXPIRY_LIMIT"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="status" column="STATUS"/>
        <property name="slno" column="SLNO"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="activeStatus" column="INT_ACTIVE_STATUS"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanInterestTO" result-map="getAgriTermLoanInterestTOResult" >
        SELECT * FROM AGRI_LOANS_INT_MAINTENANCE 
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY TO_NUMBER(SLNO) 
    </mapped-statement>
        
    <mapped-statement name="getSelectAgriTermLoanAcctInterest" result-class="java.util.LinkedHashMap" >
        SELECT   *
        FROM AGRI_LOANS_INT_MAINTENANCE
        WHERE ACCT_NUM = #ACCOUNT_NO:VARCHAR#
        AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
        AND ((#FROM_DATE# BETWEEN FROM_DT AND TO_DT) AND (INT_ACTIVE_STATUS !='N') <!--OR (FROM_DT &lt; #FROM_DATE# AND TO_DT IS NULL)-->
        )
        AND AUTHORIZE_STATUS='AUTHORIZED'    
        ORDER BY TO_NUMBER (SLNO)	
    </mapped-statement>
         
    <mapped-statement name="getSelectAgriTermLoanSecurityMaxSLNO" result-class="java.util.HashMap">
        SELECT MAX(SLNO) AS MAX_NO FROM AGRI_LOANS_SECURITY_DETAILS WHERE ACCT_NUM = #acctNum:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
         
    <result-map name="getAgriLoanProductInterestTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanInterestTO">
        <property name="prodId" column="PROD_ID"/>
        <property name="fromDt" column="ROI_DATE"/>
        <property name="toDt" column="ROI_END_DATE"/>
        <property name="fromAmt" column="FROM_AMOUNT"/>
        <property name="toAmt" column="TO_AMOUNT"/>
        <property name="interest" column="ROI"/>
        <property name="penalInterest" column="PENAL_INT"/>
        <property name="againstClearingInt" column="AGAINST_CLEARING_INT"/>
        <property name="statementPenal" column="LIMIT_AMOUNT"/>
        <property name="interestExpiryLimit" column="INT_EXPIRY_LIMIT"/>
        <property name="status" column="STATUS"/>
        <property name="activeStatus" column="ROI_ACTIVE_STATUS"/>
    </result-map>
    <mapped-statement name="getSelectProductAgriTermLoanInterestTO" result-map="getAgriLoanProductInterestTOResult" >
        SELECT DRGTR.ROI, DRGTR.ROI_DATE, DRGTR.ROI_END_DATE, DRGP.PROD_ID, DRGTR.FROM_AMOUNT, DRGTR.TO_AMOUNT,  DRGTR.ROI_ACTIVE_STATUS,
        DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT, DRGTR.INT_EXPIRY_LIMIT, DRGTR.PENAL_INT, DRGTR.STATUS FROM DEPOSIT_ROI_GROUP DRG, 
        DEPOSIT_ROI_GROUP_CAT DRGC, DEPOSIT_ROI_GROUP_PROD DRGP,
        DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR WHERE
        DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID AND
        DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID AND
        DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID AND
        DRG.PRODUCT_TYPE IN( 'TL','AD') AND 
        DRGP.PROD_ID = #PROD_ID:VARCHAR# AND 
        DRGC.CATEGORY_ID = #CATEGORY_ID:VARCHAR# AND
        #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT AND
        ((#FROM_DATE# BETWEEN ROI_DATE AND ROI_END_DATE) OR 
        (ROI_DATE&lt;#FROM_DATE:DATE# AND ROI_END_DATE IS NULL))
        AND TO_NUMBER(TO_CHAR(#TO_DATE:DATE#,'J'))-TO_NUMBER(TO_CHAR(#FROM_DATE:DATE#,'J')) BETWEEN FROM_PERIOD AND TO_PERIOD
                <!--((#FROM_DATE# &gt;= ROI_DATE) OR (#TO_DATE# &lt;= ROI_END_DATE))-->
    </mapped-statement>
        <!--mapped-statement name="getSelectProductMaintenanceRetraspectiveInterestTO" result-class="java.util.LinkedHashMap" >
		SELECT DRGTR.ROI, DRGTR.ROI_DATE, DRGTR.ROI_END_DATE, DRGP.PROD_ID, DRGTR.FROM_AMOUNT, DRGTR.TO_AMOUNT, 
                DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT, DRGTR.INT_EXPIRY_LIMIT, DRGTR.PENAL_INT, DRGTR.STATUS FROM DEPOSIT_ROI_GROUP DRG, 
                DEPOSIT_ROI_GROUP_CAT DRGC, DEPOSIT_ROI_GROUP_PROD DRGP,
                DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR WHERE
                DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID AND
                DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID AND
                DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID AND
                DRG.PRODUCT_TYPE IN( 'TL','AD') 
                AND  DRGTR.ROI_GROUP_ID =#ROI_GROUP_ID# AND 
                ((#FROM_DATE#  BETWEEN ROI_DATE AND ROI_END_DATE) OR 
                (ROI_DATE --><!--&lt;--><!--= #FROM_DATE# AND ROI_END_DATE IS NULL))
	</mapped-statement>
        
        <mapped-statement name="getSelectProductTermLoanInterestFloatTO" result-map="getLoanProductInterestTOResult" >
		SELECT DRGTR.ROI, DRGTR.ROI_DATE, DRGTR.ROI_END_DATE, DRGP.PROD_ID, DRGTR.FROM_AMOUNT, DRGTR.TO_AMOUNT, 
                DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT, DRGTR.INT_EXPIRY_LIMIT, DRGTR.PENAL_INT, DRGTR.STATUS FROM DEPOSIT_ROI_GROUP DRG, 
                DEPOSIT_ROI_GROUP_CAT DRGC, DEPOSIT_ROI_GROUP_PROD DRGP,
                DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR WHERE
                DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID AND
                DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID AND
                DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID AND
                DRG.PRODUCT_TYPE IN( 'TL','AD') AND 
                DRGP.PROD_ID = #PROD_ID# AND 
                DRGC.CATEGORY_ID = #CATEGORY_ID# AND
                #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT AND
                ((#FROM_DATE# BETWEEN ROI_DATE AND ROI_END_DATE) OR 
                (ROI_DATE&lt;#FROM_DATE# AND ROI_END_DATE IS NULL) OR (ROI_DATE &gt; #FROM_DATE#))
                AND #TO_DATE#-#FROM_DATE# BETWEEN FROM_PERIOD AND TO_PERIOD-->
                <!--((#FROM_DATE# &gt;= ROI_DATE) OR (#TO_DATE# &lt;= ROI_END_DATE))-->
	<!--</mapped-statement>-->
        
       
    <mapped-statement name="getInterestDetailsWhereConditionsATL" result-class="java.util.HashMap">
        SELECT LB.CATEGORY, LSD.LIMIT, LFD.INT_GET_FROM, LFD.PROD_ID, LSD.FROM_DT AS FROM_DATE, LSD.TO_DT AS TO_DATE,LFD.INTEREST_TYPE FROM AGRI_LOANS_FACILITY_DETAILS LFD, AGRI_LOANS_SANCTION_DETAILS LSD, AGRI_LOANS_BORROWER LB
        WHERE LFD.ACCT_NUM = #value:VARCHAR#  
        AND LFD.BORROW_NO = LSD.BORROW_NO 
        AND LFD.BORROW_NO = LB.BORROW_NO 
        AND (LFD.STATUS = 'CREATED' OR LFD.STATUS = 'MODIFIED') 
        AND (LB.STATUS =  'CREATED' OR LB.STATUS = 'MODIFIED') 
        AND (LSD.STATUS =  'CREATED' OR LSD.STATUS = 'MODIFIED') 
        AND LFD.PROD_ID = LSD.PRODUCT_ID
        AND LFD.SANCTION_NO=LSD.SANCTION_NO 
        AND LFD.SL_NO    =LSD.SL_NO
    </mapped-statement>
        
    <mapped-statement name="getIntDetailsWhereConditionsATL" result-class="java.util.HashMap">
        SELECT LB.CATEGORY, LSD.LIMIT, LFD.INT_GET_FROM, LFD.PROD_ID, LSD.FROM_DT AS FROM_DATE, LSD.TO_DT AS TO_DATE FROM AGRI_LOANS_FACILITY_DETAILS LFD, AGRI_LOANS_SANCTION_DETAILS LSD, AGRI_LOANS_BORROWER LB
        WHERE LFD.ACCT_NUM = #ACCT_NUM:VARCHAR#   
        AND LFD.BORROW_NO = LSD.BORROW_NO 
        AND LFD.BORROW_NO = LB.BORROW_NO 
        AND (LFD.STATUS = 'CREATED' OR LFD.STATUS = 'MODIFIED') 
        AND (LB.STATUS =  'CREATED' OR LB.STATUS = 'MODIFIED') 
        AND (LSD.STATUS =  'CREATED' OR LSD.STATUS = 'MODIFIED') 
        AND LFD.SANCTION_NO=LSD.SANCTION_NO 
        AND LFD.SL_NO    =LSD.SL_NO
    </mapped-statement>
        
    <mapped-statement name="updateRepayScheduleNoInLoansDisbursementATL" inline-parameters="true">
        UPDATE AGRI_LOANS_DISBURSEMENT SET 
        REPAYMENT_SCHEDULE_NO = #REPAYMENT_SCHEDULE_NO:VARCHAR#
        WHERE ACT_NUM = #ACCOUNTNO:VARCHAR# AND DISBURSEMENT_ID = #DISBURSEMENT_ID:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>
        
    <dynamic-mapped-statement name="getPaidPrincipleATL" result-class="java.util.HashMap" >
        select sum(NVL(PRINCIPLE,0)) AS PRINCIPLE, sum(NVL(INTEREST,0)) AS INTEREST, sum(NVL(PENAL,0)) AS PENAL from LOAN_TRANS_DETAILS where ACT_NUM=#ACT_NUM:VARCHAR# and (TRN_CODE='C*' OR TRN_CODE='OLG')
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="FROM_DT">
                    TRANS_DT BETWEEN #FROM_DT:DATE# AND #TO_DATE:DATE#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>
         


        
    <dynamic-mapped-statement name="getIntDetailsATL" result-class="java.util.HashMap" >
            <!--SELECT A.DEBIT-B.CREDIT IBAL,A.DEBITPENAL-B.CREDITPENAL AS PBAL FROM (SELECT SUM(INTEREST) DEBIT ,SUM(PENAL) DEBITPENAL FROM LOAN_TRANS_DETAILS WHERE TRN_CODE = 'DI' AND ACT_NUM=#ACT_NUM#) A,
            (SELECT SUM(INTEREST) CREDIT,SUM(PENAL) CREDITPENAL FROM LOAN_TRANS_DETAILS WHERE TRN_CODE = 'C*' AND ACT_NUM=#ACT_NUM#) B -->
        SELECT IBAL ,TRANS_SLNO,TRN_CODE,PBAL,TRANS_DT,PRINCIPLE ,INTEREST,PENAL,PIBAL,EXPENSE,EBAL,NPA_INTEREST,NPA_INT_BAL,
        NPA_PENAL,NPA_PENAL_BAL,EXCESS_AMT FROM AGRILOAN_TRANS_DETAILS WHERE TRANS_SLNO IN 
        (SELECT MAX(TRANS_SLNO) FROM AGRILOAN_TRANS_DETAILS WHERE ACT_NUM = #ACT_NUM:VARCHAR#
            
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS  IN('AUTHORIZED')
                </isNotNull>
                  
            </isParameterPresent>
        </dynamic>
        )  AND ACT_NUM = #ACT_NUM:VARCHAR#
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS  IN('AUTHORIZED')
                </isNotNull>
            </isParameterPresent>
                
        </dynamic>
    </dynamic-mapped-statement>
          
    <mapped-statement name="getSelectAgriTermLoanInterestMaxSLNO" result-class="java.util.HashMap">
        SELECT MAX(SLNO) AS MAX_SL_NO FROM AGRI_LOANS_INT_MAINTENANCE WHERE ACCT_NUM = #acctNum:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
    <mapped-statement name="getSelectProductAgriTermLoanInterestMap" result-class="java.util.LinkedHashMap" >
        SELECT DRGTR.ROI "INTEREST", DRGTR.ROI_DATE "FROM_DT", DRGTR.ROI_END_DATE "TO_DT", 
        DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT "LIMIT_AMT", 
        DRGTR.INT_EXPIRY_LIMIT "INTEREST_EXPIRY_LIMIT", DRGTR.PENAL_INT "PENAL_INTEREST", DRGTR.STATUS, 
        DRGTR.STATEMENT_PENEL "STATEMENT_PENAL" 
        FROM DEPOSIT_ROI_GROUP DRG, 
        DEPOSIT_ROI_GROUP_CAT DRGC, DEPOSIT_ROI_GROUP_PROD DRGP, 
        DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR WHERE
        DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID AND
        DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID AND
        DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID AND
        DRG.PRODUCT_TYPE IN( 'TL','AD') AND 
        DRGP.PROD_ID = #PROD_ID:VARCHAR# AND 
        DRGC.CATEGORY_ID = #CATEGORY_ID:VARCHAR# AND 
        #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT AND
        ((#FROM_DATE# BETWEEN ROI_DATE AND ROI_END_DATE) OR 
        (ROI_DATE&lt;=#FROM_DATE:DATE# AND ROI_END_DATE IS NULL)) AND ROI_ACTIVE_STATUS!='N'
        AND TO_NUMBER(TO_CHAR(#TO_DATE#,'J')) - TO_NUMBER(TO_CHAR(#FROM_DATE#,'J')) BETWEEN FROM_PERIOD AND TO_PERIOD
                <!--#AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT AND
                ((#FROM_DATE# &gt;= ROI_DATE) OR (#TO_DATE# &lt;= ROI_END_DATE))-->
    </mapped-statement>

    <mapped-statement name="AgriTermLoan.getProdID_Behaves" result-class="java.util.HashMap" >
        SELECT PROD_ID, PROD_DESC FROM AGRILOANS_PRODUCT WHERE BEHAVES_LIKE = #behavesLike:VARCHAR# 
        AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') AND AUTHORIZE_STATUS = 'AUTHORIZED'
    </mapped-statement>
                
    <mapped-statement name="getSelectProductDayEndAgriTermLoanInterestMap" result-class="java.util.LinkedHashMap" >
        SELECT DRGTR.ROI "INTEREST", DRGTR.ROI_DATE "FROM_DT", DRGTR.ROI_END_DATE "TO_DT", 
        DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT "LIMIT_AMT", 
        DRGTR.INT_EXPIRY_LIMIT "INTEREST_EXPIRY_LIMIT", DRGTR.PENAL_INT "PENAL_INTEREST", DRGTR.STATUS, 
        DRGTR.STATEMENT_PENEL "STATEMENT_PENAL" 
        FROM DEPOSIT_ROI_GROUP DRG, 
        DEPOSIT_ROI_GROUP_CAT DRGC, DEPOSIT_ROI_GROUP_PROD DRGP, 
        DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR WHERE
        DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID AND
        DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID AND
        DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID AND
        DRG.PRODUCT_TYPE IN( 'TL','AD') AND 
        DRGP.PROD_ID = #PROD_ID:VARCHAR# AND 
        DRGC.CATEGORY_ID = #CATEGORY_ID:VARCHAR# AND 
        #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT AND <!-- FLOATING RATEOF INTEREST PURPOSE  DAYEND BALANCE DATE WE HAVE TO TAKE-->
        ((#DAYENDSTDT# BETWEEN ROI_DATE AND ROI_END_DATE) OR 
        (ROI_DATE&lt;=#DAYENDSTDT:DATE# AND ROI_END_DATE IS NULL))
        AND TO_NUMBER(TO_CHAR(#TO_DATE:DATE#,'J')) - TO_NUMBER(TO_CHAR(#FROM_DATE#,'J')) BETWEEN FROM_PERIOD AND TO_PERIOD
                <!--#AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT AND
                ((#FROM_DATE# &gt;= ROI_DATE) OR (#TO_DATE# &lt;= ROI_END_DATE))-->
    </mapped-statement>
        
    <mapped-statement name="getSelectProductAgriTermLoanFlotingInterestMap" result-class="java.util.LinkedHashMap" >
        SELECT DRGTR.ROI "INTEREST", DRGTR.ROI_DATE "FROM_DT", DRGTR.ROI_END_DATE "TO_DT", 
        DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT "LIMIT_AMT", 
        DRGTR.INT_EXPIRY_LIMIT "INTEREST_EXPIRY_LIMIT", DRGTR.PENAL_INT "PENAL_INTEREST", DRGTR.STATUS, 
        DRGTR.STATEMENT_PENEL "STATEMENT_PENAL" 
        FROM DEPOSIT_ROI_GROUP DRG, 
        DEPOSIT_ROI_GROUP_CAT DRGC, DEPOSIT_ROI_GROUP_PROD DRGP, 
        DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR WHERE
        DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID AND
        DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID AND
        DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID AND
        DRG.PRODUCT_TYPE IN( 'TL','AD') AND 
        DRGP.PROD_ID = #PROD_ID:VARCHAR# AND 
        DRGC.CATEGORY_ID = #CATEGORY_ID:VARCHAR# AND 
        #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT AND
        (ROI_DATE BETWEEN #DAYENDSTDT:DATE# AND #DAYENDEDDT:DATE#) <!--OR 
                (ROI_DATE &lt; #TO_DATE# AND ROI_END_DATE IS NULL))-->
        AND TO_NUMBER(TO_CHAR(#TO_DATE#,'J')) - TO_NUMBER(TO_CHAR(#FROM_DATE#,'J')) BETWEEN FROM_PERIOD AND TO_PERIOD
                
		<!--SELECT DRGTR.ROI "INTEREST", DRGTR.ROI_DATE "FROM_DT", DRGTR.ROI_END_DATE "TO_DT", 
                DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT "LIMIT_AMT", 
                DRGTR.INT_EXPIRY_LIMIT "INTEREST_EXPIRY_LIMIT", DRGTR.PENAL_INT "PENAL_INTEREST", DRGTR.STATUS, 
                DRGTR.STATEMENT_PENEL "STATEMENT_PENAL" 
                FROM DEPOSIT_ROI_GROUP DRG, 
                DEPOSIT_ROI_GROUP_CAT DRGC, DEPOSIT_ROI_GROUP_PROD DRGP, 
                DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR WHERE
                DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID AND
                DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID AND
                DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID AND
                DRG.PRODUCT_TYPE IN( 'TL','AD') AND 
                DRGP.PROD_ID = #PROD_ID# AND 
                DRGC.CATEGORY_ID = #CATEGORY_ID# AND 
                #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT AND
                ((#FROM_DATE# BETWEEN ROI_DATE AND ROI_END_DATE) OR 
                (ROI_DATE&lt;#FROM_DATE# AND ROI_END_DATE IS NULL))
                AND #TO_DATE# - #FROM_DATE# BETWEEN FROM_PERIOD AND TO_PERIOD-->
                <!--#AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT AND
                ((#FROM_DATE# &gt;= ROI_DATE) OR (#TO_DATE# &lt;= ROI_END_DATE))-->
    </mapped-statement>
        
    <mapped-statement name="getSelectProductAgriTermLoanRetraspectiveCalcInterestMap" result-class="java.util.LinkedHashMap" >
           <!--SELECT   DRGTR.ROI, DRGTR.ROI_DATE, DRGTR.ROI_END_DATE, DRGP.PROD_ID,
            DRGTR.FROM_AMOUNT, DRGTR.TO_AMOUNT, DRGTR.AGAINST_CLEARING_INT,
            DRGTR.LIMIT_AMOUNT, DRGTR.INT_EXPIRY_LIMIT, DRGTR.PENAL_INT,
            DRGTR.STATUS
            FROM DEPOSIT_ROI_GROUP DRG,
            DEPOSIT_ROI_GROUP_CAT DRGC,
            DEPOSIT_ROI_GROUP_PROD DRGP,
            DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR
            WHERE DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID
            AND DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID
            AND DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
            AND DRG.PRODUCT_TYPE IN ('TL', 'AD')
            AND DRGP.PROD_ID = #PROD_ID#
            AND DRGC.CATEGORY_ID = #CATEGORY_ID#
            AND #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT
            AND (ROI_DATE &gt; =
            (SELECT ROI_DATE
            FROM DEPOSIT_ROI_GROUP_TYPE_RATE
            WHERE STATUS != 'DELETED'
            AND AUTHORIZE_STATUS = 'AUTHORIZED'
            AND ROI_ACTIVE_STATUS != 'N'
            AND CREATE_DT =
            (SELECT MAX (CREATE_DT)
            FROM DEPOSIT_ROI_GROUP_TYPE_RATE
            WHERE STATUS != 'DELETED'
            AND AUTHORIZE_STATUS = 'AUTHORIZED'
            AND ROI_ACTIVE_STATUS != 'N'
            AND ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
            AND #TO_DATE# - #FROM_DATE# BETWEEN FROM_PERIOD AND TO_PERIOD
            AND #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT
            )
            AND CREATE_DT IS NOT NULL
            AND ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
            AND #TO_DATE# - #FROM_DATE# BETWEEN FROM_PERIOD AND TO_PERIOD
            AND #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT
            )
            )
            AND ROI_ACTIVE_STATUS != 'N'
            AND #TO_DATE# - #FROM_DATE# BETWEEN FROM_PERIOD AND TO_PERIOD
            ORDER BY ROI_DATE-->
        SELECT   DRGTR.ROI, DRGTR.ROI_DATE, DRGTR.ROI_END_DATE, DRGP.PROD_ID,
        DRGTR.FROM_AMOUNT, DRGTR.TO_AMOUNT, DRGTR.AGAINST_CLEARING_INT,
        DRGTR.LIMIT_AMOUNT, DRGTR.INT_EXPIRY_LIMIT, DRGTR.PENAL_INT,
        DRGTR.STATUS
        FROM DEPOSIT_ROI_GROUP DRG,
        DEPOSIT_ROI_GROUP_CAT DRGC,
        DEPOSIT_ROI_GROUP_PROD DRGP,
        DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR
        WHERE DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID
        AND DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID
        AND DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
        AND DRG.PRODUCT_TYPE IN ('TL', 'AD')
        AND DRGTR.CREATE_DT BETWEEN  #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#
        AND ROI_DATE&lt;=#CURR_DT:DATE# 
        AND  ROI_DATE&lt;#LAST_INT_CALC_DT:DATE#
        AND DRGP.PROD_ID =#PROD_ID:VARCHAR#
        AND DRGC.CATEGORY_ID = #CATEGORY_ID:VARCHAR#
        AND #AMOUNT:NUMBER# BETWEEN FROM_AMOUNT AND TO_AMOUNT
        AND TO_NUMBER(TO_CHAR(#TO_DATE:DATE#,'J')) - TO_NUMBER(TO_CHAR(#FROM_DATE:DATE#,'J')) BETWEEN FROM_PERIOD AND TO_PERIOD
        ORDER BY ROI_DATE
    </mapped-statement>

    <mapped-statement name="getSelectProductAgriTermLoanRetraspectiveInactiveCalcInterestMap" result-class="java.util.LinkedHashMap" >
               <!-- SELECT   drgtr.roi, drgtr.roi_date, drgtr.roi_end_date,
                 drgtr.against_clearing_int, drgtr.limit_amount "LIMIT_AMT",
                 drgtr.int_expiry_limit "INTEREST_EXPIRY_LIMIT",
                 drgtr.penal_int "PENAL_INTEREST", drgtr.status,
                 drgtr.statement_penel "STATEMENT_PENAL"
            FROM deposit_roi_group drg,
                 deposit_roi_group_cat drgc,
                 deposit_roi_group_prod drgp,
                 deposit_roi_group_type_rate drgtr
           WHERE drg.roi_group_id = drgc.roi_group_id
             AND drg.roi_group_id = drgp.roi_group_id
             AND drg.roi_group_id = drgtr.roi_group_id
             AND drg.product_type IN ('TL', 'AD')
             AND drgp.prod_id = #PROD_ID#
             AND drgc.category_id = #CATEGORY_ID#
             AND #AMOUNT#  BETWEEN from_amount AND to_amount
             AND ((roi_date &gt;=
                      (SELECT roi_date
                         FROM deposit_roi_group_type_rate
                        WHERE status != 'DELETED'
                          AND authorize_status = 'AUTHORIZED'
                          AND #START_DT# BETWEEN roi_date AND roi_end_date
                          AND roi_active_status = 'N'
                          AND #TO_DATE# - #FROM_DATE#  BETWEEN from_period AND to_period
                          AND #AMOUNT#  BETWEEN from_amount AND to_amount
                          AND roi_group_id = drgtr.roi_group_id)
                  )
                 )
             AND drgtr.roi_active_status = 'N'
             AND #TO_DATE# - #FROM_DATE#  BETWEEN from_period AND to_period
        ORDER BY roi_date -->
       <!--
        SELECT   DRGTR.ROI, DRGTR.ROI_DATE, DRGTR.ROI_END_DATE,
                 DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT "LIMIT_AMT",
                 DRGTR.INT_EXPIRY_LIMIT "INTEREST_EXPIRY_LIMIT",
                 DRGTR.PENAL_INT "PENAL_INTEREST", DRGTR.STATUS,
                 DRGTR.STATEMENT_PENEL "STATEMENT_PENAL"
            FROM DEPOSIT_ROI_GROUP DRG,
                 DEPOSIT_ROI_GROUP_CAT DRGC,
                 DEPOSIT_ROI_GROUP_PROD DRGP,
                 DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR
           WHERE DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID
             AND DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID
             AND DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
             AND DRG.PRODUCT_TYPE IN ('TL', 'AD')
             AND DRGP.PROD_ID = #PROD_ID#
             AND DRGC.CATEGORY_ID = #CATEGORY_ID#
             AND #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT
             AND ((ROI_DATE =
                      (SELECT MAX (ROI_DATE)
                         FROM DEPOSIT_ROI_GROUP_TYPE_RATE
                        WHERE STATUS != 'DELETED'
                          AND AUTHORIZE_STATUS = 'AUTHORIZED'
                          AND ROI_DATE &lt;= #START_DT#
                          AND #TO_DATE# - #FROM_DATE# BETWEEN FROM_PERIOD AND TO_PERIOD
                          AND #AMOUNT# BETWEEN FROM_AMOUNT AND TO_AMOUNT
                          AND ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
                          AND CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT# AND #CURR_DT#)
                  )
                 )
             AND  CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT# AND #CURR_DT#
             AND #TO_DATE# - #FROM_DATE# BETWEEN FROM_PERIOD AND TO_PERIOD
             ORDER BY ROI_DATE
             -->
            
        SELECT   DRGTR.ROI, DRGTR.ROI_DATE, DRGTR.ROI_END_DATE,
        DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT "LIMIT_AMT",
        DRGTR.INT_EXPIRY_LIMIT "INTEREST_EXPIRY_LIMIT",
        DRGTR.PENAL_INT "PENAL_INTEREST", DRGTR.STATUS,
        DRGTR.STATEMENT_PENEL "STATEMENT_PENAL"
        FROM DEPOSIT_ROI_GROUP DRG,
        DEPOSIT_ROI_GROUP_CAT DRGC,
        DEPOSIT_ROI_GROUP_PROD DRGP,
        DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR
        WHERE DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID
        AND DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID
        AND DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
        AND DRG.PRODUCT_TYPE IN ('TL', 'AD')
        AND DRGP.PROD_ID = #PROD_ID:VARCHAR#
        AND DRGC.CATEGORY_ID = #CATEGORY_ID:VARCHAR#
        AND #AMOUNT:NUMBER# BETWEEN FROM_AMOUNT AND TO_AMOUNT
        AND ROI_DATE IN (
        SELECT ROI_DATE
        FROM DEPOSIT_ROI_GROUP_TYPE_RATE
        WHERE STATUS != 'DELETED'
        AND AUTHORIZE_STATUS = 'AUTHORIZED'
        AND TO_NUMBER(TO_CHAR(#TO_DATE:DATE#,'J')) - TO_NUMBER(TO_CHAR(#FROM_DATE:DATE#,'J')) BETWEEN FROM_PERIOD AND TO_PERIOD
        AND #AMOUNT:NUMBER# BETWEEN FROM_AMOUNT AND TO_AMOUNT
        AND ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
        AND CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#
        AND ROI_DATE >= #START_DT:DATE#)
        AND CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#
        AND TO_NUMBER(TO_CHAR(#TO_DATE:DATE#,'J')) - TO_NUMBER(TO_CHAR(#FROM_DATE:DATE#,'J')) BETWEEN FROM_PERIOD AND TO_PERIOD
        ORDER BY ROI_DATE
     
    </mapped-statement>
        
    <mapped-statement name="getSelectProductAgriTermLoanRetraspectiveInactiveCalcNullInterestMap" result-class="java.util.LinkedHashMap" >
          
        SELECT   DRGTR.ROI, DRGTR.ROI_DATE, DRGTR.ROI_END_DATE,
        DRGTR.AGAINST_CLEARING_INT, DRGTR.LIMIT_AMOUNT "LIMIT_AMT",
        DRGTR.INT_EXPIRY_LIMIT "INTEREST_EXPIRY_LIMIT",
        DRGTR.PENAL_INT "PENAL_INTEREST", DRGTR.STATUS,
        DRGTR.STATEMENT_PENEL "STATEMENT_PENAL"
        FROM DEPOSIT_ROI_GROUP DRG,
        DEPOSIT_ROI_GROUP_CAT DRGC,
        DEPOSIT_ROI_GROUP_PROD DRGP,
        DEPOSIT_ROI_GROUP_TYPE_RATE DRGTR
        WHERE DRG.ROI_GROUP_ID = DRGC.ROI_GROUP_ID
        AND DRG.ROI_GROUP_ID = DRGP.ROI_GROUP_ID
        AND DRG.ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
        AND DRG.PRODUCT_TYPE IN ('TL', 'AD')
        AND DRGP.PROD_ID = #PROD_ID:VARCHAR#
        AND DRGC.CATEGORY_ID = #CATEGORY_ID:VARCHAR#
        AND #AMOUNT:NUMBER# BETWEEN FROM_AMOUNT AND TO_AMOUNT
        AND ROI_DATE IN (SELECT MAX (ROI_DATE)
        FROM DEPOSIT_ROI_GROUP_TYPE_RATE
        WHERE STATUS != 'DELETED'
        AND AUTHORIZE_STATUS = 'AUTHORIZED'
        AND ROI_DATE &lt;  #START_DT:DATE#
        AND TO_NUMBER(TO_CHAR(#TO_DATE:DATE#,'J')) - TO_NUMBER(TO_CHAR(#FROM_DATE:DATE#,'J'))  BETWEEN FROM_PERIOD AND TO_PERIOD
        AND #AMOUNT:NUMBER# BETWEEN FROM_AMOUNT AND TO_AMOUNT
        AND ROI_GROUP_ID = DRGTR.ROI_GROUP_ID
        AND CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#)

        AND  CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#
        AND TO_NUMBER(TO_CHAR(#TO_DATE:DATE#,'J'))- TO_NUMBER(TO_CHAR(#FROM_DATE:DATE#,'J')) BETWEEN FROM_PERIOD AND TO_PERIOD
        ORDER BY ROI_DATE
     
    </mapped-statement>
          
    <mapped-statement name="getSelectAccountAgriTermLoanRetraspectiveCalcInterestMap" result-class="java.util.LinkedHashMap" >
        SELECT   FROM_DT AS ROI_DATE, TO_DT AS ROI_END_DATE, INTEREST AS ROI
        FROM AGRI_LOANS_INT_MAINTENANCE LIM
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR#
        AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
        AND FROM_DT IN (
        SELECT FROM_DT
        FROM AGRI_LOANS_INT_MAINTENANCE
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR#
        AND STATUS != 'DELETED'
        AND RET_CREATE_DT IN (
        SELECT MAX (RET_CREATE_DT)
        FROM AGRI_LOANS_INT_MAINTENANCE
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR#
        AND RET_CREATE_DT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#
        AND STATUS != 'DELETED'))
        AND RET_CREATE_DT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#                 
        ORDER BY TO_NUMBER (SLNO)   
        <!--SELECT  FROM_DT AS ROI_DATE,TO_DT AS ROI_END_DT,INTEREST AS ROI
                    FROM AGRI_LOANS_INT_MAINTENANCE LIM
                   WHERE ACCT_NUM = #ACCT_NUM#
                     AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
                     AND FROM_DT&gt;=
                            (SELECT FROM_DT
                               FROM AGRI_LOANS_INT_MAINTENANCE
                              WHERE ACCT_NUM = #ACCT_NUM#
                                AND INT_ACTIVE_STATUS != 'N'
                                AND STATUS != 'DELETED'
                                AND RET_CREATE_DT =
                                       (SELECT MAX (RET_CREATE_DT)
                                          FROM AGRI_LOANS_INT_MAINTENANCE
                                         WHERE ACCT_NUM = #ACCT_NUM#
                                           AND INT_ACTIVE_STATUS != 'N'
                                           AND STATUS != 'DELETED'))
                     AND INT_ACTIVE_STATUS != 'N'
                ORDER BY TO_NUMBER (SLNO)  -->      
    </mapped-statement>
                
    <mapped-statement name="getSelectAccountAgriTermLoanRetraspectiveInactiveCalcInterestMap" result-class="java.util.LinkedHashMap" >
            
        SELECT  FROM_DT AS ROI_DATE,TO_DT AS ROI_END_DATE,INTEREST AS ROI
        FROM AGRI_LOANS_INT_MAINTENANCE 
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR#
        AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
        AND FROM_DT IN
        (SELECT  FROM_DT
        FROM AGRI_LOANS_INT_MAINTENANCE
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR#
                            
        AND  FROM_DT  &gt;= #START_DT:DATE# 
        AND STATUS != 'DELETED' AND
        RET_CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#
        )
        AND 
        RET_CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#
        ORDER BY TO_NUMBER (SLNO)     
            <!-- SELECT  FROM_DT AS ROI_DATE,TO_DT AS ROI_END_DT,INTEREST AS ROI
                    FROM AGRI_LOANS_INT_MAINTENANCE 
               WHERE ACCT_NUM = #ACCT_NUM#
                 AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
                 AND FROM_DT&gt;=
                        (SELECT FROM_DT
                           FROM AGRI_LOANS_INT_MAINTENANCE
                          WHERE ACCT_NUM = #ACCT_NUM#
                            AND INT_ACTIVE_STATUS = 'N'
                            AND (#START_DT# BETWEEN FROM_DT AND TO_DT)
                            AND STATUS != 'DELETED')
                 AND INT_ACTIVE_STATUS = 'N'
            ORDER BY TO_NUMBER (SLNO) -->  	
    </mapped-statement>
            
    <mapped-statement name="getSelectAccountAgriTermLoanRetraspectiveInactiveNullCalcInterestMap" result-class="java.util.LinkedHashMap" >
            
        SELECT  FROM_DT AS ROI_DATE,TO_DT AS ROI_END_DT,INTEREST AS ROI
        FROM AGRI_LOANS_INT_MAINTENANCE 
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR#
        AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
        AND FROM_DT=
        (SELECT MAX( FROM_DT)
        FROM AGRI_LOANS_INT_MAINTENANCE
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR#
                            
        AND  FROM_DT  &lt; #START_DT:DATE#
        AND STATUS != 'DELETED' AND
        RET_CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#
        )
        AND 
        RET_CREATE_DT NOT BETWEEN #LAST_INT_CALC_DT:DATE# AND #CURR_DT:DATE#
        ORDER BY TO_NUMBER (SLNO) 
                <!--SELECT  FROM_DT AS ROI_DATE,TO_DT AS ROI_END_DT,INTEREST AS ROI
                    FROM AGRI_LOANS_INT_MAINTENANCE 
               WHERE ACCT_NUM = #ACCT_NUM#
                 AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
                 AND FROM_DT&gt;=
                        (SELECT FROM_DT
                           FROM AGRI_LOANS_INT_MAINTENANCE
                          WHERE ACCT_NUM = #ACCT_NUM#
                            AND INT_ACTIVE_STATUS = 'N'
                            AND (#START_DT# BETWEEN FROM_DT AND TO_DT)
                            AND STATUS != 'DELETED')
                 AND INT_ACTIVE_STATUS = 'N'
            ORDER BY TO_NUMBER (SLNO) -->  	
    </mapped-statement>
                
    <mapped-statement name="getSelectAccountAgriTermLoanFlotingInterestMap" result-class="java.util.LinkedHashMap" >
        SELECT * FROM AGRI_LOANS_INT_MAINTENANCE 
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') AND 
        #AMOUNT:NUMBER# BETWEEN FROM_AMT AND TO_AMT AND
        ((FROM_DT BETWEEN #DAYENDSTDT:DATE# AND #DAYENDEDDT:DATE#) <!--OR 
                (FROM_DT&lt;=#DAYENDSTDT# AND TO_DT IS NULL)-->) <!--((#FROM_DATE# &gt;= FROM_DT) OR (#TO_DATE# &lt;= TO_DT))--> 
        ORDER BY TO_NUMBER(SLNO) 
    </mapped-statement>
        
    <mapped-statement name="getSelectAccountAgriTermLoanDayEndInterestMap" result-class="java.util.LinkedHashMap" >
        SELECT * FROM AGRI_LOANS_INT_MAINTENANCE 
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') AND 
        #AMOUNT:NUMBER# BETWEEN FROM_AMT AND TO_AMT AND
        ((#DAYENDSTDT:DATE# BETWEEN FROM_DT AND TO_DT) OR 
        (FROM_DT&lt;=#DAYENDSTDT:DATE#  AND TO_DT IS NULL)) <!--((#FROM_DATE# &gt;= FROM_DT) OR (#TO_DATE# &lt;= TO_DT))--> 
        ORDER BY TO_NUMBER(SLNO) 
    </mapped-statement>    
        
    <mapped-statement name="getSelectAccountAgriTermLoanInterestMap" result-class="java.util.LinkedHashMap" >
        SELECT * FROM AGRI_LOANS_INT_MAINTENANCE 
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') AND 
        #AMOUNT:NUMBER# BETWEEN FROM_AMT AND TO_AMT AND
        ((#FROM_DATE:DATE# BETWEEN FROM_DT AND TO_DT) OR 
        (FROM_DT&lt;=#FROM_DATE:DATE# AND TO_DT IS NULL)) AND INT_ACTIVE_STATUS!='N' <!--((#FROM_DATE# &gt;= FROM_DT) OR (#TO_DATE# &lt;= TO_DT))--> 
        ORDER BY TO_NUMBER(SLNO) 
    </mapped-statement>    
            
    <mapped-statement name="insertAgriRepaymentInterest" inline-parameters="true">
        INSERT INTO AGRI_LOANS_REPAYMENT
        (ACCT_NUM, TRANS_ID, TRANS_DT, PRINCIPAL_AMT, INTEREST_AMT, PENAL_INT_AMT, STATUS, STATUS_BY, STATUS_DT, AUTHORIZE_STATUS, AUTHORIZE_BY, AUTHORIZE_DT, INTEREST_RATE, PENAL_INT_RATE, BALANCE_AMT
        ) VALUES (
        #ACCT_NUM:VARCHAR#, #TRANS_ID:VARCHAR#, #TRANS_DT:TIMESTAMP#, #PRINCIPAL_AMT:NUMERIC#, #INTEREST_AMT:NUMERIC#, #PENAL_INT_AMT:NUMERIC#, #STATUS:VARCHAR#, #STATUS_BY:VARCHAR#, #STATUS_DT:TIMESTAMP#, #AUTHORIZE_STATUS:VARCHAR#, #AUTHORIZE_BY:VARCHAR#, #AUTHORIZE_DT:TIMESTAMP#, #INTEREST_RATE:NUMERIC#, #PENAL_INT_RATE:NUMERIC#, #BALANCE_AMT:NUMERIC#)
    </mapped-statement>

	<!-- Use Repayment object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriRepaymentInterest" inline-parameters="true">
        UPDATE AGRI_LOANS_REPAYMENT SET 
        TRANS_DT = #TRANS_DT:TIMESTAMP#,
        PRINCIPAL_AMT = #PRINCIPAL_AMT:NUMERIC#,
        INTEREST_AMT = #INTEREST_AMT:NUMERIC#,
        PENAL_INT_AMT = #PENAL_INT_AMT:NUMERIC#,
        STATUS = #STATUS:VARCHAR#,
        STATUS_BY = #STATUS_BY:VARCHAR#,
        STATUS_DT = #STATUS_DT:TIMESTAMP#,
        AUTHORIZE_STATUS = #AUTHORIZE_STATUS:VARCHAR#,
        AUTHORIZE_BY = #AUTHORIZE_BY:VARCHAR#,
        AUTHORIZE_DT = #AUTHORIZE_DT:TIMESTAMP#,
        INTEREST_RATE = #INTEREST_RATE:NUMERIC#,
        BALANCE_AMT = #BALANCE_AMT:NUMERIC#,
        PENAL_INT_RATE = #PENAL_INT_RATE:NUMERIC#
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR# AND (STATUS IN ('CREATED', 'MODIFIED'))
    </mapped-statement>

	<!-- Use Repayment object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriRepaymentInterest" inline-parameters="true">
        UPDATE AGRI_LOANS_REPAYMENT SET 
        STATUS = #STATUS:VARCHAR#, 
        STATUS_BY = #USER_ID:VARCHAR#, 
        STATUS_DT = #STATUS_DT:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND TRANS_ID = #transId:VARCHAR# AND (STATUS IN ('CREATED', 'MODIFIED')) 
    </mapped-statement>
        
    <mapped-statement name="getBalanceAgriLoanPrincipalAmt" result-class="java.util.HashMap" >
        SELECT LOAN_BALANCE_PRINCIPAL 
        FROM AGRI_LOANS_FACILITY_DETAILS 
        WHERE ACCT_NUM = #ACCOUNTNO:VARCHAR# AND (STATUS IN ('CREATED', 'MODIFIED'))
    </mapped-statement>
        
        <!-- Use Repayment object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriRepaymentMultiInterest" inline-parameters="true">
        INSERT INTO AGRI_LOANS_REPAYMENT_MULTIRATE
        (ACCT_NUM, TRANS_ID, INT_TYPE, INTEREST_RATE, FROM_DT, TO_DT
        ) VALUES (
        #ACCT_NUM:VARCHAR#, #TRANS_ID:VARCHAR#, #INT_TYPE:VARCHAR#, #INTEREST_RATE:NUMERIC#, #FROM_DT:DATE#, #TO_DT:DATE#)
    </mapped-statement>
        <!-- Use AgriTermLoanOtherDetailsTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanOtherDetailsTO" inline-parameters="true">
        INSERT INTO AGRI_ADVANCES_PARAM_DETAILS
        (ACT_NUM, INT_CR_BAL, INT_DR_BAL, CHK_BOOK, NRO_STATUS, MOBILE_BANKING, ATM_CARD, ATM_CARD_NO, ATM_CARD_EXPRDT, CR_CARD, CR_CARD_NO, CR_CARD_EXPRDT, DR_CARD, DR_CARD_NO, DR_CARD_EXPRDT, ABB, ABB_CHRG, NPA, NPA_DT, STOP_PAY_CHRG, MODE_OF_OPERATION, SETTLEMENT_MODE, ACT_OPEN_CHRG, CHK_RETURN, INOP_CHRG, STAT_CHRG, NONMAIN_CHRG, LAST_DR_INT_APPLDT, CUSTGRP_LIMIT_VALIDATION, MIN_ACT_BAL, CHK_BOOK_CHRG, REQ_FLEXI_PD, MISC_SERV_CHRG, FOLIO_CHRG, ACT_CLOSING_CHRG, STAT_FREQ, EXCESS_WITHD_CHRG, LAST_CR_INT_APPLDT, ATM_CARD_VALIDFROM, CR_CARD_VALIDFROM, DR_CARD_VALIDFROM, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #actNum:VARCHAR#, #intCrBal:VARCHAR#, #intDrBal:VARCHAR#, #chkBook:VARCHAR#, #nroStatus:VARCHAR#, #mobileBanking:VARCHAR#, #atmCard:VARCHAR#, #atmCardNo:VARCHAR#, #atmCardExprdt:DATE#, #crCard:VARCHAR#, #crCardNo:VARCHAR#, #crCardExprdt:DATE#, #drCard:VARCHAR#, #drCardNo:VARCHAR#, #drCardExprdt:DATE#, #abb:VARCHAR#, #abbChrg:NUMERIC#, #npa:VARCHAR#, #npaDt:DATE#, #stopPayChrg:VARCHAR#, #modeOfOperation:VARCHAR#, #settlementMode:VARCHAR#, #actOpenChrg:NUMERIC#, #chkReturn:VARCHAR#, #inopChrg:VARCHAR#, #statChrg:VARCHAR#, #nonmainChrg:VARCHAR#, #lastDrIntAppldt:DATE#, #custgrpLimitValidation:VARCHAR#, #minActBal:NUMERIC#, #chkBookChrg:NUMERIC#, #reqFlexiPd:NUMERIC#, #miscServChrg:NUMERIC#, #folioChrg:NUMERIC#, #actClosingChrg:NUMERIC#, #statFreq:NUMERIC#, #excessWithdChrg:NUMERIC#, #lastCrIntAppldt:DATE#, #atmCardValidfrom:DATE#, #crCardValidfrom:DATE#, #drCardValidfrom:DATE#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use TermLoanOtherDetailsTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanOtherDetailsTO" inline-parameters="true">
        UPDATE AGRI_ADVANCES_PARAM_DETAILS SET 
        INT_CR_BAL = #intCrBal:VARCHAR#,
        INT_DR_BAL = #intDrBal:VARCHAR#,
        CHK_BOOK = #chkBook:VARCHAR#,
        NRO_STATUS = #nroStatus:VARCHAR#,
        MOBILE_BANKING = #mobileBanking:VARCHAR#,
        ATM_CARD = #atmCard:VARCHAR#,
        ATM_CARD_NO = #atmCardNo:VARCHAR#,
        ATM_CARD_EXPRDT = #atmCardExprdt:DATE#,
        CR_CARD = #crCard:VARCHAR#,
        CR_CARD_NO = #crCardNo:VARCHAR#,
        CR_CARD_EXPRDT = #crCardExprdt:DATE#,
        DR_CARD = #drCard:VARCHAR#,
        DR_CARD_NO = #drCardNo:VARCHAR#,
        DR_CARD_EXPRDT = #drCardExprdt:DATE#,
        ABB = #abb:VARCHAR#,
        ABB_CHRG = #abbChrg:NUMERIC#,
        NPA = #npa:VARCHAR#,
        NPA_DT = #npaDt:DATE#,
        STOP_PAY_CHRG = #stopPayChrg:VARCHAR#,
        MODE_OF_OPERATION = #modeOfOperation:VARCHAR#,
        SETTLEMENT_MODE = #settlementMode:VARCHAR#,
        ACT_OPEN_CHRG = #actOpenChrg:NUMERIC#,
        CHK_RETURN = #chkReturn:VARCHAR#,
        INOP_CHRG = #inopChrg:VARCHAR#,
        STAT_CHRG = #statChrg:VARCHAR#,
        NONMAIN_CHRG = #nonmainChrg:VARCHAR#,
        LAST_DR_INT_APPLDT = #lastDrIntAppldt:DATE#,
        CUSTGRP_LIMIT_VALIDATION = #custgrpLimitValidation:VARCHAR#,
        MIN_ACT_BAL = #minActBal:NUMERIC#,
        CHK_BOOK_CHRG = #chkBookChrg:NUMERIC#,
        REQ_FLEXI_PD = #reqFlexiPd:NUMERIC#,
        MISC_SERV_CHRG = #miscServChrg:NUMERIC#,
        FOLIO_CHRG = #folioChrg:NUMERIC#,
        ACT_CLOSING_CHRG = #actClosingChrg:NUMERIC#,
        STAT_FREQ = #statFreq:NUMERIC#,
        EXCESS_WITHD_CHRG = #excessWithdChrg:NUMERIC#,
        LAST_CR_INT_APPLDT = #lastCrIntAppldt:DATE#,
        ATM_CARD_VALIDFROM = #atmCardValidfrom:DATE#,
        CR_CARD_VALIDFROM = #crCardValidfrom:DATE#,
        DR_CARD_VALIDFROM = #drCardValidfrom:DATE#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP#
        WHERE ACT_NUM = #actNum:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>

	<!-- Use TermLoanOtherDetailsTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanOtherDetailsTO" inline-parameters="true">
        UPDATE AGRI_ADVANCES_PARAM_DETAILS SET 
        STATUS = #status:VARCHAR#, 
        STATUS_BY = #statusBy:VARCHAR#, 
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACT_NUM = #actNum:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanOtherDetailsTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanOtherDetailsTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanOtherDetailsTO">
        <property name="actNum" column="ACT_NUM"/>
        <property name="intCrBal" column="INT_CR_BAL"/>
        <property name="intDrBal" column="INT_DR_BAL"/>
        <property name="chkBook" column="CHK_BOOK"/>
        <property name="nroStatus" column="NRO_STATUS"/>
        <property name="mobileBanking" column="MOBILE_BANKING"/>
        <property name="atmCard" column="ATM_CARD"/>
        <property name="atmCardNo" column="ATM_CARD_NO"/>
        <property name="atmCardExprdt" column="ATM_CARD_EXPRDT"/>
        <property name="crCard" column="CR_CARD"/>
        <property name="crCardNo" column="CR_CARD_NO"/>
        <property name="crCardExprdt" column="CR_CARD_EXPRDT"/>
        <property name="drCard" column="DR_CARD"/>
        <property name="drCardNo" column="DR_CARD_NO"/>
        <property name="drCardExprdt" column="DR_CARD_EXPRDT"/>
        <property name="abb" column="ABB"/>
        <property name="abbChrg" column="ABB_CHRG"/>
        <property name="npa" column="NPA"/>
        <property name="npaDt" column="NPA_DT"/>
        <property name="stopPayChrg" column="STOP_PAY_CHRG"/>
        <property name="modeOfOperation" column="MODE_OF_OPERATION"/>
        <property name="settlementMode" column="SETTLEMENT_MODE"/>
        <property name="actOpenChrg" column="ACT_OPEN_CHRG"/>
        <property name="chkReturn" column="CHK_RETURN"/>
        <property name="inopChrg" column="INOP_CHRG"/>
        <property name="statChrg" column="STAT_CHRG"/>
        <property name="nonmainChrg" column="NONMAIN_CHRG"/>
        <property name="lastDrIntAppldt" column="LAST_DR_INT_APPLDT"/>
        <property name="custgrpLimitValidation" column="CUSTGRP_LIMIT_VALIDATION"/>
        <property name="minActBal" column="MIN_ACT_BAL"/>
        <property name="chkBookChrg" column="CHK_BOOK_CHRG"/>
        <property name="reqFlexiPd" column="REQ_FLEXI_PD"/>
        <property name="miscServChrg" column="MISC_SERV_CHRG"/>
        <property name="folioChrg" column="FOLIO_CHRG"/>
        <property name="actClosingChrg" column="ACT_CLOSING_CHRG"/>
        <property name="statFreq" column="STAT_FREQ"/>
        <property name="excessWithdChrg" column="EXCESS_WITHD_CHRG"/>
        <property name="lastCrIntAppldt" column="LAST_CR_INT_APPLDT"/>
        <property name="atmCardValidfrom" column="ATM_CARD_VALIDFROM"/>
        <property name="crCardValidfrom" column="CR_CARD_VALIDFROM"/>
        <property name="drCardValidfrom" column="DR_CARD_VALIDFROM"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanOtherDetailsTO" result-map="getAgriTermLoanOtherDetailsTOResult" >
        SELECT * FROM AGRI_ADVANCES_PARAM_DETAILS 
        WHERE ACT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
        
        

	<!-- Use Repayment object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriRepaymentMultiInterest" inline-parameters="true">
        UPDATE AGRI_LOANS_REPAYMENT_MULTIRATE SET 
        INT_TYPE = #INT_TYPE:VARCHAR#,
        INTEREST_RATE = #INTEREST_RATE:NUMERIC#,
        FROM_DT = #FROM_DT:DATE#,
        TO_DT = #TO_DT:DATE#
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>

        <!-- Use TermLoanClassificationTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanClassificationTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_CLASSIFY_DETAILS
        (BORROW_NO, PROD_ID, COMMODITY_CODE, BUSINESS_SECTOR_CODE, FACILITY_TYPE, PURPOSE_CODE, INDUSTRY_CODE, TWENTY_CODE, GOVT_SCHEME_CODE, NPA_DT, ECGC, DOCUMENT_COMPLETE, GUARANTEE_COVER_CODE, HEALTH_CODE, DISTRICT_CODE, SECTOR_CODE, PAYMENT_CODE, REFINANCING_INSTITUTION, ASSET_STATUS, DIRECT_FINANCE, PRIORITY_SECTOR, QIS, AUTHORIZE_REMARKS, AUTHORIZE_STATUS, ACCT_NUM, STATUS, STATUS_BY, STATUS_DT
        ) VALUES (
        #borrowNo:VARCHAR#, #prodId:VARCHAR#, #commodityCode:VARCHAR#, #businessSectorCode:VARCHAR#, #facilityType:VARCHAR#, #purposeCode:VARCHAR#, #industryCode:VARCHAR#, #twentyCode:VARCHAR#, #govtSchemeCode:VARCHAR#, #npaDt:DATE#, #ecgc:VARCHAR#, #documentComplete:VARCHAR#, #guaranteeCoverCode:VARCHAR#, #healthCode:VARCHAR#, #districtCode:VARCHAR#, #sectorCode:VARCHAR#, #paymentCode:VARCHAR#, #refinancingInstitution:VARCHAR#, #assetStatus:VARCHAR#, #directFinance:VARCHAR#, #prioritySector:VARCHAR#, #qis:VARCHAR#, #authorizeRemarks:VARCHAR#, #authorizeStatus:VARCHAR#, #acctNum:VARCHAR#, #status:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use TermLoanClassificationTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanClassificationTO" inline-parameters="true">
        UPDATE AGRI_LOANS_CLASSIFY_DETAILS SET 
		<!--BORROW_NO = #borrowNo:VARCHAR#,-->
        PROD_ID = #prodId:VARCHAR#,
        COMMODITY_CODE = #commodityCode:VARCHAR#,
        BUSINESS_SECTOR_CODE = #businessSectorCode:VARCHAR#,
        FACILITY_TYPE = #facilityType:VARCHAR#,
        PURPOSE_CODE = #purposeCode:VARCHAR#,
        INDUSTRY_CODE = #industryCode:VARCHAR#,
        TWENTY_CODE = #twentyCode:VARCHAR#,
        GOVT_SCHEME_CODE = #govtSchemeCode:VARCHAR#,
        NPA_DT = #npaDt:DATE#,
        ECGC = #ecgc:VARCHAR#,
        DOCUMENT_COMPLETE = #documentComplete:VARCHAR#,
        GUARANTEE_COVER_CODE = #guaranteeCoverCode:VARCHAR#,
        HEALTH_CODE = #healthCode:VARCHAR#,
        DISTRICT_CODE = #districtCode:VARCHAR#,
        SECTOR_CODE = #sectorCode:VARCHAR#,
        PAYMENT_CODE = #paymentCode:VARCHAR#,
        REFINANCING_INSTITUTION = #refinancingInstitution:VARCHAR#,
        ASSET_STATUS = #assetStatus:VARCHAR#,
        DIRECT_FINANCE = #directFinance:VARCHAR#,
        PRIORITY_SECTOR = #prioritySector:VARCHAR#,
        QIS = #qis:VARCHAR#,
        AUTHORIZE_REMARKS = #authorizeRemarks:VARCHAR#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
		<!--ACCT_NUM = #acctNum:VARCHAR#,-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanClassificationTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanClassificationTO" inline-parameters="true">
        UPDATE AGRI_LOANS_CLASSIFY_DETAILS SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

    <mapped-statement name="updateProdID_AgriTermLoanClassificationTO" inline-parameters="true">
        UPDATE AGRI_LOANS_CLASSIFY_DETAILS SET 
        PROD_ID = #prodId:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE ACCT_NUM = #acctNum:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanClassificationTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanClassificationTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanClassificationTO">
        <property name="borrowNo" column="BORROW_NO"/>
        <property name="prodId" column="PROD_ID"/>
        <property name="commodityCode" column="COMMODITY_CODE"/>
        <property name="businessSectorCode" column="BUSINESS_SECTOR_CODE"/>
        <property name="facilityType" column="FACILITY_TYPE"/>
        <property name="purposeCode" column="PURPOSE_CODE"/>
        <property name="industryCode" column="INDUSTRY_CODE"/>
        <property name="twentyCode" column="TWENTY_CODE"/>
        <property name="govtSchemeCode" column="GOVT_SCHEME_CODE"/>
        <property name="npaDt" column="NPA_DT"/>
        <property name="ecgc" column="ECGC"/>
        <property name="documentComplete" column="DOCUMENT_COMPLETE"/>
        <property name="guaranteeCoverCode" column="GUARANTEE_COVER_CODE"/>
        <property name="healthCode" column="HEALTH_CODE"/>
        <property name="districtCode" column="DISTRICT_CODE"/>
        <property name="sectorCode" column="SECTOR_CODE"/>
        <property name="paymentCode" column="PAYMENT_CODE"/>
        <property name="refinancingInstitution" column="REFINANCING_INSTITUTION"/>
        <property name="assetStatus" column="ASSET_STATUS"/>
        <property name="directFinance" column="DIRECT_FINANCE"/>
        <property name="prioritySector" column="PRIORITY_SECTOR"/>
        <property name="qis" column="QIS"/>
        <property name="authorizeRemarks" column="AUTHORIZE_REMARKS"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanClassificationTO" result-map="getAgriTermLoanClassificationTOResult" >
        SELECT * FROM AGRI_LOANS_CLASSIFY_DETAILS 
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 

    </mapped-statement>
        
        <!-- Use TermLoanJointAcctTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertAgriTermLoanJointAcctTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_JOINT
        (CUST_ID, STATUS, BORROW_NO, STATUS_BY, STATUS_DT
        ) VALUES (
        #custId:VARCHAR#, #status:VARCHAR#, #borrowNo:VARCHAR#, #statusBy:VARCHAR#, #statusDt:TIMESTAMP#)
    </mapped-statement>

	<!-- Use TermLoanJointAcctTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriTermLoanJointAcctTO" inline-parameters="true">
        UPDATE AGRI_LOANS_JOINT SET 
		<!--CUST_ID = #custId:VARCHAR#,
		BORROW_NO = #borrowNo:VARCHAR#,-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND CUST_ID = #custId:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanJointAcctTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriTermLoanJointAcctTO" inline-parameters="true">
        UPDATE AGRI_LOANS_JOINT SET 
		<!--CUST_ID = #custId:VARCHAR#,
		BORROW_NO = #borrowNo:VARCHAR#,-->
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:TIMESTAMP# 
        WHERE BORROW_NO = #borrowNo:VARCHAR# AND CUST_ID = #custId:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanJointAcctTO object (JavaBean) properties -->
    <result-map name="getAgriTermLoanJointAcctTOResult" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanJointAcctTO">
        <property name="custId" column="CUST_ID"/>
        <property name="status" column="STATUS"/>
        <property name="borrowNo" column="BORROW_NO"/>
    </result-map>
    <mapped-statement name="getSelectAgriTermLoanJointAcctTO" result-map="getAgriTermLoanJointAcctTOResult" >
        SELECT * FROM AGRI_LOANS_JOINT 
        WHERE BORROW_NO = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
        
        
    <dynamic-mapped-statement name="AgriIntCalculationDetail" result-class="java.util.HashMap" >
        SELECT INSTALL_TYPE,CALENDAR_FREQ,AS_CUSTOMER_COMES,PENAL_APP_PRINCIPAL,PENAL_APP_INTEREST,BEHAVES_LIKE,LAST_INT_CALC_DT,LFD.PROD_ID
        FROM AGRILOANS_PROD_INTREC LPI, AGRILOANS_PRODUCT LP, AGRI_LOANS_FACILITY_DETAILS LFD,AGRI_LOANS_REPAY_SCHEDULE LRS
              
        WHERE LP.PROD_ID=LPI.PROD_ID AND LFD.PROD_ID = LP.PROD_ID AND LFD.ACCT_NUM=
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend='' property="BATCH_ID">
                    (SELECT DISTINCT(LINK_BATCH_ID) FROM TRANSFER_TRANS WHERE BATCH_ID=#BATCH_ID# AND
                    TRANS_DT = #TRANS_DT:DATE# AND
                    INITIATED_BRANCH = #INITIATED_BRANCH:VARCHAR#)
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend='' property="ACT_NUM">
                    #ACT_NUM:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        AND LRS.ACCT_NUM=LFD.ACCT_NUM AND LRS.STATUS !='DELETED'
    </dynamic-mapped-statement>
        
    <dynamic-mapped-statement name="AgriIntCalculationDetailAD" result-class="java.util.HashMap" >
        SELECT CALENDAR_FREQ,AS_CUSTOMER_COMES,PENAL_APP_PRINCIPAL,PENAL_APP_INTEREST,BEHAVES_LIKE,LAST_INT_CALC_DT,LFD.PROD_ID
        FROM AGRI_LOANS_PROD_INTREC LPI, AGRILOANS_PRODUCT LP, AGRI_LOANS_FACILITY_DETAILS LFD,ADVANCES_PARAM_DETAILS APD
              
        WHERE LP.PROD_ID=LPI.PROD_ID AND LFD.PROD_ID = LP.PROD_ID AND LFD.ACCT_NUM=
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend='' property="BATCH_ID">
                    (SELECT DISTINCT(LINK_BATCH_ID) FROM TRANSFER_TRANS WHERE BATCH_ID=#BATCH_ID:VARCHAR# AND
                    TRANS_DT = #TRANS_DT:DATE# AND
                    INITIATED_BRANCH = #INITIATED_BRANCH:VARCHAR# AND LINK_BATCH_ID IS NOT NULL)
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend='' property="ACT_NUM">
                    #ACT_NUM:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        AND APD.ACT_NUM=LFD.ACCT_NUM AND APD.STATUS !='DELETED'
    </dynamic-mapped-statement>
        
    <mapped-statement name="insertAgriLoanInterestTMP" result-class="java.util.HashMap" >
        INSERT INTO AGRI_LOANS_CLOSING_INT_TMP(ACT_NUM ,FROM_DT,TO_DATE,AMT,NO_OF_DAYS,TOT_PRODUCT,INT_AMT,INT_RATE,PROD_ID,INT_CALC_DT,CUST_ID)
        VALUES (#ACT_NUM:VARCHAR#,#FROM_DT#,#TO_DATE#,#AMT:NUMERIC#,#NO_OF_DAYS:NUMERIC#,#TOT_PRODUCT:NUMERIC#
        ,#INT_AMT:NUMERIC#,#INT_RATE:NUMERIC#,#PROD_ID:VARCHAR#,(SELECT SYS_DATE() FROM DUAL),#CUST_ID:VARCHAR#)
    </mapped-statement>
        
    <mapped-statement name="insertAgriLoanInterest" inline-parameters="true" >
        INSERT INTO AGRI_LOANS_INTEREST(ACT_NUM ,FROM_DT,TO_DATE,AMT,NO_OF_DAYS,TOT_PRODUCT,INT_AMT,INT_RATE,PROD_ID,INT_CALC_DT,CUST_ID)
        VALUES (#ACT_NUM:VARCHAR#,#FROM_DT#,#TO_DATE#,#AMT:NUMERIC#,#NO_OF_DAYS:NUMERIC#,#TOT_PRODUCT:NUMERIC#
        ,#INT_AMT:NUMERIC#,#INT_RATE:NUMERIC#,#PROD_ID:VARCHAR#,(SELECT SYS_DATE() FROM DUAL),#CUST_ID:VARCHAR#)
    </mapped-statement>
        
    <mapped-statement name="checkTransactionATL" result-class="java.util.HashMap" >
        SELECT COUNT(*) AS CNT FROM AGRILOAN_TRANS_DETAILS WHERE ACT_NUM = #ACT_NUM#
    </mapped-statement>
        
    <mapped-statement name="selectAgriLoanInterestTMP" result-class="java.util.HashMap" >
        SELECT * FROM AGRI_LOANS_CLOSING_INT_TMP WHERE ACT_NUM=#ACT_NUM:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="deleteAgriLoanInterestTMP" result-class="java.util.HashMap" >
        DELETE  FROM AGRI_LOANS_CLOSING_INT_TMP WHERE ACT_NUM=#ACT_NUM:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getAgriProdClassiDetails" result-class="java.util.LinkedHashMap" >
        SELECT * FROM AGRILOANS_PROD_CLASSIFICATION WHERE PROD_ID = #PROD_ID:VARCHAR# AND 
        (STATUS = 'CREATED' OR STATUS = 'MODIFIED') 
    </mapped-statement>
        
    <mapped-statement name="getAllLoanInstallmentATL" result-class="java.util.HashMap" >
        SELECT INSTALLMENT_DT, PRINCIPAL_AMT,TOTAL_AMT FROM AGRI_LOANS_INSTALLMENT WHERE ACCT_NUM=#ACT_NUM:VARCHAR# AND STATUS !='DELETED'
        ORDER BY INSTALLMENT_SLNO
    </mapped-statement>

    
    <dynamic-mapped-statement name="getAgriDisbursementDetails" result-class="java.util.HashMap" >
        SELECT DISBURSEMENT_ID, DISBURSEMENT_AMT, DISBURSEMENT_DT FROM AGRI_LOANS_DISBURSEMENT 
        WHERE ACT_NUM = #ACT_NUM:VARCHAR# AND STATUS IN ('CREATED', 'MODIFIED') AND AUTHORIZE_STATUS IN ('AUTHORIZED') AND (REPAYMENT_SCHEDULE_NO IS NULL 
        <dynamic>
            <isNotEmpty prepend=" OR REPAYMENT_SCHEDULE_NO IN ( " property="REPAYMENT_SCHEDULE_NO">
                $REPAYMENT_SCHEDULE_NO$ )
            </isNotEmpty>
        </dynamic>)
        <dynamic>
            <isNotEmpty prepend=" AND DISBURSEMENT_ID NOT IN ( " property="DISBURSEMENT_ID">
                $DISBURSEMENT_ID$ )
            </isNotEmpty>
        </dynamic>
    </dynamic-mapped-statement>
        
    <mapped-statement name="getSelectAgriSecurityAmtClosingTL" result-class="java.util.HashMap" >
        SELECT CUST_ID,SECURITY_NO,-ELIGIBLE_LOAN_AMT as AVAILABLE_SECURITY_VALUE  FROM 
        AGRI_LOANS_SECURITY_DETAILS WHERE ACCT_NUM =#ACCOUNTNO:VARCHAR# AND STATUS !='DELETED'
    </mapped-statement>
        
    <mapped-statement name="AgriTermLoan.getBehavesLike" result-class="java.util.HashMap" >
        SELECT LP.BEHAVES_LIKE, LFD.PROD_ID, LFD.INT_GET_FROM, LFD.SECURITY_DETAILS, 
        LSD.LIMIT 
        FROM AGRILOANS_PRODUCT LP, AGRI_LOANS_FACILITY_DETAILS LFD, AGRI_LOANS_SANCTION_DETAILS LSD 
        WHERE LP.PROD_ID = LFD.PROD_ID 
        AND LFD.ACCT_NUM = #ACCT_NUM:VARCHAR# 
        AND LSD.SL_NO = LFD.SL_NO 
        AND LSD.SANCTION_NO = LFD.SANCTION_NO 
        AND LSD.STATUS IN ('CREATED', 'MODIFIED') 
        AND (LP.STATUS = 'CREATED' OR LP.STATUS = 'MODIFIED') AND LP.AUTHORIZE_STATUS = 'AUTHORIZED' 
        AND (LFD.STATUS = 'CREATED' OR LFD.STATUS = 'MODIFIED') 
    </mapped-statement>
        
    <mapped-statement name="getAgriAcctInterestDetailsCount" result-class="java.util.HashMap" >
        SELECT COUNT(ACCT_NUM) NO_RECORDS FROM AGRI_LOANS_INT_MAINTENANCE 
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR# AND STATUS IN ('CREATED', 'MODIFIED') 
    </mapped-statement>
        
        
    <mapped-statement name="getSelectAgriTermLoanSanctionFacilityMaxSLNO" result-class="java.util.HashMap">
        SELECT MAX(SL_NO) AS MAX_SL_NO FROM AGRI_LOANS_SANCTION_DETAILS WHERE BORROW_NO = #borrowNo:VARCHAR#
        AND SANCTION_NO = #sanctionNo:VARCHAR# AND STATUS = 'DELETED'
    </mapped-statement>
        
       
        
    <mapped-statement name="getCountOfAgriSanctionNo" result-class="java.util.HashMap" >
        SELECT COUNT(SANCTION_NO) AS "SANCTION_NO" FROM AGRI_LOANS_SANCTION
        WHERE SANCTION_NO = #sanctionNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED' )
    </mapped-statement>
        
    <mapped-statement name="getCompFreqRoundOff_AgriLoanProd" result-class="java.util.HashMap" >
        SELECT DEBITINT_COMP_FREQ, DEBIT_INT_ROUNDOFF FROM AGRILOANS_PROD_INTREC WHERE PROD_ID = #PROD_ID:VARCHAR#
    </mapped-statement>

    <mapped-statement name="getAgriProdIntDetails" result-class="java.util.LinkedHashMap" >
        SELECT PENAL_APPL, PENAL_INT_RATE, LIMIT_EXPIRY_INT, PLR_RATE_APPL, PLR_RATE 
        FROM AGRILOANS_PROD_INTREC WHERE PROD_ID = #PROD_ID:VARCHAR#
    </mapped-statement>
                
    <mapped-statement name="AgriTermLoan.getProduct_Details" result-class="java.util.HashMap" >
        SELECT * FROM AGRILOANS_PROD_INTCALC WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="AgriTermLoan.getProdHead" result-class="java.util.LinkedHashMap" >
        SELECT AGRILOANS_PRODUCT.ACCT_HEAD AS "AC_HEAD" FROM AGRILOANS_PRODUCT WHERE AGRILOANS_PRODUCT.PROD_ID = #prodId:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getAgriBorrowerNumber" result-class="java.util.HashMap" >
        SELECT BORROW_NO FROM AGRI_LOANS_BORROWER WHERE (CUST_ID = #custId:VARCHAR# AND CONSTITUTION = #constitution:VARCHAR#
        AND CATEGORY = #category:VARCHAR# AND STATUS != 'DELETED')
    </mapped-statement>
        
    <mapped-statement name="getAgriBorrowerNumberForLTD" result-class="java.util.HashMap" >
        SELECT BORROW_NO FROM AGRI_LOANS_FACILITY_DETAILS WHERE ACCT_NUM = #LOAN_NO:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getAgriAccountNumber" result-class="java.util.HashMap" >
        SELECT ACCT_NUM, INT_GET_FROM FROM AGRI_LOANS_FACILITY_DETAILS WHERE (BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR#
        AND SL_NO = #slNo:NUMERIC# AND (STATUS = 'MODIFIED' OR STATUS = 'CREATED'))
    </mapped-statement>
        
    <mapped-statement name="getAgriFacilityProdID" result-class="java.util.HashMap" >
        SELECT PRODUCT_ID FROM AGRI_LOANS_SANCTION_DETAILS WHERE (BORROW_NO = #borrowNo:VARCHAR# AND SANCTION_NO = #sanctionNo:VARCHAR#
        AND SL_NO = #slNo:NUMERIC# AND (STATUS = 'MODIFIED' OR STATUS = 'CREATED'))
    </mapped-statement>
        
    <mapped-statement name="getAgriCountOfSanctionNo" result-class="java.util.HashMap" >
        SELECT COUNT(SANCTION_NO) AS "SANCTION_NO" FROM AGRI_LOANS_SANCTION
        WHERE SANCTION_NO = #sanctionNo:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED' )
    </mapped-statement>
        
    <mapped-statement name="getAgriCompFreqRoundOff_LoanProd" result-class="java.util.HashMap" >
        SELECT DEBITINT_COMP_FREQ, DEBIT_INT_ROUNDOFF FROM AGRI_LOANS_PROD_INTREC WHERE PROD_ID = #PROD_ID:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getAgriSanctionDetails" result-class="java.util.HashMap" >
        SELECT SD.LIMIT, SD.TO_DT, S.SANCTION_DT FROM AGRI_LOANS_SANCTION_DETAILS "SD", AGRI_LOANS_SANCTION "S"
        WHERE S.SANCTION_NO = #sanctionNo:VARCHAR# AND (SD.SANCTION_NO = #sanctionNo:VARCHAR# AND SD.SL_NO = #slNo:NUMERIC#) AND S.STATUS != 'DELETED' AND SD.STATUS != 'DELETED'
    </mapped-statement>
        
    <mapped-statement name="getAgriProdLevelOtherDetails" result-class="java.util.HashMap" >
        SELECT LPC.AC_CLOSING_CHRG, LPC.MISC_SERV_CHRG, LPS.ATM_CARD_ISSUED, LPS.CR_CARD_ISSUED, LPS.MOBILE_BANK_CLIENT, 
        APA.CHK_ALLOWED, APC.CHQBK_ISSUED_CHRG, APC.CHQBK_ISSUED_CHRG_PER, APS.DEBIT_CARD_ISSUED  
        FROM ADVANCES_PROD_ACPARAM APA, ADVANCES_PROD_CHARGES APC, ADVANCES_PROD_SPECIALITEM APS,
        AGRILOANS_PROD_CHARGES LPC, AGRILOANS_PROD_SPECIALITEM LPS, AGRILOANS_PRODUCT LP  
        WHERE LP.PROD_ID = #PROD_ID:VARCHAR# AND LPS.PROD_ID = LP.PROD_ID 
        AND LPC.PROD_ID = LP.PROD_ID AND APA.PROD_ID = LP.PROD_ID 
        AND APC.PROD_ID = LP.PROD_ID AND APS.PROD_ID = LP.PROD_ID AND LP.STATUS != 'DELETED'
    </mapped-statement>
        
    <mapped-statement name="getAgriFacilityExpDate" result-class="java.util.HashMap" >
        SELECT SD.TO_DT - 1 "TO_DATE", SD.TO_DT "FROM_DATE" FROM AGRI_LOANS_SANCTION_DETAILS SD, AGRI_LOANS_FACILITY_DETAILS SFD
        WHERE SD.SANCTION_NO = SFD.SANCTION_NO AND 
        SFD.ACCT_NUM = #acctNum:VARCHAR# AND 
        SFD.STATUS != 'DELETED' AND SD.SL_NO = SFD.SL_NO AND SD.STATUS != 'DELETED'
    </mapped-statement>
        
    <mapped-statement name="AgriTermLoan.getLoanPeriodMultiples" result-class="java.util.HashMap" >
        SELECT LOAN_PERIODS_MULTIPLES FROM AGRI_LOANS_PROD_INTCALC WHERE PROD_ID = #prodId:VARCHAR#
    </mapped-statement>
        
    <dynamic-mapped-statement name="getInterestAndPenalIntActHeadATL" result-class="java.util.HashMap" >
        SELECT DISTINCT(AC_DEBIT_INT), PENAL_INT,INT_PAYABLE_ACHD ,ACCT_HEAD,NOTICE_CHARGES,POSTAGE_CHARGES,MISC_SERV_CHRG,AC_CLOSING_CHRG,
        LEGAL_CHARGES,ARBITRARY_CHARGES,INSURANCE_CHARGES,EXECUTION_DECREE_CHARGES FROM LOANS_PRODUCT LP,  
        AGRI_LOANS_PROD_ACHD LPA,  AGRI_LOANS_FACILITY_DETAILS LFD WHERE LPA.PROD_ID = #PROD_ID:VARCHAR# AND LFD.PROD_ID=LP.PROD_ID
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend='AND'    property="ACCT_NUM">
                    LFD.ACCT_NUM=#ACCT_NUM:VARCHAR#
                </isNotNull>
                
                <isNotNull prepend='AND'    property="PROD_ID">
                    LP.PROD_ID=#PROD_ID:VARCHAR# 
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        AND LP.STATUS !='DELETED' AND LP.AUTHORIZE_STATUS='AUTHORIZED'
    </dynamic-mapped-statement>
        
    <dynamic-mapped-statement name="getOverDueDetailsATL" result-class="java.util.HashMap" >
          <!--  SELECT INSTALLMENT_DT, PRINCIPAL_AMT, INTEREST_AMT, INTEREST_RATE 
            FROM AGRI_LOANS_INSTALLMENT 
            WHERE ((#FROM_DATE# &lt;= INSTALLMENT_DT) AND (#TO_DATE# &gt;= INSTALLMENT_DT)) -->
        SELECT INSTALLMENT_DT, PRINCIPAL_AMT, INTEREST_AMT, INTEREST_RATE
        FROM AGRI_LOANS_INSTALLMENT 
        WHERE #FROM_DT:DATE# &lt;= INSTALLMENT_DT AND 
        #TO_DATE:DATE# &gt;= INSTALLMENT_DT  AND STATUS !='DELETED'
        <dynamic>
            <isParameterPresent>
                <isNotNull  prepend= "AND"  property="ACT_NUM">      
                    ACCT_NUM=#ACT_NUM:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>
        
    <dynamic-mapped-statement name="getPrincipalDueDetailsATL" result-class="java.util.HashMap" >
        SELECT  * FROM AGRI_LOANS_INSTALLMENT  WHERE
        #CURR_DATE:DATE# &gt;= INSTALLMENT_DT 
        <dynamic>
            <isParameterPresent>
                <isNotNull  prepend= "AND"  property="ACT_NUM">      
                    ACCT_NUM=#ACT_NUM:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        AND STATUS !='DELETED' ORDER BY INSTALLMENT_SLNO
    </dynamic-mapped-statement>
            
    <mapped-statement name="insertAgriTermLoanChargeTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_ACCT_CHARGE_DETAILS
        (
        PROD_TYPE,PROD_ID,ACT_NUM,CHARGE_TYPE,CHARGE_DATE,AMOUNT,
        STATUS, STATUS_BY,STATUS_DT,AUTHORIZE_STATUS,AUTHORIZE_BY ,AUTHORIZE_DT,PAID_AMT,CHARGE_NO)  
        VALUES(#prod_Type:VARCHAR#,#prod_Id:VARCHAR#,#act_num:VARCHAR#,#charge_Type:VARCHAR#,
        #chargeDt:DATE#,#amount:NUMERIC#,#status:VARCHAR#,#status_By:VARCHAR#,#status_Dt:DATE#,#authorize_Status:VARCHAR#,
        #authorize_by:VARCHAR#,#authorize_Dt:DATE#, 
        #paidAmount:NUMERIC#,(SELECT NVL(MAX(CHARGE_NO)+1,1) FROM AGRI_LOANS_ACCT_CHARGE_DETAILS WHERE ACT_NUM =#act_num:VARCHAR#))
    </mapped-statement>
        
    <mapped-statement name="updateAgriTermLoanChargeTO" inline-parameters="true">
        UPDATE  AGRI_LOANS_ACCT_CHARGE_DETAILS SET
        PROD_TYPE=#prod_Type:VARCHAR#,
        PROD_ID=#prod_Id:VARCHAR#,
        ACT_NUM=#act_num:VARCHAR#,
        CHARGE_TYPE=#charge_Type:VARCHAR#,
        CHARGE_DATE=#chargeDt:DATE#,
        AMOUNT=#amount:NUMERIC#,
        STATUS=#status:VARCHAR#, 
        STATUS_BY=#status_By:VARCHAR#,
        STATUS_DT=#status_Dt:DATE#,
        AUTHORIZE_STATUS=#authorize_Status:VARCHAR#,
        AUTHORIZE_BY= #authorize_by:VARCHAR#,
        AUTHORIZE_DT=#authorize_Dt:DATE#,
        PAID_AMT= #paidAmount:NUMERIC#,
        CHARGE_NO =#chargeGenerateNo:NUMERIC#  WHERE CHARGE_NO =#chargeGenerateNo:NUMERIC# AND ACT_NUM=#act_num:VARCHAR# 
    </mapped-statement>
        
    <result-map name="getAgriTermLoanChargeDetails" class="com.see.truetransact.transferobject.termloan.chargesTo.TermLoanChargesTO">
        <property name="act_num" column="ACT_NUM"/>
        <property name="prod_Type" column="PROD_TYPE"/>
        <property name="prod_Id" column="PROD_ID"/>
        <property name="act_num" column="ACT_NUM"/>
        <property name="charge_Type" column="CHARGE_TYPE"/>
        <property name="chargeDt" column="CHARGE_DATE"/>
        <property name="amount" column="AMOUNT"/>
        <property name="status" column="STATUS"/> 
        <property name="status_By" column="STATUS_BY"/>
        <property name="status_Dt" column="STATUS_DT"/>
        <property name="authorize_Status" column="AUTHORIZE_STATUS"/>
        <property name="authorize_by" column="AUTHORIZE_BY"/>
        <property name="authorize_Dt" column="AUTHORIZE_DT"/>
        <property name="paidAmount" column="PAID_AMT"/>
        <property name="chargeGenerateNo" column="CHARGE_NO"/>
		
    </result-map>
        
    <mapped-statement name="getSelectAgriTermLoanChargeDetailsTO" result-map="getAgriTermLoanChargeDetails" >
        SELECT * FROM AGRI_LOANS_ACCT_CHARGE_DETAILS 
        WHERE ACT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>
       <!--                          AgriTermLoanSubLimit             -->
        
    <mapped-statement name="insertAgriSubLimitTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_SUBLIMIT
        (SUBLIMIT_AMT,SUBLIMIT_FROMDT,SUBLIMIT_TODT,ACCT_NUM,STATUS,SLNO)  
        VALUES(#subLimit:VARCHAR#,#startDt:DATE#,#endDt:DATE#,#acctNum:VARCHAR#,
        #status:VARCHAR#,#slno:VARCHAR#)        
    </mapped-statement>
        
    <mapped-statement name="updateAgriSubLimitTO" inline-parameters="true">
        UPDATE  AGRI_LOANS_SUBLIMIT SET
        SUBLIMIT_AMT=#subLimit:VARCHAR#,
        SUBLIMIT_FROMDT=#startDt:DATE#,
        SUBLIMIT_TODT=#endDt:DATE#,
        STATUS      = #status:VARCHAR#    WHERE 
        ACCT_NUM    =#acctNum:VARCHAR# AND
        SLNO=#slno:VARCHAR#                  
    </mapped-statement>
        
    <result-map name="getAgriSubLimit" class="com.see.truetransact.transferobject.termloan.agritermloan.agrinewdetails.AgriSubLimitTO">
        <property name="subLimit" column="SUBLIMIT_AMT"/>
        <property name="startDt" column="SUBLIMIT_FROMDT"/>
        <property name="endDt" column="SUBLIMIT_TODT"/>
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="status" column="STATUS"/>
        <property name="slno" column="SLNO"/>
		
    </result-map>
       
        
    <mapped-statement name="getSelectAgriSubLimitTO" result-map="getAgriSubLimit" >
        SELECT * FROM AGRI_LOANS_SUBLIMIT
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
        ORDER BY SLNO
    </mapped-statement>
        
        
        <!--                        AgriSubLimit Details-->
        
    <mapped-statement name="insertAgriSubLimitDetailsTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_SUBLIMIT_DETAILS
        (PURPOSE,TYPE,HECTARE,SURVEY_NO,REMARKS,SUBLIMIT_SLNO ,ACCT_NUM,STATUS,SLNO)  
        VALUES(#purpose:VARCHAR#,#type:VARCHAR#,#hectare:VARCHAR#,#surveryNo:VARCHAR#,#remarks:VARCHAR#,#subLimitslno:VARCHAR#,
        #acctNum:VARCHAR#,#status:VARCHAR#,#slno:VARCHAR#)    
    </mapped-statement>
        
    <mapped-statement name="updateAgriSubLimitDetailsTO" inline-parameters="true">
        UPDATE  AGRI_LOANS_SUBLIMIT_DETAILS SET
        PURPOSE=#purpose:VARCHAR#,
        TYPE=#type:VARCHAR#,
        HECTARE=#hectare:VARCHAR#,
        SURVEY_NO=#surveryNo:VARCHAR#,
        REMARKS=#remarks:VARCHAR#,
        STATUS      = #status:VARCHAR#    WHERE 
        ACCT_NUM    =#acctNum:VARCHAR# AND
        SLNO=#slno:VARCHAR# AND 
        SUBLIMIT_SLNO=#subLimitslno:VARCHAR#  AND 
        STATUS !='DELETED'               
    </mapped-statement>


    <result-map name="getAgriSubLimitDetails" class="com.see.truetransact.transferobject.termloan.agritermloan.agrinewdetails.AgriSubLimitDetailsTO">
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="purpose" column="PURPOSE"/>
        <property name="type" column="TYPE"/>
        <property name="hectare" column="HECTARE"/>
        <property name="surveryNo" column="SURVEY_NO"/>
        <property name="remarks" column="REMARKS"/>
        <property name="subLimitslno" column="SUBLIMIT_SLNO"/>
        <property name="status" column="STATUS"/>
        <property name="slno" column="SLNO"/>
		
    </result-map>
       
        
    <mapped-statement name="getSelectAgriSubLimitDetailsTO" result-map="getAgriSubLimitDetails" >
        SELECT * FROM AGRI_LOANS_SUBLIMIT_DETAILS
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
        ORDER BY SLNO
    </mapped-statement>

        <!--                        AgriTermLoanInsuranceTO      -->

    <mapped-statement name="insertAgriTermLoanInsuranceTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_INSURANCE
        (ACCT_NUM,TYPE_OF_INSURANCE,INSURANCE_UNDER_SCHEME, INSURANCE_COMP_NAME,ADDRESS,PHONE_NO,POLICY_NO,INS_ISSUE_DT,INS_FROM_DT,
        INS_TO_DT,INSURNACE_AMT,PREMIUM_AMT,NATURE_OF_RISK,DEBIT_PROD_TYPE,DEBIT_PROD_ID,DEBIT_ACCT_NO,SLNO,STATUS)
                   
        VALUES(#acctNum:VARCHAR#,#insuranceDetails:VARCHAR#,#insurnaceUnderScheme:VARCHAR#,#insuranceCompany:VARCHAR#,
        #address:VARCHAR#,#phoneNo:NUMERIC#,#policyNo:VARCHAR#,#policyDt:DATE#,#fromAppliedDt:DATE#,#expiryDt:DATE#,#policyAmt:NUMERIC#,
        #premiumAmt:NUMERIC#,#riskNature:VARCHAR#,#debitProdType:VARCHAR#,#debitProdId:VARCHAR#,#debitAcctNum:VARCHAR#,#slno:VARCHAR#,#status:VARCHAR#)        
    </mapped-statement>
        
    <mapped-statement name="updateAgriTermLoanInsuranceTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INSURANCE SET
        TYPE_OF_INSURANCE=#insuranceDetails:VARCHAR#,
        INSURANCE_UNDER_SCHEME=#insurnaceUnderScheme:VARCHAR#,
        INSURANCE_COMP_NAME=#insuranceCompany:VARCHAR#,
        ADDRESS=#address:VARCHAR#,
        PHONE_NO=#phoneNo:NUMERIC#,
        POLICY_NO=#policyNo:VARCHAR#,
        INS_ISSUE_DT=#policyDt:DATE#,
        INS_FROM_DT=#fromAppliedDt:DATE#,
        INS_TO_DT=#expiryDt:DATE#,
        INSURNACE_AMT=#policyAmt:NUMERIC#,
        PREMIUM_AMT=#premiumAmt:NUMERIC#,
        NATURE_OF_RISK=#riskNature:VARCHAR#,
        DEBIT_PROD_TYPE=#debitProdType:VARCHAR#,
        DEBIT_PROD_ID=#debitProdId:VARCHAR#,
        DEBIT_ACCT_NO=#debitAcctNum:VARCHAR#,
        STATUS=#status:VARCHAR#   WHERE 
        SLNO=#slno:VARCHAR#   AND        
        ACCT_NUM=#acctNum:VARCHAR#
                           
    </mapped-statement>
        
                
    <result-map name="getAgriTermLoanInsurance" class="com.see.truetransact.transferobject.termloan.agritermloan.AgriTermLoanInsuranceTO">
        <property name="insuranceDetails" column="TYPE_OF_INSURANCE"/>
        <property name="insurnaceUnderScheme" column="INSURANCE_UNDER_SCHEME"/>
        <property name="insuranceCompany" column="INSURANCE_COMP_NAME"/>
        <property name="address" column="ADDRESS"/>
        <property name="phoneNo" column="PHONE_NO"/>
        <property name="policyNo" column="POLICY_NO"/>
        <property name="policyDt" column="INS_ISSUE_DT"/>
        <property name="expiryDt" column="INS_TO_DT"/>
        <property name="fromAppliedDt" column="INS_FROM_DT"/>
        <property name="policyAmt" column="INSURNACE_AMT"/>
        <property name="premiumAmt" column="PREMIUM_AMT"/>
        <property name="riskNature" column="NATURE_OF_RISK"/>
        <property name="debitProdType" column="DEBIT_PROD_TYPE"/>
        <property name="debitProdId" column="DEBIT_PROD_ID"/>
        <property name="debitAcctNum" column="DEBIT_ACCT_NO"/>
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="status" column="STATUS"/>
        <property name="slno" column="SLNO"/>
		
    </result-map>
       
        
    <mapped-statement name="getSelectAgriTermLoanInsuranceTO" result-map="getAgriTermLoanInsurance" >
        SELECT * FROM AGRI_LOANS_INSURANCE
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
        ORDER BY SLNO
    </mapped-statement>

        
        <!--                                    inspectiondetails started                    -->
    <mapped-statement name="insertAgriInspectionTO" inline-parameters="true">
        INSERT INTO AGRI_LOANS_INSPECTION_DETAILS
        (ACCT_NUM,TYPE_OF_INSPECTION,INSPECTION_DT, INSPECTION_DETAILS,INSPECT_BY,AREA_OBSERVATION,SLNO,STATUS)
        VALUES(#acctNum:VARCHAR#,#typeOfInspection:VARCHAR#,#dateOfInspection:DATE#,#inspectionDetails:VARCHAR#,
        #inspectBy:VARCHAR#,#areaInspectObservation:VARCHAR#,#slno:VARCHAR#,#status:VARCHAR#)        
    </mapped-statement>
        
    <result-map name="getAgriTermLoanInspection" class="com.see.truetransact.transferobject.termloan.agritermloan.agrinewdetails.AgriInspectionTO">
        <property name="typeOfInspection" column="TYPE_OF_INSPECTION"/>
        <property name="dateOfInspection" column="INSPECTION_DT"/>
        <property name="inspectBy" column="INSPECT_BY"/>
        <property name="inspectionDetails" column="INSPECTION_DETAILS"/>
        <property name="areaInspectObservation" column="AREA_OBSERVATION"/>
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="status" column="STATUS"/>
        <property name="slno" column="SLNO"/>
		
    </result-map>
       
        
    <mapped-statement name="getSelectAgriInspectionTO" result-map="getAgriTermLoanInspection" >
        SELECT * FROM AGRI_LOANS_INSPECTION_DETAILS
        WHERE ACCT_NUM = #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY SLNO
    </mapped-statement>
        
    <mapped-statement name="updateAgriInspectionTO" inline-parameters="true">
        UPDATE AGRI_LOANS_INSPECTION_DETAILS SET
        TYPE_OF_INSPECTION=#typeOfInspection:VARCHAR#,
        INSPECTION_DT=#dateOfInspection:DATE#,
        INSPECT_BY=#inspectBy:VARCHAR#,
        INSPECTION_DETAILS=#inspectionDetails:VARCHAR#,
        AREA_OBSERVATION=#areaInspectObservation:VARCHAR#,
        STATUS=#status:VARCHAR#    WHERE 
        SLNO=#slno:VARCHAR#   AND        
        ACCT_NUM=#acctNum:VARCHAR#
    </mapped-statement>
        
                
    <mapped-statement name="viewAgriChargesDetails" result-class="java.util.HashMap"> 
        SELECT DISTINCT(ACT_NUM) as ACCOUNTNO,PROD_TYPE ,get_cust_name(C.CUST_ID) AS "CUSTOMERNAME",LFD.PROD_ID FROM AGRI_LOANS_ACCT_CHARGE_DETAILS LCD,AGRI_LOANS_FACILITY_DETAILS LFD,
        AGRI_LOANS_BORROWER LB,CUSTOMER C
        WHERE LFD.ACCT_NUM=LCD.ACT_NUM AND LCD.STATUS !='DELETED' AND LFD.STATUS !='DELETED' AND LFD.ACCT_STATUS!='CLOSED'
        AND LFD.BORROW_NO=LB.BORROW_NO AND LB.CUST_ID=C.CUST_ID
    </mapped-statement>
        
    <mapped-statement name="getAgriChargeDetailsforUpdate" result-class="java.util.HashMap">
        SELECT ACT_NUM, NVL(AMOUNT,0)-NVL(PAID_AMT,0) AS PAYABLE_AMT,PAID_AMT,CHARGE_TYPE,CHARGE_NO FROM AGRI_LOANS_ACCT_CHARGE_DETAILS WHERE ACT_NUM=#ACT_NUM# AND
        NVL(PAID_AMT,0)!=NVL(AMOUNT,0) AND STATUS !='DELETED' AND CHARGE_TYPE=#CHARGE_TYPE:VARCHAR# ORDER BY CHARGE_NO
    </mapped-statement>
        
    <mapped-statement name="updateAgriChargeDetails" result-class="java.util.HashMap">
        UPDATE AGRI_LOANS_ACCT_CHARGE_DETAILS SET
        PAID_AMT=#PAID_AMT:NUMERIC#
        WHERE CHARGE_TYPE=#CHARGE_TYPE:VARCHAR# AND CHARGE_NO=#CHARGE_NO:NUMERIC#
        AND ACT_NUM=#ACT_NUM:VARCHAR#
    </mapped-statement> 
        
    <mapped-statement name="viewAgriChargesDetailsForAuthorize" result-class="java.util.HashMap"> 
           <!-- SELECT ACT_NUM as ACCOUNTNO,PROD_TYPE,PROD_ID,CHARGE_TYPE,CHARGE_DATE,AMOUNT,AUTHORIZE_STATUS FROM AGRI_LOANS_ACCT_CHARGE_DETAILS WHERE AUTHORIZE_STATUS IS NULL--> <!--AND 
            STATUS !='DELETED'-->
        SELECT ACT_NUM as ACCOUNTNO,PROD_TYPE,LACD.PROD_ID,CHARGE_TYPE,CHARGE_DATE,AMOUNT,LACD.AUTHORIZE_STATUS ,
        get_cust_name(C.CUST_ID) AS "CUSTOMERNAME"
        FROM AGRI_LOANS_ACCT_CHARGE_DETAILS LACD,AGRI_LOANS_FACILITY_DETAILS LFD ,AGRI_LOANS_BORROWER LB ,CUSTOMER C WHERE
        LACD.AUTHORIZE_STATUS IS NULL
        AND LFD.ACCT_STATUS !='CLOSED' AND LFD.STATUS !='DELETED' AND LFD.BORROW_NO=LB.BORROW_NO AND 
        LB.CUST_ID=C.CUST_ID AND LFD.ACCT_NUM=LACD.ACT_NUM
    </mapped-statement>
        
    <mapped-statement name="updateAgriAuthorizeDetail" inline-parameters="true"> 
        UPDATE AGRI_LOANS_ACCT_CHARGE_DETAILS SET
        AUTHORIZE_BY=#AUTHORIZE_BY:VARCHAR#,
        AUTHORIZE_DT=#AUTHORIZE_DATE:DATE#,
        AUTHORIZE_STATUS=#AUTHORIZE_STATUS:VARCHAR#
        WHERE ACT_NUM=#ACT_NUM:VARCHAR# AND AUTHORIZE_STATUS IS NULL <!--AND STATUS !='DELETED'-->
    </mapped-statement>
        
    <mapped-statement name="getAgriChargeDetails" result-class="java.util.HashMap" >
        SELECT SUM (NVL(AMOUNT,0)-NVL(PAID_AMT,0)) AS CHARGE_AMT,CHARGE_TYPE FROM AGRI_LOANS_ACCT_CHARGE_DETAILS WHERE ACT_NUM=#ACT_NUM:VARCHAR#
        AND STATUS !='DELETED' AND AUTHORIZE_STATUS='AUTHORIZED'
        GROUP BY CHARGE_TYPE
    </mapped-statement>
        
    <mapped-statement name="getAgriDepositLienHolderName" result-class="java.util.LinkedHashMap" >
        SELECT get_cust_name(C.CUST_ID) AS "NAME"  FROM CUSTOMER C
        WHERE EXISTS (SELECT CUST_ID FROM DEPOSIT_ACINFO DA WHERE CUST_ID = C.CUST_ID AND
        EXISTS (SELECT DEPOSIT_NO FROM DEPOSIT_LIEN WHERE DEPOSIT_NO = DA.DEPOSIT_NO 
        AND LIEN_AC_NO = #ACCT_NO:VARCHAR#))
 
    </mapped-statement>
        
    <dynamic-mapped-statement name="getPendingTransactionATL" result-class="java.util.LinkedHashMap" >
        SELECT LINK_BATCH_ID FROM ALL_TRANS_TL WHERE  TRANS_DT=#TRANS_DT:DATE# AND  STATUS !='DELETED'  
        AND INITIATED_BRANCH = #INITIATED_BRANCH:VARCHAR#
        AND (AUTHORIZE_STATUS NOT IN('AUTHORIZED','REJECTED' ) OR  AUTHORIZE_STATUS IS NULL)
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="BATCH_ID">
                    BATCH_ID!=#BATCH_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            
            <isParameterPresent>
                <isNotNull prepend="AND" property="PROD_ID">
                    PROD_ID=#PROD_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        AND  LINK_BATCH_ID=#LINK_BATCH_ID:VARCHAR#  AND 
        TRANS_TYPE='CREDIT'
    </dynamic-mapped-statement>
        
    <mapped-statement name="getAgriLoanRepayedDetails" result-class="java.util.HashMap" >
        SELECT SFD.AVAILABLE_BALANCE "AMOUNT", SFD.EXCESS_AMT "EXCESS_AMOUNT", SFD.PROD_ID, SFD.LOAN_BALANCE_PRINCIPAL, 
        DECODE(SFD.LAST_REPAY_DT, NULL, (SELECT DISBURSEMENT_DT FROM AGRI_LOANS_DISBURSEMENT
        WHERE ACT_NUM = #ACCT_NUM:VARCHAR# AND STATUS != 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED'), 
        SFD.LAST_REPAY_DT) AS LAST_REPAY_DT , SFD.INT_GET_FROM, LB.CATEGORY, LSD.LIMIT, LSD.FROM_DT    
        FROM AGRI_LOANS_FACILITY_DETAILS SFD, AGRI_LOANS_BORROWER LB, AGRI_LOANS_SANCTION_DETAILS LSD   
        WHERE 
        SFD.ACCT_NUM = #ACCT_NUM:VARCHAR# AND 
        LB.BORROW_NO = SFD.BORROW_NO AND 
        LSD.BORROW_NO = SFD.BORROW_NO AND 
        SFD.SANCTION_NO = LSD.SANCTION_NO AND 
        SFD.SL_NO = LSD.SL_NO AND 
        (SFD.STATUS = 'CREATED' OR SFD.STATUS = 'MODIFIED') 
    </mapped-statement>
        
    <dynamic-mapped-statement name="getSelectAgriTermLoanAuthorizeTOList" result-class="java.util.LinkedHashMap" >
        SELECT FD.PROD_ID,  FD.BORROW_NO, FD.ACCT_NUM, FD.SANCTION_NO, get_cust_name(CUST.CUST_ID) AS Name,
        FD.AUTHORIZE_BY_1, FD.AUTHORIZE_STATUS_1, FD.AUTHORIZE_BY_2, FD.AUTHORIZE_STATUS_2 
        FROM AGRI_LOANS_BORROWER LB, AGRI_LOANS_FACILITY_DETAILS "FD", CUSTOMER CUST 
        WHERE LB.CUST_ID = CUST.CUST_ID AND LB.BORROW_NO = FD.BORROW_NO 
        AND FD.STATUS NOT IN ('DELETED') AND 
        FD.BRANCH_ID = #BRANCH_ID:VARCHAR# AND 
        (DECODE((SELECT BEHAVES_LIKE FROM AGRILOANS_PRODUCT WHERE STATUS IN ('CREATED', 'MODIFIED') AND PROD_ID = FD.PROD_ID), 
        'AOD', 1, 
        (DECODE((SELECT BEHAVES_LIKE FROM AGRILOANS_PRODUCT WHERE STATUS IN ('CREATED', 'MODIFIED') AND PROD_ID = FD.PROD_ID), 
        'ACC', 1,(SELECT COUNT(ACCT_NUM) FROM AGRI_LOANS_REPAY_SCHEDULE WHERE ACCT_NUM = FD.ACCT_NUM AND STATUS IN ('CREATED', 'MODIFIED'))))) > 0) 
        AND (FD.STATUS_BY != #STATUS_BY:VARCHAR# AND 
        (FD.AUTHORIZE_BY_1 IS NULL OR FD.AUTHORIZE_BY_1 != #STATUS_BY:VARCHAR#)) AND 
            <!--(FD.AUTHORIZE_BY_2 IS NULL  OR FD.AUTHORIZE_BY_2 != #STATUS_BY#)))
            AND -->cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y', HIERARCHY_ID, HIERARCHY_ID + 1)
        FROM USER_MASTER UM, ROLE_MASTER RM 
        WHERE RM.ROLE_ID = UM.USER_ROLE AND RM.GROUP_ID=UM.USER_GROUP AND UM.USER_ID = FD.STATUS_BY)
        <dynamic>
            <isEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (FD.AUTHORIZE_STATUS_1 = 'EXCEPTION') <!--OR FD.AUTHORIZE_STATUS_2 = 'EXCEPTION' --> 
            </isEqual>
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (FD.AUTHORIZE_STATUS_1 IS NULL OR 
                FD.AUTHORIZE_STATUS_1 NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
                    <!--     OR 
                         (FD.AUTHORIZE_STATUS_2 IS NULL OR 
                         FD.AUTHORIZE_STATUS_2 NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION')))-->
            </isNotEqual>
        </dynamic>
        AND  NOT EXISTS  <!-- The following 3 lines added to exclude the LTD LOANS__ -->
        (SELECT BORROW_NO FROM AGRI_LOANS_FACILITY_DETAILS WHERE PROD_ID IN 
        (SELECT PROD_ID FROM LOANS_PRODUCT WHERE BEHAVES_LIKE = 'AGRI_LOANS_AGAINST_DEPOSITS')AND BORROW_NO=LB.BORROW_NO)
    </dynamic-mapped-statement>

         <!-- The following mapped statement added to display only the LTD LOANS_ For Authorization -->
    <dynamic-mapped-statement name="getSelectAgriTermLoanAuthorizeTOListForLTD" result-class="java.util.LinkedHashMap" >
        SELECT FD.PROD_ID, DL.DEPOSIT_NO, FD.BORROW_NO, FD.ACCT_NUM, FD.SANCTION_NO, get_cust_name(CUST.CUST_ID) AS Name,
        FD.AUTHORIZE_BY_1, FD.AUTHORIZE_STATUS_1, FD.AUTHORIZE_BY_2, FD.AUTHORIZE_STATUS_2 
        FROM AGRI_LOANS_BORROWER LB, AGRI_LOANS_FACILITY_DETAILS "FD", CUSTOMER CUST , DEPOSIT_LIEN "DL"
        WHERE LB.CUST_ID = CUST.CUST_ID AND LB.BORROW_NO = FD.BORROW_NO AND
        DL.LIEN_AC_NO=FD.ACCT_NUM
        AND FD.STATUS NOT IN ('DELETED') AND 
        FD.BRANCH_ID = #BRANCH_ID:VARCHAR# AND 
        (FD.STATUS_BY != #STATUS_BY:VARCHAR# AND 
        (FD.AUTHORIZE_BY_1 IS NULL OR FD.AUTHORIZE_BY_1 != #STATUS_BY:VARCHAR#)) AND 
            <!--(FD.AUTHORIZE_BY_2 IS NULL  OR FD.AUTHORIZE_BY_2 != #STATUS_BY#)))
            AND -->cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y', HIERARCHY_ID, HIERARCHY_ID + 1)
        FROM USER_MASTER UM, ROLE_MASTER RM 
        WHERE RM.ROLE_ID = UM.USER_ROLE AND RM.GROUP_ID=UM.USER_GROUP AND UM.USER_ID = FD.STATUS_BY)
        <dynamic>
            <isEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (FD.AUTHORIZE_STATUS_1 = 'EXCEPTION' <!--OR FD.AUTHORIZE_STATUS_2 = 'EXCEPTION' -->) 
            </isEqual>
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                ((FD.AUTHORIZE_STATUS_1 IS NULL OR 
                FD.AUTHORIZE_STATUS_1 NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
                    <!--     OR 
                         (FD.AUTHORIZE_STATUS_2 IS NULL OR 
                         FD.AUTHORIZE_STATUS_2 NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))-->)
            </isNotEqual>
        </dynamic>
        AND EXISTS  
        (SELECT BORROW_NO FROM AGRI_LOANS_FACILITY_DETAILS LFD WHERE  EXISTS 
        (SELECT PROD_ID FROM LOANS_PRODUCT WHERE BEHAVES_LIKE = 'AGRI_LOANS_AGAINST_DEPOSITS' AND LFD.PROD_ID=PROD_ID)AND LB.BORROW_NO=BORROW_NO)
    </dynamic-mapped-statement>
        
    <mapped-statement name="getAgriBorrowerTabCustFields" result-class="java.util.LinkedHashMap" >
        SELECT C.NETWORTH, C.RISK_RATING, C.CR_AVAILED_SINCE, DECODE(CUST_TYPE, 'INDIVIDUAL', C.PRIMARY_OCCUPATION, CO.NATURE_OF_BUSINESS) AS "BUSINESS", 
        NVL((SELECT MIN(FROM_DT) FROM CUST_HISTORY WHERE CUST_ID = C.CUST_ID AND RELATIONSHIP='ACCT_HOLDER'), #BRANCH_CURRENT_DT:DATE#) AS "DEALING_WITH_BANK_SINCE", 
        C.NETWORTH_AS_ON 
        FROM CUSTOMER C, CORP_CUST_FINANCE CO
        WHERE C.CUST_ID = CO.CUST_ID(+) AND C.CUST_ID = #CUST_ID:VARCHAR#
    </mapped-statement>
        <!--                            agrisubsidy to                 -->
    <mapped-statement name="getAgriAdvPaidDetails" result-class="java.util.HashMap" >
        SELECT PRINCIPLE,INTEREST ,PENAL FROM AGRIADV_TRANS_DETAILS WHERE 
        TRANS_ID=#TRANS_ID# AND  ACT_NUM=#ACCOUNTNO:VARCHAR# AND
        TRANS_DT = #TRANS_DT:DATE# AND
        BRANCH_ID = #BRANCH_ID:VARCHAR#
    </mapped-statement>

    <mapped-statement name="insertAgriLoanSubsidyATL" inline-parameters="true">
        INSERT INTO AGRI_LOANS_SUBSIDY_DETAILS
        (SLNO, ACCT_NUM, TYPE_OF_SUBSIDY, DEPOSIT_PRODID, DEPOSIT_NO, SUBSIDY_DT, SUBSIDY_FR_GOVAGENCY, SUBSIDY_AMT,ADJUST_AMT, SUBSIDY_REF_AMT, REFUND_DT, OUTSTANDING_BALANCE,  STATUS
        ) VALUES (
        #slno:NUMERIC#, #acctNum:VARCHAR#, #typeOfSubSidy:VARCHAR#, #depositProdId:VARCHAR#, #depositNo:VARCHAR#, #subSidyDt:TIMESTAMP#, #recivedFrom:VARCHAR#, #subSidyAmt:VARCHAR#, #amtAdjusted:VARCHAR#, #amtRefunded:VARCHAR#, #refundDate:TIMESTAMP#, #outStandingAmt:VARCHAR#, #status:VARCHAR#)
    </mapped-statement>

	<!-- Use TermLoanAuthorizedSignatoryTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateAgriLoanSubsidyATL" inline-parameters="true">
        UPDATE AGRI_LOANS_SUBSIDY_DETAILS SET 
        TYPE_OF_SUBSIDY	= #typeOfSubSidy:VARCHAR#,
        DEPOSIT_PRODID	=#depositProdId:VARCHAR#,
        DEPOSIT_NO	=#depositNo:VARCHAR#,
        SUBSIDY_DT	=#subSidyDt:TIMESTAMP#,
        SUBSIDY_FR_GOVAGENCY=#recivedFrom:VARCHAR#,
        SUBSIDY_AMT	=#subSidyAmt:VARCHAR#,
        ADJUST_AMT	=#amtAdjusted:VARCHAR#,
        SUBSIDY_REF_AMT=#amtRefunded:VARCHAR#, 
        REFUND_DT=#refundDate:TIMESTAMP#,
        OUTSTANDING_BALANCE=#outStandingAmt:VARCHAR#,
        SLNO	=#slno:NUMERIC#,
        STATUS=#status:VARCHAR#
        WHERE  ACCT_NUM= #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanAuthorizedSignatoryTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriLoanSubsidyATL" inline-parameters="true">
		<!-- DELETE FROM AGRI_LOANS_AUTHORIZE 
		WHERE -->
        UPDATE AGRI_LOANS_SUBSIDY_DETAILS SET 
        STATUS = #status:VARCHAR#
        WHERE ACCT_NUM= #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanAuthorizedSignatoryTO object (JavaBean) properties -->
    <result-map name="getAgriLoanSubsidyTOResultATL" class="com.see.truetransact.transferobject.termloan.agritermloan.agrisubsidydetails.AgriSubSidyTO">
                          
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="typeOfSubSidy" column="TYPE_OF_SUBSIDY"/>
        <property name="depositProdId" column="DEPOSIT_PRODID"/>
        <property name="depositNo" column="DEPOSIT_NO"/>
        <property name="subSidyDt" column="SUBSIDY_DT"/>
        <property name="recivedFrom" column="SUBSIDY_FR_GOVAGENCY"/>
        <property name="subSidyAmt" column="SUBSIDY_AMT"/>
        <property name="amtAdjusted" column="ADJUST_AMT"/>
        <property name="amtRefunded" column="SUBSIDY_REF_AMT"/>
        <property name="refundDate" column="REFUND_DT"/>
        <property name="outStandingAmt" column="OUTSTANDING_BALANCE"/>
        <property name="slno" column="SLNO"/>
        <property name="status" column="STATUS"/>
    </result-map>
                                
    <mapped-statement name="getSelectAgriLoanSubsidyATL" result-map="getAgriLoanSubsidyTOResultATL" >
        SELECT * FROM AGRI_LOANS_SUBSIDY_DETAILS 
        WHERE ACCT_NUM=  #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY SLNO
    </mapped-statement>
        
        <!--                            agrivalutionto                 -->

    <mapped-statement name="insertAgriLoanValutionATL" inline-parameters="true">
        INSERT INTO AGRI_LOANS_PROPVAL_DETAILS
        (SLNO, ACCT_NUM, TYPE_OF_PROPERTY, VALUTION_DT,VALUTION_AMT, VALUATED_BY,  REMARKS, STATUS
        ) VALUES (
        #slno:NUMERIC#, #acctNum:VARCHAR#, #propertyType:VARCHAR#, #valutionDt:TIMESTAMP#, #valutionAmt:NUMERIC#, #valuatedBy:VARCHAR#,
        #valutionRemarks:VARCHAR#, #status:VARCHAR#)
    </mapped-statement>

	<!-- Use TermLoanAuthorizedSignatoryTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
   
    <mapped-statement name="updateAgriLoanValutionATL" inline-parameters="true">
        UPDATE AGRI_LOANS_PROPVAL_DETAILS SET 
        TYPE_OF_PROPERTY =#propertyType:VARCHAR#,	
        VALUTION_DT	=#valutionDt:TIMESTAMP#,
        VALUTION_AMT	=#valutionAmt:NUMERIC#,
        VALUATED_BY	=#valuatedBy:VARCHAR#,
        REMARKS         =#valutionRemarks:VARCHAR#,
        SLNO            =#slno:NUMERIC#,
        STATUS          =#status:VARCHAR#
        WHERE  ACCT_NUM= #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use TermLoanAuthorizedSignatoryTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteAgriLoanValutionATL" inline-parameters="true">
		<!-- DELETE FROM AGRI_LOANS_AUTHORIZE 
		WHERE -->
        UPDATE AGRI_LOANS_PROPVAL_DETAILS SET 
        STATUS = #status:VARCHAR#
        WHERE ACCT_NUM= #acctNum:VARCHAR# AND SLNO = #slno:NUMERIC# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED')
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to TermLoanAuthorizedSignatoryTO object (JavaBean) properties -->
    <result-map name="getAgriLoanValutionTOResultATL" class="com.see.truetransact.transferobject.termloan.agritermloan.agrisubsidydetails.AgriValutionTO">
        <property name="acctNum" column="ACCT_NUM"/>
        <property name="propertyType" column="TYPE_OF_PROPERTY"/>
        <property name="valutionDt" column="VALUTION_DT"/>
        <property name="valutionAmt" column="VALUTION_AMT"/>
        <property name="valuatedBy" column="VALUATED_BY"/>
        <property name="valutionRemarks" column="REMARKS"/>
        <property name="slno" column="SLNO"/>
        <property name="status" column="STATUS"/>
    </result-map>
        
    <mapped-statement name="getSelectAgriLoanValutionATL" result-map="getAgriLoanValutionTOResultATL" >
        SELECT * FROM AGRI_LOANS_PROPVAL_DETAILS 
        WHERE ACCT_NUM=  #value:VARCHAR# AND (STATUS = 'CREATED' OR STATUS = 'MODIFIED') ORDER BY SLNO
    </mapped-statement>
        
        
    <mapped-statement name="getAgriCorpMainCustDetails" result-class="java.util.LinkedHashMap" >
        SELECT get_cust_name(C.CUST_ID) AS "NAME",  C.COMM_ADDR_TYPE, 
        CCF.COMP_REG_NO, CCF.ESTABLISH_DT, CA.STREET, CA.AREA, CA.CITY, CA.STATE, CA.PIN_CODE, 
        CA.COUNTRY_CODE, CP.AREA_CODE || '-' || CP.PHONE_NUMBER AS "PHONE_NUMBER"  
        FROM CUSTOMER C, CORP_CUST_FINANCE CCF, CUST_ADDR CA, CUST_PHONE CP , CUSTOMER AC 
        WHERE C.CUST_ID = AC.AUTHORIZE_CUST_ID
        AND AC.CUST_ID =  #CUST_ID:VARCHAR# 
        AND AC.CUST_ID = CCF.CUST_ID
        AND C.COMM_ADDR_TYPE = CA.ADDR_TYPE 
        AND CA.CUST_ID = C.CUST_ID AND (CA.STATUS = 'CREATED' OR CA.STATUS = 'MODIFIED')
        AND CP.CUST_ID = C.CUST_ID AND (CP.STATUS = 'CREATED' OR CP.STATUS = 'MODIFIED') 
    </mapped-statement>
        
    <dynamic-mapped-statement name="getSelectAgriLoanAccInfoList" result-class="java.util.LinkedHashMap" >
            <!--SELECT CUSTOMER.CUST_ID AS "CUSTOMER ID",
            get_cust_name(C.CUST_ID) AS "Name",
            CUSTOMER.CUST_TYPE_ID, CUSTOMER.CUST_TYPE, CUSTOMER.BRANCH_CODE 
            FROM CUSTOMER, CUST_ADDR
            WHERE (CUSTOMER.STATUS = 'CREATED' OR CUSTOMER.STATUS = 'MODIFIED') 
            AND CUSTOMER.AUTHORIZE_STATUS='AUTHORIZED'
            AND (CUSTOMER.CUSTOMER_STATUS NOT IN ('DECEASED') OR  CUSTOMER.CUSTOMER_STATUS IS NULL)
            AND (CUST_ADDR.CUST_ID = CUSTOMER.CUST_ID)
            AND CUSTOMER.BRANCH_CODE = #BRANCH_CODE# 
            AND (CUSTOMER.COMM_ADDR_TYPE = CUST_ADDR.ADDR_TYPE) 
            AND (CUST_ADDR.STATUS = 'CREATED' OR CUST_ADDR.STATUS = 'MODIFIED')
            AND CUSTOMER.CUST_ID NOT IN 
                (SELECT CUST_ID FROM AGRI_LOANS_BORROWER WHERE STATUS IN ('CREATED', 'MODIFIED')) -->                
            <!--SELECT CUSTOMER.CUST_ID AS "CUSTOMER ID", get_cust_name(C.CUST_ID) AS "Name",
            CUSTOMER.CUST_TYPE_ID, AM.ACT_NUM, DA.DEPOSIT_NO, SA.SHARE_ACCT_NO,
            (SELECT LOOKUP_DESC FROM LOOKUP_MASTER WHERE 
            (LOOKUP_ID = 'CORPORATE.CUSTOMER_TYPE' OR LOOKUP_ID = 'CUSTOMER.TYPE') AND 
            LOOKUP_REF_ID = CUSTOMER.CUST_TYPE) AS CUST_TYPE, CUSTOMER.BRANCH_CODE FROM 
            CUSTOMER, CUST_ADDR, ACT_MASTER AM, DEPOSIT_ACINFO DA, SHARE_ACCT SA WHERE 
            CUSTOMER.CUST_ID = AM.CUST_ID(+) AND
            CUSTOMER.CUST_ID = DA.CUST_ID(+) AND
            CUSTOMER.CUST_ID = SA.CUST_ID(+) AND
            (CUSTOMER.STATUS = 'CREATED' OR CUSTOMER.STATUS = 'MODIFIED')
            AND CUSTOMER.AUTHORIZE_STATUS='AUTHORIZED' AND (CUSTOMER.CUSTOMER_STATUS NOT IN ('DECEASED')
            OR  CUSTOMER.CUSTOMER_STATUS IS NULL) AND (CUST_ADDR.CUST_ID = CUSTOMER.CUST_ID)  AND 
            CUSTOMER.BRANCH_CODE = #BRANCH_CODE# AND (CUSTOMER.COMM_ADDR_TYPE = CUST_ADDR.ADDR_TYPE) AND 
            (CUST_ADDR.STATUS = 'CREATED' OR CUST_ADDR.STATUS = 'MODIFIED') AND NOT EXISTS
            (SELECT CUST_ID FROM AGRI_LOANS_BORROWER WHERE STATUS IN ('CREATED', 'MODIFIED') AND  CUSTOMER.CUST_ID=AGRI_LOANS_BORROWER.CUST_ID)-->
           <!-- AND (CUSTOMER.MEMBERSHIP_CLASS !='NONE')     -->           <!--OR CUSTOMER.MEMBERSHIP_CLASS IS NOT NULL-->
           <!-- AND   SHARE_ACCT.CUST_ID=CUSTOMER.CUST_ID AND (NOT_ELIGIBLE_LOAN='N' 
            OR NOT_ELIGIBLE_DT &lt; #CURR_DT# OR NOT_ELIGIBLE_DT IS NULL)
            AND SHARE_ACCT.STATUS !='DELETED' AND SHARE_ACCT.AUTHORIZE = 'AUTHORIZED' -->
           <!-- SELECT CUSTOMER.CUST_ID AS "CUSTOMER ID", get_cust_name(C.CUST_ID) AS "Name", CUSTOMER.CUST_TYPE_ID, AM.ACT_NUM, DA.DEPOSIT_NO,  (SELECT 
            LOOKUP_DESC FROM LOOKUP_MASTER WHERE (LOOKUP_ID = 'CORPORATE.CUSTOMER_TYPE' OR LOOKUP_ID = 'CUSTOMER.TYPE') AND 
            LOOKUP_REF_ID = CUSTOMER.CUST_TYPE) AS CUST_TYPE, CUSTOMER.BRANCH_CODE FROM CUSTOMER, CUST_ADDR, ACT_MASTER AM, 
            DEPOSIT_ACINFO DA,  WHERE CUSTOMER.CUST_ID = AM.CUST_ID(+) AND CUSTOMER.CUST_ID = DA.CUST_ID(+) AND 
             (CUSTOMER.STATUS = 'CREATED' OR CUSTOMER.STATUS = 'MODIFIED') AND 
            CUSTOMER.AUTHORIZE_STATUS='AUTHORIZED' AND (CUSTOMER.CUSTOMER_STATUS NOT IN ('DECEASED') OR 
            CUSTOMER.CUSTOMER_STATUS IS NULL) AND (CUST_ADDR.CUST_ID = CUSTOMER.CUST_ID) AND CUSTOMER.BRANCH_CODE = #BRANCH_CODE# AND 
            AM.AUTHORIZATION_STATUS='AUTHORIZED' AND DA.AUTHORIZE_STATUS='AUTHORIZED' AND 
            (CUSTOMER.COMM_ADDR_TYPE = CUST_ADDR.ADDR_TYPE) AND (CUST_ADDR.STATUS = 'CREATED' OR CUST_ADDR.STATUS = 'MODIFIED') 
            AND NOT EXISTS (SELECT CUST_ID FROM AGRI_LOANS_BORROWER LB, AGRI_LOANS_FACILITY_DETAILS LFD WHERE 
            LB.STATUS IN ('CREATED', 'MODIFIED') AND LB.BORROW_NO=LFD.BORROW_NO AND LFD.STATUS IN ('CREATED', 'MODIFIED')
            AND LFD.AUTHORIZE_STATUS_1='AUTHORIZED' AND CUSTOMER.CUST_ID=LB.CUST_ID AND PROD_ID NOT IN 
            (SELECT PROD_ID FROM AGRILOANS_PRODUCT WHERE BEHAVES_LIKE = 'AGRI_LOANS_AGAINST_DEPOSITS'))    -->
        SELECT CUSTOMER.CUST_ID AS "CUSTOMER ID",get_cust_name(CUSTOMER.CUST_ID) AS "Name", CUSTOMER.CUST_TYPE_ID, AM.ACT_NUM, 
        DA.DEPOSIT_NO,  (SELECT   LOOKUP_DESC FROM LOOKUP_MASTER WHERE
        (LOOKUP_ID = 'CORPORATE.CUSTOMER_TYPE' OR LOOKUP_ID = 'CUSTOMER.TYPE') AND 
        LOOKUP_REF_ID = CUSTOMER.CUST_TYPE) AS CUST_TYPE, CUSTOMER.BRANCH_CODE FROM 
        CUSTOMER, CUST_ADDR, ACT_MASTER AM,              DEPOSIT_ACINFO DA WHERE
        CUSTOMER.CUST_ID = AM.CUST_ID(+) AND CUSTOMER.CUST_ID = DA.CUST_ID(+)AND (CUSTOMER.STATUS = 'CREATED' OR 
        CUSTOMER.STATUS = 'MODIFIED') AND              CUSTOMER.AUTHORIZE_STATUS='AUTHORIZED' AND 
        AM.AUTHORIZATION_STATUS='AUTHORIZED' AND DA.AUTHORIZE_STATUS='AUTHORIZED' AND 
        (CUSTOMER.CUSTOMER_STATUS NOT IN ('DECEASED') OR     CUSTOMER.CUSTOMER_STATUS IS NULL) 
        AND (CUST_ADDR.CUST_ID = CUSTOMER.CUST_ID) AND CUSTOMER.BRANCH_CODE =#BRANCH_CODE:VARCHAR# AND 
        (CUSTOMER.COMM_ADDR_TYPE = CUST_ADDR.ADDR_TYPE) AND
        (CUST_ADDR.STATUS = 'CREATED' OR CUST_ADDR.STATUS = 'MODIFIED')  
        AND NOT EXISTS (SELECT CUST_ID FROM AGRI_LOANS_BORROWER LB, AGRI_LOANS_FACILITY_DETAILS LFD WHERE
        LB.STATUS IN ('CREATED', 'MODIFIED') AND LB.BORROW_NO=LFD.BORROW_NO AND 
        LFD.STATUS IN ('CREATED', 'MODIFIED')  AND (LFD.AUTHORIZE_STATUS_1 IS NULL OR LFD.AUTHORIZE_STATUS_1!='REJECTED') AND 
        CUSTOMER.CUST_ID=LB.CUST_ID )          
        <dynamic>
            <isNotEmpty prepend=" AND CUSTOMER.CUST_ID NOT IN ( " property="CUSTOMER_ID">
                $CUSTOMER_ID$ )
            </isNotEmpty>
        </dynamic>
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CUST_ID">
                    CUSTOMER.CUST_ID=#CUST_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>

    <dynamic-mapped-statement name="getSelectAgriCustListForLTD" result-class="java.util.LinkedHashMap" >
        SELECT CUSTOMER.CUST_ID AS "CUSTOMER ID", get_cust_name(CUSTOMER.CUST_ID) AS "Name",
        CUSTOMER.CUST_TYPE_ID, AM.ACT_NUM, DA.DEPOSIT_NO, SA.SHARE_ACCT_NO,
        (SELECT LOOKUP_DESC FROM LOOKUP_MASTER WHERE 
        (LOOKUP_ID = 'CORPORATE.CUSTOMER_TYPE' OR LOOKUP_ID = 'CUSTOMER.TYPE') AND 
        LOOKUP_REF_ID = CUSTOMER.CUST_TYPE) AS CUST_TYPE, CUSTOMER.BRANCH_CODE FROM 
        CUSTOMER, CUST_ADDR, ACT_MASTER AM, DEPOSIT_ACINFO DA, SHARE_ACCT SA WHERE 
        CUSTOMER.CUST_ID = AM.CUST_ID(+) AND
        CUSTOMER.CUST_ID = DA.CUST_ID(+) AND
        CUSTOMER.CUST_ID = SA.CUST_ID(+) AND
        (CUSTOMER.STATUS = 'CREATED' OR CUSTOMER.STATUS = 'MODIFIED')
        AND CUSTOMER.AUTHORIZE_STATUS='AUTHORIZED' AND (CUSTOMER.CUSTOMER_STATUS NOT IN ('DECEASED')
        OR  CUSTOMER.CUSTOMER_STATUS IS NULL) AND (CUST_ADDR.CUST_ID = CUSTOMER.CUST_ID)  AND 
        CUSTOMER.BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND (CUSTOMER.COMM_ADDR_TYPE = CUST_ADDR.ADDR_TYPE) AND 
        (CUST_ADDR.STATUS = 'CREATED' OR CUST_ADDR.STATUS = 'MODIFIED') AND EXISTS
        (SELECT CUST_ID FROM DEPOSIT_ACINFO WHERE STATUS IN ('CREATED', 'MODIFIED') 
        AND DEPOSIT_STATUS != 'CLOSED' AND INITIATED_BRANCH = #BRANCH_CODE:VARCHAR# AND CUST_ID = CUSTOMER.CUST_ID)
        <dynamic>
            <isNotEmpty prepend=" AND CUSTOMER.CUST_ID NOT IN ( " property="CUSTOMER_ID">
                $CUSTOMER_ID$ )
            </isNotEmpty>
        </dynamic>
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CUST_ID">
                    CUSTOMER.CUST_ID=#CUST_ID:VARCHAR#
                </isNotNull>

            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>
    
        
    <result-map name="getAccountResultListATL" class="java.util.LinkedHashMap">
        <property name="AccountNo" column="ACT_NUM"/>
        <property name="CustomerName" column="CUSTOMER_NAME"/>
        <property name="Category" column="CATEGORY"/>
        <property name="Constitution" column="CONSTITUTION"/>
    </result-map>
    <mapped-statement name="Cash.getGuarantorAccountListATL" result-map="getAccountResultListATL" >
        SELECT
        LFD.ACCT_NUM as ACT_NUM, get_cust_name(CU.CUST_ID) AS CUSTOMER_NAME,
        LB.CATEGORY as CATEGORY, LB.CONSTITUTION 
        FROM AGRI_LOANS_BORROWER LB, CUSTOMER CU, AGRI_LOANS_FACILITY_DETAILS LFD
        WHERE LB.CUST_ID = CU.CUST_ID AND 
        CU.CUST_ID = #CUST_ID:VARCHAR# AND 
        LB.BORROW_NO = LFD.BORROW_NO AND 
        LFD.PROD_ID = #PROD_ID:VARCHAR# AND
        (LFD.ACCT_STATUS IN ('NEW','TRANSFER_IN', 'DECEASED', 'OPERATIONAL') or LFD.ACCT_STATUS is null) AND 
        LB.STATUS NOT IN ('DELETED') AND 
        LFD.STATUS NOT IN ('DELETED') AND 
        LFD.AUTHORIZE_STATUS_1 = 'AUTHORIZED' 
           <!-- LFD.AUTHORIZE_STATUS_2 = 'AUTHORIZED'-->
        ORDER BY LFD.ACCT_NUM
    </mapped-statement>
        
    <result-map name="getAccountResultListTD" class="java.util.LinkedHashMap">
        <property name="AccountNo" column="ACT_NUM"/>
        <property name="CustomerName" column="CUSTOMER_NAME"/>
        <property name="CustomerType" column="CUST_TYPE_ID"/>
        <property name="ProductType" column="TYPE"/>
        <property name="Amount" column="AMOUNT"/>
        <property name="Constitution" column="CONSTITUTION"/>
    </result-map>
        
    <result-map name="getAccountResultListAAD" class="java.util.LinkedHashMap">
        <property name="AccountNo" column="ACT_NUM"/>
        <property name="CustomerName" column="CUSTOMER_NAME"/>
        <property name="Category" column="CATEGORY"/>
        <property name="Constitution" column="CONSTITUTION"/>
    </result-map>
        
    <mapped-statement name="Cash.getGuarantorAccountListAAD" result-map="getAccountResultListAAD" >
        SELECT
        LFD.ACCT_NUM as ACT_NUM, get_cust_name(CU.CUST_ID) AS CUSTOMER_NAME,
        LB.CATEGORY as CATEGORY, LB.CONSTITUTION 
        FROM AGRI_LOANS_BORROWER LB, CUSTOMER CU, AGRI_LOANS_FACILITY_DETAILS LFD
        WHERE LB.CUST_ID = CU.CUST_ID AND 
        CU.CUST_ID = #CUST_ID:VARCHAR# AND 
        LB.BORROW_NO = LFD.BORROW_NO AND 
        LFD.PROD_ID = #PROD_ID:VARCHAR# AND
        (LFD.ACCT_STATUS IN ('NEW','TRANSFER_IN', 'DECEASED', 'OPERATIONAL') or LFD.ACCT_STATUS is null) AND 
        LB.STATUS NOT IN ('DELETED') AND 
        LFD.STATUS NOT IN ('DELETED') AND 
        LFD.AUTHORIZE_STATUS_1 = 'AUTHORIZED' 
            <!--LFD.AUTHORIZE_STATUS_2 = 'AUTHORIZED'-->
        ORDER BY LFD.ACCT_NUM
    </mapped-statement>
        
    <mapped-statement name="authorizeAgriTermLoan" result-class="java.util.HashMap">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET 
        AUTHORIZE_STATUS_1 = DECODE (AUTHORIZE_STATUS_1, NULL, DECODE(AUTHORIZE_STATUS_2, NULL, #AUTHORIZESTATUS:VARCHAR#), AUTHORIZE_STATUS_1),
            <!--AUTHORIZE_STATUS_2 = DECODE (AUTHORIZE_STATUS_2, NULL, DECODE(AUTHORIZE_STATUS_1, NULL, NULL, #AUTHORIZESTATUS#), AUTHORIZE_STATUS_2),-->
        AUTHORIZE_BY_1 = DECODE (AUTHORIZE_BY_1, NULL, DECODE(AUTHORIZE_BY_2, NULL, #USER_ID:VARCHAR#), AUTHORIZE_BY_1),
           <!-- AUTHORIZE_BY_2 = DECODE (AUTHORIZE_BY_2, NULL, DECODE(AUTHORIZE_BY_1, NULL, NULL, #USER_ID#), AUTHORIZE_BY_2),-->
        AUTHORIZE_DT_1 = DECODE (AUTHORIZE_DT_1, NULL, DECODE(AUTHORIZE_DT_2, NULL, #AUTHORIZEDT:TIMESTAMP#), AUTHORIZE_DT_1),
        AUTHORIZE_DT_2 = DECODE (AUTHORIZE_DT_2, NULL, DECODE(AUTHORIZE_DT_1, NULL, NULL, #AUTHORIZEDT:TIMESTAMP#), AUTHORIZE_DT_2)
        WHERE ACCT_NUM = #ACCT_NUM:VARCHAR#            
    </mapped-statement>
        
    <mapped-statement name="getProdLevelAgriOtherDetails" result-class="java.util.HashMap" >
        SELECT LPC.AC_CLOSING_CHRG, LPC.MISC_SERV_CHRG, LPS.ATM_CARD_ISSUED, LPS.CR_CARD_ISSUED, LPS.MOBILE_BANK_CLIENT, 
        APA.CHK_ALLOWED, APC.CHQBK_ISSUED_CHRG, APC.CHQBK_ISSUED_CHRG_PER, APS.DEBIT_CARD_ISSUED  
        FROM ADVANCES_PROD_ACPARAM APA, ADVANCES_PROD_CHARGES APC, ADVANCES_PROD_SPECIALITEM APS,
        AGRI_LOANS_PROD_CHARGES LPC, AGRI_LOANS_PROD_SPECIALITEM LPS, LOANS_PRODUCT LP  
        WHERE LP.PROD_ID = #PROD_ID:VARCHAR# AND LPS.PROD_ID = LP.PROD_ID 
        AND LPC.PROD_ID = LP.PROD_ID AND APA.PROD_ID = LP.PROD_ID 
        AND APC.PROD_ID = LP.PROD_ID AND APS.PROD_ID = LP.PROD_ID AND LP.STATUS != 'DELETED'
    </mapped-statement>
        
    <mapped-statement name="getAgriLoanAccCloseCharges" result-class="java.util.HashMap" >
        SELECT AC_CLOSING_CHRG   FROM AGRI_LOANS_PROD_CHARGES
        WHERE  PROD_ID=#PRODUCT_ID:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getProcPercentageATL" result-class="java.util.HashMap" >
        SELECT PROD_ID, PROC_CHRG_PER, PROC_CHRG FROM AGRI_LOANS_PROD_CHARGES WHERE PROC_CHRG='Y' AND 
        PROD_ID = (SELECT PROD_ID FROM AGRI_LOANS_FACILITY_DETAILS WHERE   ACCT_NUM = #ACT_NUM:VARCHAR#)
    </mapped-statement>
        
    <mapped-statement name="getOABalanceATLCustomer" result-class="java.util.HashMap" >
        SELECT PROD_ID, ACT_NUM, CLEAR_BALANCE FROM ACT_MASTER WHERE 
        CUST_ID = (SELECT CUST_ID FROM AGRI_LOANS_BORROWER WHERE
        BORROW_NO = (SELECT BORROW_NO FROM AGRI_LOANS_FACILITY_DETAILS WHERE
        ACCT_NUM = #ACT_NUM:VARCHAR#))
    </mapped-statement>
        
    <mapped-statement name="getAgriProcChargeAcHd" result-class="java.util.HashMap" >
        SELECT PROC_CHRG FROM AGRI_LOANS_PROD_ACHD WHERE 
        PROD_ID = #TL_PROD_ID:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getAgriClearBalance" result-class="java.util.HashMap" >
        SELECT CLEAR_BALANCE FROM AGRI_LOANS_FACILITY_DETAILS WHERE 
        ACCT_NUM = #ACT_NUM:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getAgriNPADate" result-class="java.util.HashMap" >
        SELECT MAX(TO_DATE) AS TO_DT FROM NPA_HISTORY WHERE ACT_NUM=#ACT_NUM:VARCHAR# <!--AND CURR_STATUS=#ASSET_STATUS#-->
    </mapped-statement>
        
    <mapped-statement name="updatAgrieclearBal" inline-parameters="true">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET LAST_INT_CALC_DT= #LAST_CALC_DT:DATE#  WHERE ACCT_NUM=#ACCOUNTNO:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="updateAgriRetrasPectiveDt" inline-parameters="true">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET RETRASPECTIVE_APP_DT= #UPDATE_RET_APP_DT:DATE#  WHERE ACCT_NUM=#ACCOUNTNO:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="updateAgriEMIlastIntCalc" inline-parameters="true">
        UPDATE AGRI_LOANS_FACILITY_DETAILS SET LAST_INT_CALC_DT=(SELECT INSTALLMENT_DT-1 FROM AGRI_LOANS_INSTALLMENT WHERE 
        INSTALLMENT_SLNO=#INSTALLMENT_NO:VARCHAR# AND STATUS !='DELETED' AND ACCT_NUM=#ACCT_NUM:VARCHAR# ) WHERE  ACCT_NUM=#ACCT_NUM:VARCHAR# 
    </mapped-statement>
        
    <mapped-statement name="getAgriAllLoanInstallment" result-class="java.util.HashMap" >
        SELECT INSTALLMENT_DT, PRINCIPAL_AMT,TOTAL_AMT FROM AGRI_LOANS_INSTALLMENT WHERE ACCT_NUM=#ACT_NUM:VARCHAR# AND STATUS !='DELETED'
        ORDER BY INSTALLMENT_SLNO
    </mapped-statement>
        
    <dynamic-mapped-statement name="getAgriPaidPrinciple" result-class="java.util.HashMap" >
        select sum(NVL(PRINCIPLE,0)) AS PRINCIPLE, sum(NVL(INTEREST,0)) AS INTEREST, sum(NVL(PENAL,0)) AS PENAL from AGRILOAN_TRANS_DETAILS where ACT_NUM=#ACT_NUM:VARCHAR# and (TRN_CODE='C*' OR TRN_CODE='OLG')
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="FROM_DT">
                    TRANS_DT BETWEEN #FROM_DT:DATE# AND #TO_DATE:DATE#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>
         
    <mapped-statement name ="getAgriEmiDue" result-class="java.util.HashMap">
        SELECT * FROM AGRI_LOANS_INSTALLMENT WHERE INSTALLMENT_DT &lt;=#CURR_DT:DATE# AND 
        ACCT_NUM=#ACCT_NUM:VARCHAR# AND IS_BALANCE IS NULL AND STATUS !='DELETED' ORDER BY INSTALLMENT_SLNO
    </mapped-statement>
         
    <dynamic-mapped-statement name="getAgriIntDetails" result-class="java.util.HashMap" >
            <!--SELECT A.DEBIT-B.CREDIT IBAL,A.DEBITPENAL-B.CREDITPENAL AS PBAL FROM (SELECT SUM(INTEREST) DEBIT ,SUM(PENAL) DEBITPENAL FROM LOAN_TRANS_DETAILS WHERE TRN_CODE = 'DI' AND ACT_NUM=#ACT_NUM#) A,
            (SELECT SUM(INTEREST) CREDIT,SUM(PENAL) CREDITPENAL FROM LOAN_TRANS_DETAILS WHERE TRN_CODE = 'C*' AND ACT_NUM=#ACT_NUM#) B -->
        SELECT IBAL ,TRANS_SLNO,TRN_CODE,PBAL,TRANS_DT,PRINCIPLE ,INTEREST,PENAL,PIBAL,EXPENSE,EBAL,NPA_INTEREST,NPA_INT_BAL,
        NPA_PENAL,NPA_PENAL_BAL,EXCESS_AMT FROM LOAN_TRANS_DETAILS WHERE TRANS_SLNO IN 
        (SELECT MAX(TRANS_SLNO) FROM LOAN_TRANS_DETAILS WHERE ACT_NUM = #ACT_NUM:VARCHAR#
            
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS  IN('AUTHORIZED')
                </isNotNull>
                  
            </isParameterPresent>
        </dynamic>
        )  AND ACT_NUM = #ACT_NUM:VARCHAR#
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS  IN('AUTHORIZED')
                </isNotNull>
            </isParameterPresent>
                
        </dynamic>
    </dynamic-mapped-statement>
          
          
          
    <dynamic-mapped-statement name="getAgriIntDetailsAD" result-class="java.util.HashMap" >
            <!--SELECT A.DEBIT-B.CREDIT IBAL,A.DEBITPENAL-B.CREDITPENAL AS PBAL FROM (SELECT SUM(INTEREST) DEBIT ,SUM(PENAL) DEBITPENAL FROM LOAN_TRANS_DETAILS WHERE TRN_CODE = 'DI' AND ACT_NUM=#ACT_NUM#) A,
            (SELECT SUM(INTEREST) CREDIT,SUM(PENAL) CREDITPENAL FROM LOAN_TRANS_DETAILS WHERE TRN_CODE = 'C*' AND ACT_NUM=#ACT_NUM#) B -->
        SELECT IBAL ,TRANS_SLNO,TRN_CODE,PBAL,TRANS_DT,PRINCIPLE ,INTEREST,PENAL,PIBAL,EXPENSE,EBAL,NPA_INTEREST,NPA_INT_BAL,
        NPA_PENAL,NPA_PENAL_BAL,EXCESS_AMT FROM AGRIADV_TRANS_DETAILS WHERE TRANS_SLNO IN 
        (SELECT MAX(TRANS_SLNO) FROM AGRIADV_TRANS_DETAILS WHERE ACT_NUM = #ACT_NUM:VARCHAR#
            
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS  IN('AUTHORIZED')
                </isNotNull>
                  
            </isParameterPresent>
        </dynamic>
        )  AND ACT_NUM = #ACT_NUM:VARCHAR#
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS  IN('AUTHORIZED')
                </isNotNull>
            </isParameterPresent>
                
        </dynamic>
    </dynamic-mapped-statement>
         
    <mapped-statement name="updateAgriIntDetailsAD" inline-parameters="true" >
        UPDATE ADV_TRANS_DETAILS SET  PRINCIPLE =#PBAL:NUMERIC# , PBAL=#PBAL:NUMERIC#,TRANS_DT=#LAST_CALC_DT:TIMESTAMP#  
        WHERE ACT_NUM=#ACT_NUM:VARCHAR# AND TRANS_DT=#TO_DATE:TIMESTAMP#  
    </mapped-statement> 
      
    <mapped-statement name="getPenalIntDetailsAAD" result-class="java.util.HashMap" >
        SELECT A.DEBITPENAL-B.CREDITPENAL AS PBAL FROM (SELECT SUM(PENAL) DEBITPENAL FROM AGRIADV_TRANS_DETAILS WHERE TRN_CODE = 'DPI' AND ACT_NUM=#ACT_NUM:VARCHAR#) A,
        (SELECT SUM(PENAL) CREDITPENAL FROM ADV_TRANS_DETAILS WHERE TRN_CODE = 'C*' AND ACT_NUM=#ACT_NUM:VARCHAR#) B
    </mapped-statement>
        
    <mapped-statement name="getPenalIntDetailsATL" result-class="java.util.HashMap" >
        SELECT A.DEBITPENAL-B.CREDITPENAL AS PBAL FROM (SELECT SUM(PENAL) DEBITPENAL FROM AGRILOAN_TRANS_DETAILS WHERE TRN_CODE = 'DPI' AND ACT_NUM=#ACT_NUM:VARCHAR#) A,
        (SELECT SUM(PENAL) CREDITPENAL FROM AGRILOAN_TRANS_DETAILS WHERE TRN_CODE = 'C*' AND ACT_NUM=#ACT_NUM:VARCHAR#) B
    </mapped-statement>

    <dynamic-mapped-statement name="getClosingAccountDetailsATL" result-class="java.util.LinkedHashMap" >
        SELECT DISTINCT LFD.prod_id, ACPROD.ACCT_HEAD as AC_HD_ID, ACHD.AC_HD_DESC,  get_cust_name(cust.cust_id) AS "Customer Name",
        ACTCLOS.ACT_NUM as ACCT_NUM, LFD.LOAN_BALANCE_PRINCIPAL, ACTCLOS.UNUSED_CHK, 
        ACTCLOS.ACT_CLOSING_CHRG, ACTCLOS.INT_PAYABLE, ACTCLOS.CHRG_DETAILS, ACTCLOS.PAYABLE_BAL  
        FROM AGRI_LOANS_FACILITY_DETAILS LFD , 
        LOANS_PRODUCT ACPROD, AC_HD ACHD, CUSTOMER CUST, ACT_CLOSING ACTCLOS ,AGRI_LOANS_BORROWER LB  WHERE ACTCLOS.ACT_NUM=LFD.ACCT_NUM AND 
        LFD.PROD_ID=ACPROD.PROD_ID AND   ACPROD.ACCT_HEAD=ACHD.AC_HD_ID AND  LB.CUST_ID=CUST.CUST_ID AND  LB.BORROW_NO=
        LFD.BORROW_NO AND
        ACTCLOS.ACT_NUM=#ACT_NUM:VARCHAR# AND ACTCLOS.AUTHORIZE_STATUS IS NULL
        <dynamic>
            <isParameterPresent>
                <isNotEmpty prepend= "AND" property = "DELETED">
                    ACTCLOS.STATUS = 'DELETED'
                </isNotEmpty>
            </isParameterPresent>
        </dynamic>    
    </dynamic-mapped-statement> 
        
    <mapped-statement name="getAgriDueDetails" result-class="java.util.HashMap" >
        SELECT DISTINCT(LI.ACCT_NUM), PRINCIPAL_AMT FROM 
        AGRI_LOANS_INSTALLMENT LI,AGRI_LOANS_FACILITY_DETAILS LFD , LOAN_TRANS_DETAILS LTD WHERE  LFD.ACCT_STATUS !='CLOSED'
        AND LI.INSTALLMENT_DT=#CURR_DATE:DATE# AND LTD.EXCESS_AMT!=0 AND LFD.BRANCH_ID=#BRANCH_ID:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="AgriTermLoanChargescustomerName" result-class="java.util.HashMap" >        
        SELECT get_cust_name(C.CUST_ID) AS "Name",LFD.ACCT_NUM
        FROM CUSTOMER C,AGRI_LOANS_BORROWER LB,AGRI_LOANS_FACILITY_DETAILS LFD WHERE C.CUST_ID = LB.CUST_ID AND
        LFD.BORROW_NO = LB.BORROW_NO
        AND LFD.ACCT_NUM = #ACCOUNTNO:VARCHAR# AND LFD.ACCT_STATUS !='CLOSED'
        AND LFD.PROD_ID = #PROD_ID:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getAgriDepositBehavesforLoan" result-class="java.util.HashMap" >        
        SELECT BEHAVES_LIKE,LOAN_BALANCE_PRINCIPAL FROM DEPOSITS_PRODUCT DP, DEPOSIT_LIEN DL,AGRI_LOANS_FACILITY_DETAILS LFD ,DEPOSIT_ACINFO DSA
        WHERE DP.STATUS !='DELETED'  AND LFD.ACCT_NUM=DL.LIEN_AC_NO AND DL.LIEN_AC_NO=#ACCT_NUM:VARCHAR#
        AND DSA.PROD_ID =DP.PROD_ID AND LFD.STATUS !='DELETED'AND DSA.DEPOSIT_NO=DL.DEPOSIT_NO <!--AND LFD.BRANCH_ID=#BRANCH_ID# AND
            LFD.BRANCH_ID=DSA.BRANCH_ID-->
    </mapped-statement>
        
    <mapped-statement name="getAgriCardDetails" result-class="java.util.LinkedHashMap" > 
        SELECT LOOKUP_REF_ID,LOOKUP_DESC FROM LOOKUP_MASTER WHERE
        EXISTS (SELECT AGRI_CARD_TYPE FROM AGRI_CARD_DETAILS  
        WHERE STATUS !='DELETED' AND AUTHORIZE_STATUS ='AUTHORIZED' AND 
        PROD_TYPE='ATL' AND PROD_ID =#PROD_ID:VARCHAR# AND LOOKUP_REF_ID=AGRI_CARD_TYPE)
    </mapped-statement>
        
    <mapped-statement name="getAgriSublimitCount" result-class="java.lang.Integer" > 
        SELECT COUNT(*) AS NO FROM AGRI_LOANS_SUBLIMIT 
        WHERE  ACCT_NUM=#ACT_NUM:VARCHAR#
    </mapped-statement>
 
    <mapped-statement name="getAgriSubLimitDetailCount" result-class="java.lang.Integer" > 
        SELECT COUNT(*) AS NO FROM AGRI_LOANS_SUBLIMIT_DETAILS 
        WHERE  ACCT_NUM=#ACT_NUM:VARCHAR#
    </mapped-statement>
</sql-map>
        
