<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="LoanTransactionMap">
    
    <mapped-statement name="insertLoanTransactionTO" inline-parameters="true">
        INSERT INTO LOAN_FUTURE_TRANSACTION
        (ACT_NUM,INT_PAYABLE, PENAL,TOTAL_WAIVE_AMOUNT,INT_CALC_UPTO_DT,STATUS, STATUS_BY, STATUS_DT,REBATE_AMT,TRANSACTION_ID
        ) VALUES (
        #actNum:VARCHAR#,#intPayable:NUMERIC#, #penalInt:NUMERIC#, #totalWaiveAmount:NUMERIC#,#intCalcUptoDt:DATE#, #status:VARCHAR#, #statusBy:VARCHAR#,SYS_DATE(),#rebateInterest:NUMERIC#,#transactionId:VARCHAR#)
    </mapped-statement>
    
    <dynamic-mapped-statement name="getSelectLoanFutureTransactionAuthorizeTOList" result-class="java.util.LinkedHashMap" >
        SELECT DISTINCT CASE
        WHEN AT.TRANS_MODE = 'TRANSFER'
        THEN AT.BATCH_ID
        ELSE MAX(AT.TRANS_ID)
        END AS TRANS_ID, LOAN_FUTURE_TRANSACTION.ACT_NUM AS ACCOUNTNO,  
        CUSTOMER.CUST_ID, CONCAT(CONCAT(CONCAT(CONCAT(FNAME, ' '), MNAME), ' '), LNAME) CUSTOMER_NAME, LOANS_FACILITY_DETAILS.PROD_ID AS "PRODUCT ID",
        sum(AT.AMOUNT) as AMOUNT, LOAN_FUTURE_TRANSACTION.STATUS AS STATUS FROM LOAN_FUTURE_TRANSACTION, LOANS_FACILITY_DETAILS, CUSTOMER ,LOANS_BORROWER,ALL_TRANS AT
        WHERE  AT.link_batch_id= LOAN_FUTURE_TRANSACTION.ACT_NUM AND AT.TRANS_DT=#TRANS_DT:DATE# AND CUSTOMER.CUST_ID  =LOANS_BORROWER.CUST_ID  AND LOANS_BORROWER.BORROW_NO=LOANS_FACILITY_DETAILS .BORROW_NO AND LOANS_FACILITY_DETAILS.ACCT_NUM = LOAN_FUTURE_TRANSACTION.ACT_NUM 
        AND AT.INITIATED_BRANCH = #BRANCH_CODE:VARCHAR# AND LOAN_FUTURE_TRANSACTION.STATUS_BY != #USER_ID:VARCHAR#   
        AND  cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y', HIERARCHY_ID, HIERARCHY_ID + 1)    
        FROM USER_MASTER UM, ROLE_MASTER RM    WHERE RM.ROLE_ID = UM.USER_ROLE AND UM.USER_ID = LOAN_FUTURE_TRANSACTION.STATUS_BY)
        <dynamic>
            <isEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                LOAN_FUTURE_TRANSACTION.AUTHORIZE_STATUS = 'EXCEPTION'
            </isEqual>
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (LOAN_FUTURE_TRANSACTION.AUTHORIZE_STATUS IS NULL OR 
                LOAN_FUTURE_TRANSACTION.AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
                AND (LOAN_FUTURE_TRANSACTION.STATUS IS NULL OR LOAN_FUTURE_TRANSACTION.STATUS!='DELETED') 
            </isNotEqual> 
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (At.AUTHORIZE_STATUS IS NULL OR 
                At.AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
                AND (At.STATUS IS NULL OR LOAN_FUTURE_TRANSACTION.STATUS!='DELETED') 
            </isNotEqual>
        </dynamic>
        GROUP BY AT.TRANS_MODE,
        AT.BATCH_ID,
        LOAN_FUTURE_TRANSACTION.ACT_NUM,
        CUSTOMER.CUST_ID,
        FNAME,
        MNAME,
        LNAME,
        LOANS_FACILITY_DETAILS.PROD_ID,
        LOAN_FUTURE_TRANSACTION.STATUS,
        AT.TRANS_TYPE
        ORDER BY TRANS_ID
    </dynamic-mapped-statement>
    
    <dynamic-mapped-statement name="getSelectLoanFutureTransactionCashierAuthorizeTOList" result-class="java.util.LinkedHashMap" >
        SELECT DISTINCT CASE
        WHEN AT.TRANS_MODE = 'TRANSFER'
        THEN AT.BATCH_ID
        ELSE MAX(AT.TRANS_ID)
        END AS TRANS_ID, LOAN_FUTURE_TRANSACTION.ACT_NUM AS ACCOUNTNO,  
        CUSTOMER.CUST_ID, CONCAT(CONCAT(CONCAT(CONCAT(FNAME, ' '), MNAME), ' '), LNAME) CUSTOMER_NAME, LOANS_FACILITY_DETAILS.PROD_ID AS "PRODUCT ID",
        sum(AT.AMOUNT) as AMOUNT, LOAN_FUTURE_TRANSACTION.STATUS AS STATUS FROM LOAN_FUTURE_TRANSACTION, LOANS_FACILITY_DETAILS, CUSTOMER ,LOANS_BORROWER,ALL_TRANS AT
        WHERE  AT.link_batch_id= LOAN_FUTURE_TRANSACTION.ACT_NUM AND AT.TRANS_DT=#TRANS_DT:DATE# AND CUSTOMER.CUST_ID  =LOANS_BORROWER.CUST_ID  AND LOANS_BORROWER.BORROW_NO=LOANS_FACILITY_DETAILS .BORROW_NO AND LOANS_FACILITY_DETAILS.ACCT_NUM = LOAN_FUTURE_TRANSACTION.ACT_NUM 
        AND AT.INITIATED_BRANCH = #BRANCH_CODE:VARCHAR# AND LOAN_FUTURE_TRANSACTION.STATUS_BY != #USER_ID:VARCHAR#   
        AND  cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y', HIERARCHY_ID, HIERARCHY_ID + 1)    
        FROM USER_MASTER UM, ROLE_MASTER RM    WHERE RM.ROLE_ID = UM.USER_ROLE AND UM.USER_ID = LOAN_FUTURE_TRANSACTION.STATUS_BY)
        <dynamic>
            <isEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                LOAN_FUTURE_TRANSACTION.AUTHORIZE_STATUS = 'EXCEPTION'
            </isEqual>
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (LOAN_FUTURE_TRANSACTION.AUTHORIZE_STATUS IS NULL OR 
                LOAN_FUTURE_TRANSACTION.AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
                AND (LOAN_FUTURE_TRANSACTION.STATUS IS NULL OR LOAN_FUTURE_TRANSACTION.STATUS!='DELETED') 
            </isNotEqual> 
            <isNotEqual prepend="AND" property="AUTHORIZESTATUS" compareValue="EXCEPTION" >
                (At.AUTHORIZE_STATUS IS NULL OR 
                At.AUTHORIZE_STATUS NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION'))
                AND (At.STATUS IS NULL OR LOAN_FUTURE_TRANSACTION.STATUS!='DELETED') 
            </isNotEqual>
        </dynamic>
        GROUP BY AT.TRANS_MODE,
        AT.BATCH_ID,
        LOAN_FUTURE_TRANSACTION.ACT_NUM,
        CUSTOMER.CUST_ID,
        FNAME,
        MNAME,
        LNAME,
        LOANS_FACILITY_DETAILS.PROD_ID,
        LOAN_FUTURE_TRANSACTION.STATUS,
        AT.TRANS_TYPE
        ORDER BY TRANS_ID
    </dynamic-mapped-statement>
    
    <mapped-statement name="authorizeUpdateLoanFutureTransactionTO" inline-parameters="true">
        UPDATE LOAN_FUTURE_TRANSACTION SET 
        AUTHORIZE_STATUS = #STATUS:VARCHAR#, 
        AUTHORIZE_DT = #AUTHORIZEDT:TIMESTAMP#
        WHERE ACT_NUM = #ACCOUNTNO:VARCHAR# AND
       (AUTHORIZE_STATUS  NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION') OR AUTHORIZE_STATUS IS NULL)
    </mapped-statement>    
    
    <mapped-statement name="getLoanFutureCalcDt" result-class="java.util.HashMap">
        SELECT INT_CALC_UPTO_DT FROM LOAN_FUTURE_TRANSACTION L WHERE L.ACT_NUM=#ACCOUNTNO:VARCHAR#
        AND (L.AUTHORIZE_STATUS  NOT IN ('AUTHORIZED', 'REJECTED', 'EXCEPTION') OR L.AUTHORIZE_STATUS IS NULL)
    </mapped-statement> 
        <mapped-statement name="getLoanFutureTransactionChargeInfoInt" result-class="java.util.HashMap" >  
       SELECT get_cust_name(cust.cust_id)
          AS "CUSTOMER NAME",
       LT.INT_PAYABLE,
       LT.PENAL,
       CA.STREET AS HOUSE_NAME,
       LFD.AVAILABLE_BALANCE,
       LFD.PROD_ID,
       LFD.ACCT_NUM,
       LFD.CLEAR_BALANCE,
       LFD.LOAN_BALANCE_PRINCIPAL,
       LT.INT_CALC_UPTO_DT
  FROM LOANS_FACILITY_DETAILS LFD,
       LOAN_FUTURE_TRANSACTION LT,
       LOANS_BORROWER LB,
       CUSTOMER CUST,
       CUST_ADDR CA
 WHERE     CUST.CUST_ID = LB.CUST_ID
       AND LB.BORROW_NO = LFD.BORROW_NO
       AND LT.ACT_NUM = LFD.ACCT_NUM
       AND LFD.ACCT_NUM = #ACT_NUM:VARCHAR# AND BRANCH_ID=#BRANCH_CODE:VARCHAR# AND
        CA.CUST_ID = CUST.CUST_ID  AND LT.STATUS_DT IN (SELECT MAX(STATUS_DT) FROM LOAN_FUTURE_TRANSACTION WHERE ACT_NUM = #ACT_NUM:VARCHAR#)
    </mapped-statement>
    
</sql-map>
        
