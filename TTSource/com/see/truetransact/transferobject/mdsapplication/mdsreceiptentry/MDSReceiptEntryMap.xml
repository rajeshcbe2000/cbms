<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="ExternalWireTOMap">
<!-- Use ExternalWireTO object (JavaBean) properties as parameters for insert. 
                 Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name = "insertReceiptEntryTO" inline-parameters = "true">
        INSERT INTO MDS_RECEIPT_ENTRY (SCHEME_NAME,CHITTAL_NO,MEMBER_NAME,DIVISION_NO,CHIT_START_DT,CHIT_END_DT,NO_OF_INST,CURR_INST,INST_AMT,PENDING_INST,TOTAL_INST_DUE,
        BONUS_AMT_AVAIL,PRIZED_MEMBER,NOTICE_AMT,ARBITRATION_AMT,NO_OF_INST_PAY,INST_AMT_PAYABLE,PENAL_AMT_PAYABLE,BONUS_AMT_PAYABLE,
        DISCOUNT_AMT,MDS_INTERSET,NET_AMT,PAID_DATE,PAID_INST,PAID_AMT,THALAYAL,MUNNAL,MEMBER_CHANGED,EARLIER_MEMBER_NO,EARLIER_MEMBER_NAME,
        CHANGED_INST_NO,CHANGED_DT,STATUS,STATUS_BY,STATUS_DT,AUTHORIZE_STATUS,AUTHORIZE_BY,AUTHORIZE_DT,BRANCH_CODE,INST_TRANS_ID,PENAL_TRANS_ID,
        BONUS_TRANS_ID,DISCOUNT_TRANS_ID,MDS_INT_TRANS_ID,NET_TRANS_ID,BANK_PAY,ARBITRATION_ID,NOTICE_ID, NARRATION,INITIATED_BRANCH,SUB_NO,SINGLE_TRANS_ID,CALLING_SCREEN,SERVICE_TAX_AMT,FORFEITED_AMT,FORFEITED_TRANS_ID,BANK_ADV_AMTCR,
        PENAL_WAIVE_TRANS_ID,ARC_WAIVE_TRANS_ID,NOTICE_WAIVE_TRANS_ID,PENAL_WAIVE_AMT,ARC_WAIVE_AMT,NOTICE_WAIVE_AMT
        )
        VALUES(
        #schemeName:VARCHAR#,#chittalNo:NUMERIC#,#memberName:VARCHAR#,#divisionNo:NUMERIC#,#chitStartDt:DATE#,#chitEndDt:DATE#,#noOfInst:NUMERIC#,
        #currInst:NUMERIC#,#instAmt:NUMERIC#,#pendingInst:NUMERIC#,#totalInstDue:NUMERIC#,#bonusAmtAvail:NUMERIC#,#prizedMember:VARCHAR#,#noticeAmt:NUMERIC#,
        #arbitrationAmt:NUMERIC#,#noOfInstPay:NUMERIC#,#instAmtPayable:NUMERIC#,#penalAmtPayable:NUMERIC#,#bonusAmtPayable:NUMERIC#,#discountAmt:NUMERIC#,
        #mdsInterset:NUMERIC#,#netAmt:NUMERIC#,#paidDate:DATE#,#paidInst:NUMERIC#,#paidAmt:NUMERIC#,#thalayal:VARCHAR#,#munnal:VARCHAR#,#memberChanged:VARCHAR#,
        #earlierMemberNo:VARCHAR#,#earlierMemberName:VARCHAR#,#changedInstNo:NUMERIC#,#changedDt:DATE#,#status:VARCHAR#,#statusBy:VARCHAR#,#statusDt:DATE#,
        #authorizeStatus:VARCHAR#,#authorizeBy:VARCHAR#,#authorizeDt:DATE#,#branchCode:VARCHAR#,#instTransId:VARCHAR#,#penalTransId:VARCHAR#,#bonusTransId:VARCHAR#,
        #discountTransId:VARCHAR#,#mdsTransId:VARCHAR#,#netTransId:VARCHAR#,#bankPay:VARCHAR#,#arbitrationId:VARCHAR#,
        #noticeId:VARCHAR#,#narration:VARCHAR#,#initiatedBranch:VARCHAR#,#subNo:NUMERIC#,#singleTransId:VARCHAR#,#callingScreen:VARCHAR#,#serviceTaxAmt:NUMBER#,#forfeitBonusAmtPayable:NUMBER#,#forfeitBonusTransId:VARCHAR#,#bankAdvanceAmt:VARCHAR#,
        #penalWaiveId:VARCHAR#,#arcWaiveId:VARCHAR#,#noticeWaiveId:VARCHAR#,#penalWaiveAmt:NUMERIC#,#arcWaiveAmt:NUMERIC#,#noticeWaiveAmt:NUMERIC#
        )
    </mapped-statement>

    <mapped-statement name = "updateReceiptEntryTO" inline-parameters = "true">
        UPDATE MDS_RECEIPT_ENTRY SET
        MEMBER_NAME = #memberName:VARCHAR#,
        DIVISION_NO = #divisionNo:NUMERIC#,
        CHIT_START_DT = #chitStartDt:DATE#,
        CHIT_END_DT = #chitEndDt:DATE#,
        NO_OF_INST = #noOfInst:NUMERIC#,
        CURR_INST = #currInst:NUMERIC#,
        INST_AMT = #instAmt:NUMERIC#,
        PENDING_INST = #pendingInst:NUMERIC#,
        TOTAL_INST_DUE = #totalInstDue:NUMERIC#,
        BONUS_AMT_AVAIL = #bonusAmtAvail:NUMERIC#,
        PRIZED_MEMBER = #prizedMember:VARCHAR#,
        NOTICE_AMT = #noticeAmt:NUMERIC#,
        ARBITRATION_AMT = #arbitrationAmt:NUMERIC#,
        NO_OF_INST_PAY = #noOfInstPay:NUMERIC#,
        INST_AMT_PAYABLE = #instAmtPayable:NUMERIC#,
        PENAL_AMT_PAYABLE = #penalAmtPayable:NUMERIC#,
        BONUS_AMT_PAYABLE = #bonusAmtPayable:NUMERIC#,
        DISCOUNT_AMT = #discountAmt:NUMERIC#,
        MDS_INTERSET = #mdsInterset:NUMERIC#,
        NET_AMT = #netAmt:NUMERIC#,
        PAID_DATE = #paidDate:DATE#,
        PAID_INST = #paidInst:NUMERIC#,
        PAID_AMT = #paidAmt:NUMERIC#,
        THALAYAL = #thalayal:VARCHAR#,
        MUNNAL = #munnal:VARCHAR#,
        MEMBER_CHANGED = #memberChanged:VARCHAR#,
        EARLIER_MEMBER_NO = #earlierMemberNo:VARCHAR#,
        EARLIER_MEMBER_NAME = #earlierMemberName:VARCHAR#,
        CHANGED_INST_NO = #changedInstNo:NUMERIC#,
        CHANGED_DT = #changedDt:DATE#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#,
        AUTHORIZE_STATUS = #authorizeStatus:VARCHAR#,
        AUTHORIZE_BY = #authorizeBy:VARCHAR#,
        AUTHORIZE_DT = #authorizeDt:DATE#,
        BRANCH_CODE = #branchCode:VARCHAR#,
        SERVICE_TAX_AMT = #serviceTaxAmt:NUMBER#,
        WHERE NET_TRANS_ID = #netTransId:VARCHAR# AND SCHEME_NAME = #schemeName:VARCHAR# AND CHITTAL_NO = #chittalNo:NUMERIC# AND SUB_NO = #subNo:NUMERIC#
    </mapped-statement>

    <mapped-statement name = "deleteReceiptEntryTO" inline-parameters = "true">
        UPDATE MDS_RECEIPT_ENTRY SET
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#
        WHERE NET_TRANS_ID = #netTransId:VARCHAR#
    </mapped-statement>

    <result-map name="getMDSReceiptEntryTOResult" class="com.see.truetransact.transferobject.mdsapplication.mdsreceiptentry.MDSReceiptEntryTO">
        <property name="schemeName" column="SCHEME_NAME"/>
        <property name="chittalNo" column="CHITTAL_NO"/>
        <property name="memberName" column="MEMBER_NAME"/>
        <property name="divisionNo" column="DIVISION_NO"/>
        <property name="chitStartDt" column="CHIT_START_DT"/>
        <property name="chitEndDt" column="CHIT_END_DT"/>
        <property name="noOfInst" column="NO_OF_INST"/>
        <property name="subNo" column="SUB_NO"/>
        <property name="currInst" column="CURR_INST"/>
        <property name="instAmt" column="INST_AMT"/>
        <property name="pendingInst" column="PENDING_INST"/>
        <property name="totalInstDue" column="TOTAL_INST_DUE"/>
        <property name="bonusAmtAvail" column="BONUS_AMT_AVAIL"/>
        <property name="prizedMember" column="PRIZED_MEMBER"/>
        <property name="noticeAmt" column="NOTICE_AMT"/>
        <property name="arbitrationAmt" column="ARBITRATION_AMT"/>
        <property name="noOfInstPay" column="NO_OF_INST_PAY"/>
        <property name="instAmtPayable" column="INST_AMT_PAYABLE"/>
        <property name="penalAmtPayable" column="PENAL_AMT_PAYABLE"/>
        <property name="bonusAmtPayable" column="BONUS_AMT_PAYABLE"/>
        <property name="discountAmt" column="DISCOUNT_AMT"/>
        <property name="mdsInterset" column="MDS_INTERSET"/>
        <property name="netAmt" column="NET_AMT"/>
        <property name="paidDate" column="PAID_DATE"/>
        <property name="paidInst" column="PAID_INST"/>
        <property name="paidAmt" column="PAID_AMT"/>
        <property name="thalayal" column="THALAYAL"/>
        <property name="munnal" column="MUNNAL"/>
        <property name="memberChanged" column="MEMBER_CHANGED"/>
        <property name="earlierMemberNo" column="EARLIER_MEMBER_NO"/>
        <property name="earlierMemberName" column="EARLIER_MEMBER_NAME"/>
        <property name="changedInstNo" column="CHANGED_INST_NO"/>
        <property name="changedDt" column="CHANGED_DT"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="authorizeBy" column="AUTHORIZE_BY"/>
        <property name="authorizeDt" column="AUTHORIZE_DT"/>
        <property name="branchCode" column="BRANCH_CODE"/>
        <property name="instTransId" column="INST_TRANS_ID"/>
        <property name="penalTransId" column="PENAL_TRANS_ID"/>
        <property name="bonusTransId" column="BONUS_TRANS_ID"/>
        <property name="discountTransId" column="DISCOUNT_TRANS_ID"/>
        <property name="mdsTransId" column="MDS_INT_TRANS_ID"/>
        <property name="netTransId" column="NET_TRANS_ID"/>
        <property name="bankPay" column="BANK_PAY"/>
        <property name="arbitrationId" column="ARBITRATION_ID"/>
        <property name="noticeId" column="NOTICE_ID"/>
        <property name="callingScreen" column="CALLING_SCREEN"/>   
        <property name="serviceTaxAmt" column="SERVICE_TAX_AMT"/>
        <property name="narration" column="NARRATION"/>  
        <property name="forfeitBonusAmtPayable" column="FORFEITED_AMT"/>
        <property name="forfeitBonusTransId" column="FORFEITED_TRANS_ID"/> 
        <property name="bankAdvanceAmt" column="BANK_ADV_AMTCR"/>
    </result-map>

    <mapped-statement name = "getMDSReceiptEntryTO" result-map = "getMDSReceiptEntryTOResult">
        SELECT * FROM MDS_RECEIPT_ENTRY WHERE NET_TRANS_ID = #TRANS_ID:VARCHAR# AND 
        INITIATED_BRANCH=#INITIATED_BRANCH:VARCHAR# AND STATUS_DT=#TRANS_DT:DATE# AND AUTHORIZE_STATUS IS NULL
    </mapped-statement>
    <mapped-statement name = "getMDSReceiptEntryTOForAdv" result-map = "getMDSReceiptEntryTOResult">
        SELECT * FROM MDS_RECEIPT_ENTRY WHERE SINGLE_TRANS_ID = #SINGLE_TRANS_ID:VARCHAR# AND 
        INITIATED_BRANCH=#INITIATED_BRANCH:VARCHAR# AND STATUS_DT=#TRANS_DT:DATE# AND AUTHORIZE_STATUS IS NULL
    </mapped-statement>
    <mapped-statement name = "updateLinkBatchIdTransferMDS" result-class = "java.util.HashMap">       
        UPDATE TRANSFER_TRANS SET LINK_BATCH_ID = #LINK_BATCH_ID:VARCHAR# WHERE BATCH_ID = #BATCH_ID:VARCHAR#
        AND STATUS!='DELETED' AND AUTHORIZE_STATUS IS NULL AND
        TRANS_DT = #TRANS_DT:DATE# 
    </mapped-statement>
    <result-map name="getMDSReceiptEntryTOResultClosed" class="com.see.truetransact.transferobject.mdsapplication.mdsclosedreceipt.MDSClosedReciptTO">
        <property name="schemeName" column="SCHEME_NAME"/>
        <property name="chittalNo" column="CHITTAL_NO"/>
        <property name="memberName" column="MEMBER_NAME"/>
        <property name="divisionNo" column="DIVISION_NO"/>
        <property name="chitStartDt" column="CHIT_START_DT"/>
        <property name="chitEndDt" column="CHIT_END_DT"/>
        <property name="noOfInst" column="NO_OF_INST"/>
        <property name="subNo" column="SUB_NO"/>
        <property name="currInst" column="CURR_INST"/>
        <property name="instAmt" column="INST_AMT"/>
        <property name="pendingInst" column="PENDING_INST"/>
        <property name="totalInstDue" column="TOTAL_INST_DUE"/>
        <property name="bonusAmtAvail" column="BONUS_AMT_AVAIL"/>
        <property name="prizedMember" column="PRIZED_MEMBER"/>
        <property name="noticeAmt" column="NOTICE_AMT"/>
        <property name="arbitrationAmt" column="ARBITRATION_AMT"/>
        <property name="noOfInstPay" column="NO_OF_INST_PAY"/>
        <property name="instAmtPayable" column="INST_AMT_PAYABLE"/>
        <property name="penalAmtPayable" column="PENAL_AMT_PAYABLE"/>
        <property name="bonusAmtPayable" column="BONUS_AMT_PAYABLE"/>
        <property name="discountAmt" column="DISCOUNT_AMT"/>
        <property name="mdsInterset" column="MDS_INTERSET"/>
        <property name="netAmt" column="NET_AMT"/>
        <property name="paidDate" column="PAID_DATE"/>
        <property name="paidInst" column="PAID_INST"/>
        <property name="paidAmt" column="PAID_AMT"/>
        <property name="thalayal" column="THALAYAL"/>
        <property name="munnal" column="MUNNAL"/>
        <property name="memberChanged" column="MEMBER_CHANGED"/>
        <property name="earlierMemberNo" column="EARLIER_MEMBER_NO"/>
        <property name="earlierMemberName" column="EARLIER_MEMBER_NAME"/>
        <property name="changedInstNo" column="CHANGED_INST_NO"/>
        <property name="changedDt" column="CHANGED_DT"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="authorizeBy" column="AUTHORIZE_BY"/>
        <property name="authorizeDt" column="AUTHORIZE_DT"/>
        <property name="branchCode" column="BRANCH_CODE"/>
        <property name="instTransId" column="INST_TRANS_ID"/>
        <property name="penalTransId" column="PENAL_TRANS_ID"/>
        <property name="bonusTransId" column="BONUS_TRANS_ID"/>
        <property name="discountTransId" column="DISCOUNT_TRANS_ID"/>
        <property name="mdsTransId" column="MDS_INT_TRANS_ID"/>
        <property name="netTransId" column="NET_TRANS_ID"/>
        <property name="bankPay" column="BANK_PAY"/>
        <property name="arbitrationId" column="ARBITRATION_ID"/>
        <property name="noticeId" column="NOTICE_ID"/> 
        <property name="serviceTaxAmt" column="SERVICE_TAX_AMT"/>
        <property name="narration" column="NARRATION"/>
        <property name="forfeitBonusAmtPayable" column="FORFEITED_AMT"/>
        <property name="forfeitBonusTransId" column="FORFEITED_TRANS_ID"/> 
        <property name="bankAdvanceAmt" column="BANK_ADV_AMTCR"/>
    </result-map>

    <mapped-statement name = "getMDSReceiptEntryTOClosed" result-map = "getMDSReceiptEntryTOResultClosed">
        SELECT * FROM MDS_RECEIPT_ENTRY WHERE NET_TRANS_ID = #TRANS_ID:VARCHAR# AND 
        INITIATED_BRANCH=#INITIATED_BRANCH:VARCHAR# AND STATUS_DT=#TRANS_DT:DATE# AND AUTHORIZE_STATUS IS NULL
    </mapped-statement>

    <mapped-statement name = "getSelectChitDetails" result-class = "java.util.HashMap">
        SELECT * FROM MDS_APPLICATION WHERE STATUS != 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED'
    </mapped-statement>
    <mapped-statement name = "getSeperateInstallmentAmount" result-class = "java.util.HashMap">
        select MPD.TOTAL_BONUS_AMOUNT,MPD.INSTALLMENT_NO from MDS_PRIZED_MONEY_DETAILS mpd where
        MPD.SCHEME_NAME=#SCHEME_NAME:VARCHAR# and MPD.INSTALLMENT_NO   between #NEXT_INSTALLMENT:NUMBER# and #TO_INSTALLMENT:NUMBER# and MPD.DIVISION_NO='1' and 
        AUTHORIZED_STATUS='AUTHORIZED' order by MPD.INSTALLMENT_NO
    </mapped-statement>

    <mapped-statement name = "getSelectBankAdvanceBonusData" result-class = "java.util.HashMap">
        SELECT sum(bonus_amt) as bonus_amount FROM MDS_BANK_ADVANCE WHERE REPAID='N' AND  
        SCHEME_NAME=#SCHEME_NAME:VARCHAR# AND CHITTAL_NO = #CHITTAL_NO:VARCHAR# AND SUB_NO = cast(#SUB_NO# as numeric) AND 
        INSTALLMENT_NO between #INSTALLMENT_NO:NUMBER# and #TO_INSTALLMENT:NUMBER#  
        AND STATUS!='DELETED' AND AUTHORIZE_STATUS ='AUTHORIZED' <!--ORDER BY BANK_ADV_ID-->
    </mapped-statement>

    <dynamic-mapped-statement name = "getSelctReceiptDetails" result-class = "java.util.LinkedHashMap">
        SELECT MA.SCHEME_NAME,MA.CHITTAL_NO,MA.SUB_NO,CHIT_START_DT,INST_AMT,MEMBER_NO,CUST.CUST_ID,INSTALLMENT_PAID,SL_NO,NEXT_BONUS_AMOUNT,
        TOTAL_BONUS_AMOUNT,PRIZED_AMOUNT,COMMISION_AMOUNT,MP.DIVISION_NO,DRAW_AUCTION_DATE,MP.BRANCH_ID,
        get_cust_name(CUST.CUST_ID)  as "CUSTOMER"           
        FROM MDS_APPLICATION MA,MDS_PRIZED_MONEY_DETAILS MP,CUSTOMER CUST WHERE MA.SCHEME_NAME = MP.SCHEME_NAME AND          
        MA.SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND  MA.CUST_ID = CUST.CUST_ID AND MA.CHITTAL_NO = MP.CHITTAL_NO AND
        MA.SUB_NO = MP.SUB_NO AND <!-- MA.DIVISION_NO = MP.DIVISION_NO AND --> MP.STATUS != 'DELETED' AND MP.AUTHORIZED_STATUS = 'AUTHORIZED' AND 
        MA.STATUS != 'DELETED' AND MA.AUTHORIZE_STATUS = 'AUTHORIZED' AND MP.CHITTAL_NO NOT IN(
        SELECT CHITTAL_NO FROM MDS_MONEY_PAYMENT_DETAILS 
        MPD WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND STATUS != 'DELETED' AND MP.CHITTAL_NO = MPD.CHITTAL_NO AND MPD.SUB_NO = MA.SUB_NO
        AND MPD.AUTHORIZED_STATUS IS NOT NULL AND MPD.AUTHORIZED_STATUS = 'AUTHORIZED')
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CHITTAL_NO">
                    MP.CHITTAL_NO = #CHITTAL_NO:VARCHAR#
                </isNotNull>
            </isParameterPresent>
                
            <isParameterPresent>
                <isNotNull prepend="AND" property="SUB_NO">
                    MP.SUB_NO = #SUB_NO:NUMBER#
                </isNotNull>
            </isParameterPresent>
        </dynamic> 
    </dynamic-mapped-statement> 
        
        
    <dynamic-mapped-statement name = "getSelctChittalReceiptDetails" result-class = "java.util.LinkedHashMap">
        SELECT MA.SCHEME_NAME,MA.CHITTAL_NO,MA.SUB_NO,CUST.MEMBERSHIP_NO as MEMBER_NO,MA.BRANCH_CODE,get_cust_name(CUST.CUST_ID)  as "Customer", PRIZED_AMOUNT,AUCTION_TRANS,
        MA.THALAYAL FROM MDS_APPLICATION MA,MDS_PRIZED_MONEY_DETAILS MP,CUSTOMER CUST WHERE MA.SCHEME_NAME = MP.SCHEME_NAME AND          
        MA.SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND MA.CUST_ID = CUST.CUST_ID AND MA.CHITTAL_NO = MP.CHITTAL_NO AND
        MA.SUB_NO = MP.SUB_NO AND
        MA.STATUS != 'DELETED' AND MA.AUTHORIZE_STATUS = 'AUTHORIZED' AND MP.AUTHORIZED_STATUS = 'AUTHORIZED'  AND MP.CHITTAL_NO NOT IN(
        SELECT CHITTAL_NO FROM MDS_MONEY_PAYMENT_DETAILS 
        MPD WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND STATUS != 'DELETED' AND MP.CHITTAL_NO = MPD.CHITTAL_NO AND MP.SUB_NO = MPD.SUB_NO
        AND MPD.AUTHORIZED_STATUS IS NOT NULL AND MPD.AUTHORIZED_STATUS = 'AUTHORIZED')
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CHITTAL_NO">
                    MP.CHITTAL_NO = #CHITTAL_NO:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(MA.SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(MA.CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(MA.SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NO">
                    UPPER(CUST.MEMBERSHIP_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="BRANCH_CODE">
                    UPPER(MA.BRANCH_CODE) LIKE UPPER('%$BRANCH_CODE$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="Customer">
                    UPPER(get_cust_name(CUST.CUST_ID)) LIKE UPPER('%$Customer$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="PRIZED_AMOUNT">
                    UPPER(PRIZED_AMOUNT) LIKE UPPER('%$PRIZED_AMOUNT$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="AUCTION_TRANS">
                    UPPER(AUCTION_TRANS) LIKE UPPER('%$AUCTION_TRANS$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="THALAYAL">
                    UPPER(MA.THALAYAL) LIKE UPPER('%$THALAYAL$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic> 
    </dynamic-mapped-statement>
    
     <dynamic-mapped-statement name = "getSelctChittalReceiptDetailsView" result-class = "java.util.LinkedHashMap">
        SELECT MA.SCHEME_NAME,MA.CHITTAL_NO,MA.SUB_NO,CUST.MEMBERSHIP_NO as MEMBER_NO,MA.BRANCH_CODE,get_cust_name(CUST.CUST_ID)  as "Customer", PRIZED_AMOUNT,AUCTION_TRANS,
        MA.THALAYAL,MP.USER_DEFINED_Y_N FROM MDS_APPLICATION MA,MDS_PRIZED_MONEY_DETAILS MP,CUSTOMER CUST WHERE MA.SCHEME_NAME = MP.SCHEME_NAME AND          
        MA.SCHEME_NAME = #SCHEME_NAMES:VARCHAR# AND MA.CUST_ID = CUST.CUST_ID AND MA.CHITTAL_NO = MP.CHITTAL_NO AND
        MA.SUB_NO = MP.SUB_NO AND
        MA.STATUS != 'DELETED' AND MA.AUTHORIZE_STATUS = 'AUTHORIZED' AND MP.AUTHORIZED_STATUS = 'AUTHORIZED'  AND MP.CHITTAL_NO NOT IN(
        SELECT CHITTAL_NO FROM MDS_MONEY_PAYMENT_DETAILS 
        MPD WHERE SCHEME_NAME = #SCHEME_NAMES:VARCHAR# AND STATUS != 'DELETED' AND MP.CHITTAL_NO = MPD.CHITTAL_NO AND MP.SUB_NO = MPD.SUB_NO
        AND MPD.AUTHORIZED_STATUS IS NOT NULL AND MPD.AUTHORIZED_STATUS = 'AUTHORIZED')
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CHITTAL_NO">
                    MP.CHITTAL_NO = #CHITTAL_NO:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(MA.SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(MA.CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(MA.SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NO">
                    UPPER(CUST.MEMBERSHIP_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="BRANCH_CODE">
                    UPPER(MA.BRANCH_CODE) LIKE UPPER('%$BRANCH_CODE$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="Customer">
                    UPPER(get_cust_name(CUST.CUST_ID)) LIKE UPPER('%$Customer$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="PRIZED_AMOUNT">
                    UPPER(PRIZED_AMOUNT) LIKE UPPER('%$PRIZED_AMOUNT$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="AUCTION_TRANS">
                    UPPER(AUCTION_TRANS) LIKE UPPER('%$AUCTION_TRANS$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="THALAYAL">
                    UPPER(MA.THALAYAL) LIKE UPPER('%$THALAYAL$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic> 
    </dynamic-mapped-statement>

    <!--Added STANDING_INSTN by nithya for 0003756 on 18.02.2016 -->
    
    <mapped-statement name = "getSelctApplnReceiptDetails" result-class = "java.util.LinkedHashMap">
        SELECT MDSA.DIVISION_NO,MDSA.CHITTAL_NO,CHIT_START_DT,CHIT_END_DT,NO_OF_INSTALLMENTS,INST_AMT,SCHEME_START_DT,INST_COUNT,
        INSTALLMENT_DAY,TOTAL_BALANCE,MDSD.NO_OF_DIVISIONS,LAST_TRANS_DT,MEMBER_NAME,MDSA.MUNNAL,MDSA.THALAYAL,MEMBER_NO,MDSA.BRANCH_CODE,
        INSTALLMENT_FREQUENCY,MDSA.STANDING_INSTN FROM MDS_APPLICATION MDSA,MDS_SCHEME_DETAILS MDSD WHERE MDSA.SCHEME_NAME = MDSD.SCHEME_NAME 
        AND MDSA.CHITTAL_NO = #CHITTAL_NO:VARCHAR# AND SUB_NO=cast(#SUB_NO# as NUMERIC) AND MDSA.STATUS!='DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED'
    </mapped-statement>        

    <dynamic-mapped-statement name = "getSelctReceiptEnteredDetails" result-class = "java.util.LinkedHashMap">
        SELECT MRE.SCHEME_NAME,MP_MDS_CODE AS SCHEME_DESC,CHITTAL_NO,SUB_NO,CHIT_START_DT,NET_TRANS_ID FROM MDS_RECEIPT_ENTRY MRE,MDS_SCHEME_DETAILS MSD WHERE MRE.STATUS != 'DELETED' AND 
        MRE.AUTHORIZE_STATUS IS NULL AND MRE.CHITTAL_NO NOT IN(SELECT CHITTAL_NO FROM MDS_MEMBER_RECEIPT_ENTRY WHERE STATUS!='DELETED'  
        AND AUTHORIZED_STATUS IS NULL) AND MRE.SCHEME_NAME=MSD.SCHEME_NAME AND INITIATED_BRANCH=#INITIATED_BRANCH:VARCHAR#
    <dynamic>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_NAME">
                    UPPER(MRE.SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_DESC">
                    UPPER(MP_MDS_CODE) LIKE UPPER('%$SCHEME_DESC$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="CHITTAL_NO">
                    UPPER(CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="SUB_NO">
                    UPPER(SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="CHIT_START_DT">
                    UPPER(CHIT_START_DT) LIKE UPPER('%$CHIT_START_DT$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="NET_TRANS_ID">
                    UPPER(NET_TRANS_ID) LIKE UPPER('%$NET_TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
            </dynamic>
   </dynamic-mapped-statement>

    <mapped-statement name = "getSelectNonAuthRecordForReceipt" result-class = "java.util.LinkedHashMap">
        SELECT DISTINCT CASE
            WHEN AT.TRANS_MODE = 'TRANSFER'
               THEN AT.BATCH_ID
            ELSE AT.TRANS_ID END AS TRANS_ID,MDSA.SCHEME_NAME,MP_MDS_CODE AS SCHEME_DESC,CHITTAL_NO,SUB_NO,MEMBER_NAME,NET_TRANS_ID,AT.AMOUNT as NET_AMT,mdsa.SINGLE_TRANS_ID FROM
        MDS_RECEIPT_ENTRY MDSA,MDS_SCHEME_DETAILS MSD,ALL_TRANS AT           
        WHERE AT.TRANS_DT=#TRANS_DT:DATE# AND MDSA.CALLING_SCREEN IS NULL
        AND AT.SINGLE_TRANS_ID = MDSA.SINGLE_TRANS_ID
        AND (MDSA.STATUS != 'DELETED' OR MDSA.STATUS IS NULL)
        AND MDSA.SCHEME_NAME=MSD.SCHEME_NAME             AND MDSA.STATUS_BY != #USER_ID:VARCHAR# AND MDSA.INITIATED_BRANCH = #SELECTED_BRANCH_ID:VARCHAR#
        AND MDSA.AUTHORIZE_STATUS IS NULL AND             cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DISTINCT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y',
        HIERARCHY_ID,              HIERARCHY_ID + 1) FROM USER_MASTER UM, ROLE_MASTER RM WHERE RM.ROLE_ID = UM.USER_ROLE AND
        UM.USER_ID = MDSA.STATUS_BY)            
        AND CHITTAL_NO NOT IN(SELECT CHITTAL_NO
        FROM MDS_MEMBER_RECEIPT_ENTRY WHERE STATUS!='DELETED' AND AUTHORIZED_STATUS IS NULL)
        and MSD.GROUP_NO is null
    </mapped-statement>
    
    <mapped-statement name = "getSelectNonAuthRecordForCashierReceipt" result-class = "java.util.LinkedHashMap">
        SELECT DISTINCT CASE
            WHEN AT.TRANS_MODE = 'TRANSFER'
               THEN AT.BATCH_ID
            ELSE AT.TRANS_ID END AS TRANS_ID,MDSA.SCHEME_NAME,MP_MDS_CODE AS SCHEME_DESC,CHITTAL_NO,SUB_NO,MEMBER_NAME,NET_TRANS_ID,AT.AMOUNT as  NET_AMT FROM
        MDS_RECEIPT_ENTRY MDSA,MDS_SCHEME_DETAILS MSD,ALL_TRANS AT           
        WHERE AT.TRANS_DT=#TRANS_DT:DATE# AND MDSA.CALLING_SCREEN IS NULL AND AT.SINGLE_TRANS_ID = MDSA.SINGLE_TRANS_ID AND (MDSA.STATUS != 'DELETED' OR MDSA.STATUS IS NULL)
        AND MDSA.SCHEME_NAME=MSD.SCHEME_NAME             AND MDSA.STATUS_BY != #USER_ID:VARCHAR# AND MDSA.INITIATED_BRANCH = #SELECTED_BRANCH_ID:VARCHAR#
        AND MDSA.AUTHORIZE_STATUS IS NULL AND             cast(#HIERARCHY_ID# as numeric) &gt;= (SELECT DISTINCT DECODE(NVL(SAME_HIERARCHY_ALLOWED,'N'), 'Y',
        HIERARCHY_ID,              HIERARCHY_ID + 1) FROM USER_MASTER UM, ROLE_MASTER RM WHERE RM.ROLE_ID = UM.USER_ROLE AND
        UM.USER_ID = MDSA.STATUS_BY)            
        AND  CASE WHEN AT.TRANS_MODE = 'TRANSFER' THEN 'AUTHORIZED' ELSE AT.PAYMENT_STATUS END IS NOT NULL AND CHITTAL_NO NOT IN(SELECT CHITTAL_NO
        FROM MDS_MEMBER_RECEIPT_ENTRY WHERE STATUS!='DELETED' AND AUTHORIZED_STATUS IS NULL)
        AND  INSTRUMENT_NO2 != 'BONUS'
        
    </mapped-statement>
    <mapped-statement name="getSelectForFeiteHead" result-class = "java.util.HashMap" >
        select MDS.MDS_FORFEITED_ACCT_HEAD from MDS_ACCT_HEAD mds where 
        MDS.PROD_ID= #PROD_ID:VARCHAR# and MDS.SCHEME_NAME=#SCHEME_NAME:VARCHAR#
    </mapped-statement>
    <mapped-statement name = "updateAuthorizeReceiptEntry" result-class = "java.util.LinkedHashMap">
        UPDATE MDS_RECEIPT_ENTRY SET AUTHORIZE_BY = #AUTHORIZE_BY:VARCHAR#,AUTHORIZE_DT = (SELECT SYS_DATE() FROM DUAL),AUTHORIZE_STATUS = #AUTHORIZE_STATUS:VARCHAR# 
        WHERE NET_TRANS_ID = #NET_TRANS_ID:VARCHAR# AND STATUS_DT=#TRANS_DT:DATE# AND INITIATED_BRANCH=#BRANCH_CODE:VARCHAR#
    </mapped-statement>

    <dynamic-mapped-statement name = "getSelectPrizedDetailsEntryRecords" result-class = "java.util.LinkedHashMap">
        SELECT NVL(MAX(SL_NO),0) SL_NO,NEXT_INSTALLMENT_DATE,PAYMENT_DATE,NEXT_BONUS_AMOUNT,DRAW,AUCTION, <!--NET_AMOUNT_PAYABLE as -->PRIZED_AMOUNT FROM 
        MDS_PRIZED_MONEY_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# <!--AND DIVISION_NO = #DIVISION_NO# -->AND STATUS != 'DELETED' AND 
        AUTHORIZED_STATUS = 'AUTHORIZED' 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "CHITTAL_NO">
                    CHITTAL_NO = #CHITTAL_NO:VARCHAR#
                </isNotNull>
                <isNotNull prepend = "AND" property = "SUB_NO">
                    SUB_NO = cast(#SUB_NO# as NUMERIC)
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        GROUP BY NEXT_INSTALLMENT_DATE,PAYMENT_DATE,NEXT_BONUS_AMOUNT,DRAW,AUCTION,<!--NET_AMOUNT_PAYABLE-->PRIZED_AMOUNT
        ORDER BY SL_NO DESC
    </dynamic-mapped-statement>
    
   <mapped-statement name = "getSelectPrizedDetailsAfterCashPayment" result-class = "java.util.LinkedHashMap">
	   select CHITTAL_NO from MDS_MONEY_PAYMENT_DETAILS where CHITTAL_NO = #CHITTAL_NO:VARCHAR#
	   and SCHEME_NAME = #SCHEME_NAME:VARCHAR# and SUB_NO = cast(#SUB_NO# as NUMERIC) and STATUS != 'DELETED'
	   and AUTHORIZED_STATUS = 'AUTHORIZED'
   </mapped-statement>    

    <mapped-statement name = "getSelectParticularTransList" result-class = "java.util.LinkedHashMap">
        SELECT INST_TRANS_ID,PENAL_TRANS_ID,BONUS_TRANS_ID,DISCOUNT_TRANS_ID,MDS_INT_TRANS_ID,
        NET_TRANS_ID,ARBITRATION_ID,NOTICE_ID,SINGLE_TRANS_ID,FORFEITED_TRANS_ID,PENAL_WAIVE_TRANS_ID,ARC_WAIVE_TRANS_ID,NOTICE_WAIVE_TRANS_ID FROM MDS_RECEIPT_ENTRY 
        WHERE NET_TRANS_ID = #TRANS_ID:VARCHAR# AND INITIATED_BRANCH=#INITIATED_BRANCH:VARCHAR# AND 
        STATUS_DT=cast(#TRANS_DT# as DATE) AND STATUS != 'DELETED' AND AUTHORIZE_STATUS IS NULL
    </mapped-statement>

    <mapped-statement name = "updateMDSAvailBalanceMap" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET AVAILABLE_BALANCE = NVL(AVAILABLE_BALANCE,0) + cast(#AVAILABLE_BALANCE# as NUMERIC)
        WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# and BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>

    <mapped-statement name = "updateMDSClearBalanceMap" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET CLEAR_BALANCE = NVL(CLEAR_BALANCE,0) + cast(#CLEAR_BALANCE# as NUMERIC)
        WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# and BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>

    <mapped-statement name = "getSelectInstUptoPaid" result-class = "java.util.HashMap">
            <!-- ADD_MONTHS added by Rajesh -->
            <!--SELECT ADD_MONTHS(NEXT_INSTALLMENT_DATE,-1) as NEXT_INSTALLMENT_DATE FROM MDS_PRIZED_MONEY_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME# 
            AND DIVISION_NO = #DIVISION_NO# AND INSTALLMENT_NO = #INSTALLMENT_NO# AND 
            STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'-->
        SELECT ADD_MONTHS(NEXT_INSTALLMENT_DATE,DECODE(BONUS_FIRST_INSTALLMENT,'Y',0,-1)) as NEXT_INSTALLMENT_DATE,MSD.PROD_ID FROM 
        MDS_PRIZED_MONEY_DETAILS MPMD, MDS_SCHEME_DETAILS MSD, MDS_PRODUCT_GENERAL_DETAILS MPGD 
        WHERE MPMD.SCHEME_NAME=MSD.SCHEME_NAME AND MSD.PROD_ID=MPGD.PROD_ID AND MPMD.SCHEME_NAME = #SCHEME_NAME:VARCHAR# 
        AND MPMD.DIVISION_NO = cast(#DIVISION_NO# as NUMERIC) AND INSTALLMENT_NO = cast(#INSTALLMENT_NO# as NUMERIC) AND MPMD.STATUS != 'DELETED' AND MPMD.AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement>
    
    <mapped-statement name = "getSelectWeeklyInstUptoPaid" result-class = "java.util.HashMap">
        <!-- ADD_MONTHS added by Nidhin -->
        SELECT MPMD.NEXT_INSTALLMENT_DATE +  DECODE (bonus_first_installment, 'Y', 0, -7)                   
        AS NEXT_INSTALLMENT_DATE,
        MSD.PROD_ID
        FROM MDS_PRIZED_MONEY_DETAILS MPMD,
        MDS_SCHEME_DETAILS MSD,
        MDS_PRODUCT_GENERAL_DETAILS MPGD
        WHERE MPMD.SCHEME_NAME = MSD.SCHEME_NAME
        AND MSD.PROD_ID = MPGD.PROD_ID
        AND MPMD.SCHEME_NAME = #SCHEME_NAME:VARCHAR#
        AND MPMD.DIVISION_NO = cast(#DIVISION_NO# as NUMERIC)
        AND INSTALLMENT_NO = cast(#INSTALLMENT_NO# as NUMERIC)
        AND MPMD.STATUS != 'DELETED'
        AND MPMD.AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement>

    <mapped-statement name = "updateMDSTotalBalanceMap" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET TOTAL_BALANCE = NVL(TOTAL_BALANCE,0) + cast(#TOTAL_BALANCE# as NUMERIC)
        WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# and BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>

    <mapped-statement name = "updateMDSShadowDebitMap" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET SHADOW_DEBIT = NVL(SHADOW_DEBIT - cast(#SHADOW_DEBIT# as NUMERIC),0)
        WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# and BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>

    <mapped-statement name = "updateMDSShadowCreditDrAmtMap" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET SHADOW_CREDIT = NVL(SHADOW_CREDIT,0) - cast(#SHADOW_CREDIT# as NUMERIC)
        WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# and BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>

    <mapped-statement name = "updateMDSShadowCreditCrAmtMap" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET SHADOW_CREDIT = NVL(SHADOW_CREDIT,0) + cast(#SHADOW_CREDIT# as NUMERIC)
        WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# and BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>    

    <mapped-statement name = "getSelectTransMaxRec" result-class = "java.util.HashMap">
        SELECT NVL(MAX(INST_COUNT),0) INST_COUNT FROM MDS_TRANS_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND CHITTAL_NO = #CHITTAL_NO:VARCHAR# AND SUB_NO=cast(#SUB_NO# as NUMERIC)
    </mapped-statement>    

    <mapped-statement name = "getSelectNextInstDate" result-class = "java.util.HashMap">
        SELECT DRAW_AUCTION_DATE,NEXT_INSTALLMENT_DATE,NEXT_BONUS_AMOUNT FROM MDS_PRIZED_MONEY_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# 
            <!-- AND DIVISION_NO = #DIVISION_NO# --> AND SL_NO = cast(#SL_NO# as NUMERIC)
    </mapped-statement>
    
    <mapped-statement name = "getSelectNextAuctDate" result-class = "java.util.HashMap">
        SELECT DRAW_AUCTION_DATE FROM MDS_PRIZED_MONEY_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# 
            <!-- AND DIVISION_NO = #DIVISION_NO# --> AND SL_NO = cast(#SL_NO# as NUMERIC)
    </mapped-statement>
        
    <mapped-statement name = "getSelectBonusAndNextInstDate" result-class = "java.util.HashMap">
        SELECT NEXT_INSTALLMENT_DATE,NEXT_BONUS_AMOUNT FROM MDS_PRIZED_MONEY_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# 
        AND DIVISION_NO = cast(#DIVISION_NO# as NUMERIC) AND SL_NO = cast(#SL_NO# as NUMERIC)
    </mapped-statement>      

    <mapped-statement name = "getSelectBonusAndNextInstDateWithoutDivision" result-class = "java.util.HashMap">
        SELECT NEXT_INSTALLMENT_DATE, (nvl(NEXT_BONUS_AMOUNT,0)-nvl(total_discount,0))/TOTAL_NO_OF_MEMBERS AS NEXT_BONUS_AMOUNT FROM 
        (SELECT SCHEME_NAME, NEXT_INSTALLMENT_DATE, SUM(TOTAL_BONUS_AMOUNT) AS NEXT_BONUS_AMOUNT,sum(TOTAL_DISCOUNT) as total_discount FROM MDS_PRIZED_MONEY_DETAILS
        WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND SL_NO = cast(#SL_NO# as NUMERIC) and nvl(USER_DEFINED_Y_N,'N') = 'N' GROUP BY SCHEME_NAME, NEXT_INSTALLMENT_DATE) A,
        (SELECT SCHEME_NAME, TOTAL_NO_OF_MEMBERS FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR#) B
        WHERE A.SCHEME_NAME=B.SCHEME_NAME
    </mapped-statement>      
        
    <mapped-statement name = "getSelectRecordDetails" result-class = "java.util.HashMap">
        SELECT PAYMENT_DATE,PRIZED_AMOUNT<!--NET_AMOUNT_PAYABLE-->,INSTALLMENT_NO FROM MDS_PRIZED_MONEY_DETAILS 
        WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND CHITTAL_NO = #CHITTAL_NO# AND SUB_NO = cast(#SUB_NO# as NUMERIC) AND STATUS != 'DELETED' 
    </mapped-statement>    

    <mapped-statement name = "getSelectChangedRecordDetails" result-class = "java.util.HashMap">
        SELECT MDS.CHITTAL_NO,THALAYAL,MUNNAL,NEW_MEMBER_MUNNAL,NEW_MEMBER_NO,INSTALLMENT_NO,CHANGE_EFFECTIVE_DATE,OLD_MEMBER_NO,OLD_MEMBER_NAME FROM
        MDS_APPLICATION MDS,MDS_CHANGE_MEMBER MDSC WHERE MDS.SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND MDSC.CHITTAL_NO = MDS.CHITTAL_NO AND MDSC.SUB_NO = MDS.SUB_NO AND
        MDSC.CHITTAL_NO = #CHITTAL_NO:VARCHAR# AND MDS.STATUS != 'DELETED' 
    </mapped-statement>
        
    <mapped-statement name = "getNextInstallmentDtDetails" result-class = "java.util.HashMap">
        SELECT MAX(NEXT_INSTALLMENT_DATE) AS NEXT_INSTALLMENT_DATE FROM MDS_PRIZED_MONEY_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND DIVISION_NO=cast(#DIVISION_NO# as NUMERIC)
        AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED' 
    </mapped-statement> 
        
     <!--   <mapped-statement name = "getRemitIssueDetails" result-class = "java.util.HashMap">
            SELECT TRANS_TYPE FROM REMIT_ISSUE_TRANS WHERE BATCH_ID=#BATCH_ID#
        </mapped-statement> -->
        
    <dynamic-mapped-statement name = "getTransferDetailsWithLoan" result-class = "java.util.HashMap">
        SELECT * FROM TRANSFER_TRANS WHERE SINGLE_TRANS_ID=#SINGLE_TRANS_ID:VARCHAR# AND TRANS_DT=cast(#TRANS_DT# as DATE) AND INITIATED_BRANCH=#BRANCH_CODE# AND STATUS !='DELETED' AND (AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR AUTHORIZE_STATUS_2 IS NULL)
        AND PARTICULARS NOT LIKE '%Pending Interest%'  AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS!='REJECTED')
        <dynamic>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY TRANS_ID
    </dynamic-mapped-statement>
    
    <dynamic-mapped-statement name = "getTransferDetails" result-class = "java.util.HashMap">
        SELECT T.TRANS_ID, T.BATCH_ID,AH.AC_HD_DESC AS AC_HD_ID,T.ACT_NUM,T.INP_AMOUNT,T.
	    INP_CURR,T.AMOUNT,T.TRANS_DT,T.TRANS_TYPE,T.INST_TYPE,T.
	    INST_DT,T.INIT_TRANS_ID,T.INIT_CHANN_TYPE,T.PARTICULARS,T.STATUS,T.
	    INSTRUMENT_NO1,T.INSTRUMENT_NO2,T.PROD_ID,T.AUTHORIZE_STATUS,T.AUTHORIZE_BY,T.
	    AUTHORIZE_DT,T.AUTHORIZE_REMARKS,T.STATUS_BY,T.BRANCH_ID,T.STATUS_DT,T.
	    PROD_TYPE,T.LINK_BATCH_ID,T.LINK_BATCH_DT,T.TRANS_MODE,T.INITIATED_BRANCH,T.
	    LOAN_HIERARCHY,T.AUTHORIZE_STATUS_2,T.NARRATION,T.SHIFT,T.
	    TRANS_ALL_ID,T.REC_MODE,T.SINGLE_TRANS_ID,T.AUTHORIZE_BY_2,T.GL_TRANS_ACT_NUM,T.TRANS_MOD_TYPE FROM TRANSFER_TRANS T
	    JOIN AC_HD AH ON AH.AC_HD_ID=T.AC_HD_ID
	    WHERE T.LINK_BATCH_ID=#BATCH_ID:VARCHAR# AND T.TRANS_DT=cast(#TRANS_DT# as DATE) AND
	    T.INITIATED_BRANCH=#BRANCH_CODE# AND T.STATUS !='DELETED' AND (T.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR T.AUTHORIZE_STATUS_2 IS NULL)
	    AND T.PARTICULARS NOT LIKE '%Pending Interest%'  AND (T.AUTHORIZE_STATUS IS NULL OR T.AUTHORIZE_STATUS!='REJECTED')
        <dynamic>
            <isParameterPresent>
                <isNotNull  property="singleTrasnId">
                    AND T.SINGLE_TRANS_ID =#singleTrasnId:VARCHAR#
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend = "AND" property="SCREEN_NAME">
                     T.SCREEN_NAME =#SCREEN_NAME:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (T.AUTHORIZE_STATUS IS NULL OR T.AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    T.AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE">
                    T.AUTHORIZE_STATUS = #AUTHORIZE:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "INSTRUMENT_NO2">
                   ( T.INSTRUMENT_NO2 IS NULL OR T.INSTRUMENT_NO2 != 'NOTICE')
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY T.TRANS_ID
    </dynamic-mapped-statement>
	
        
    <dynamic-mapped-statement name = "getTransferDetailsWithTransId" result-class = "java.util.HashMap">
        SELECT * FROM TRANSFER_TRANS WHERE LINK_BATCH_ID=#BATCH_ID:VARCHAR# AND TRANS_DT=cast(#TRANS_DT# as DATE)  AND INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND STATUS !='DELETED' AND (AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR AUTHORIZE_STATUS_2 IS NULL)
        AND PARTICULARS NOT LIKE '%Pending Interest%'  AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS!='REJECTED')
        <dynamic>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "S_TRANS_ID">
                    SINGLE_TRANS_ID = #S_TRANS_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY TRANS_ID
    </dynamic-mapped-statement>
    
    <dynamic-mapped-statement name = "getTransferDetailsNotice" result-class = "java.util.HashMap">
        SELECT * FROM TRANSFER_TRANS WHERE LINK_BATCH_ID=#BATCH_ID:VARCHAR# AND INSTRUMENT_NO2=#INSTRUMENT:varchar# AND TRANS_DT=cast(#TRANS_DT# as DATE) AND INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND STATUS !='DELETED' AND (AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR AUTHORIZE_STATUS_2 IS NULL)
        AND PARTICULARS NOT LIKE '%Pending Interest%'  AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS!='REJECTED')
        <dynamic>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY TRANS_ID
    </dynamic-mapped-statement>
 
 <dynamic-mapped-statement name = "getDepositAccountTransferDetails" result-class = "java.util.HashMap">
        SELECT T.TRANS_ID, T.BATCH_ID,AH.AC_HD_DESC AS AC_HD_ID,T.ACT_NUM,T.INP_AMOUNT,T.
        INP_CURR,T.AMOUNT,T.TRANS_DT,T.TRANS_TYPE,T.INST_TYPE,T.
        INST_DT,T.INIT_TRANS_ID,T.INIT_CHANN_TYPE,T.PARTICULARS,T.STATUS,T.
        INSTRUMENT_NO1,T.INSTRUMENT_NO2,T.PROD_ID,T.AUTHORIZE_STATUS,T.AUTHORIZE_BY,T.
        AUTHORIZE_DT,T.AUTHORIZE_REMARKS,T.STATUS_BY,T.BRANCH_ID,T.STATUS_DT,T.
        PROD_TYPE,T.LINK_BATCH_ID,T.LINK_BATCH_DT,T.TRANS_MODE,T.INITIATED_BRANCH,T.
        LOAN_HIERARCHY,T.AUTHORIZE_STATUS_2,T.NARRATION,T.SHIFT,T.
        TRANS_ALL_ID,T.REC_MODE,T.
        SINGLE_TRANS_ID,T.AUTHORIZE_BY_2,T.GL_TRANS_ACT_NUM,T.TRANS_MOD_TYPE FROM TRANSFER_TRANS T
        JOIN AC_HD AH ON AH.AC_HD_ID=T.AC_HD_ID 
        WHERE T.LINK_BATCH_ID=#BATCH_ID:VARCHAR# AND T.TRANS_DT=cast(#TRANS_DT# as DATE) AND T.INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND T.STATUS !='DELETED' AND (T.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR T.AUTHORIZE_STATUS_2 IS NULL)
        AND (T.AUTHORIZE_STATUS IS NULL OR T.AUTHORIZE_STATUS!='REJECTED')
        <dynamic>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (T.AUTHORIZE_STATUS IS NULL OR T.AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    T.AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTH_REJ_STATUS">
             (t.authorize_status != 'AUTHORIZED' OR t.authorize_status IS NULL)
             </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY T.TRANS_ID
    </dynamic-mapped-statement>
        
    <dynamic-mapped-statement name = "getCashDetails" result-class = "java.util.HashMap">
        SELECT C.TRANS_ID, AH.AC_HD_DESC AS AC_HD_ID, C.ACT_NUM, C.INP_AMOUNT, C.INP_CURR, C.AMOUNT, C.TRANS_DT, C.TRANS_TYPE, C.INST_TYPE, C.INST_DT, 
        C.TOKEN_NO, C.INIT_TRANS_ID, C.INIT_CHANN_TYPE, C.PARTICULARS, C.STATUS, C.INSTRUMENT_NO1, 
        C.INSTRUMENT_NO2, C.AVAILABLE_BALANCE, C.PROD_ID, C.PROD_TYPE, C.AUTHORIZE_STATUS, 
        C.AUTHORIZE_BY, C.AUTHORIZE_DT, C.AUTHORIZE_REMARKS, C.STATUS_BY, C.BRANCH_ID, 
        C.STATUS_DT, C.LINK_BATCH_ID, C.INITIATED_BRANCH, C.LINK_BATCH_DT, C.PAYMENT_STATUS, 
        C.PAYMENT_BY, C.PAYMENT_STATUS_DT, C.PAN_NUMBER, C.AUTHORIZE_STATUS_2, C.AUTHORIZE_BY_2, 
        C.AUTHORIZE_DT_2, C.LOAN_HIERARCHY, C.NARRATION, C.SCREEN_NAME, C.SHIFT, 
        C.TRANS_ALL_ID, 
        C.SINGLE_TRANS_ID,C.GL_TRANS_ACT_NUM, C.TRANS_MOD_TYPE FROM CASH_TRANS C
        JOIN AC_HD AH ON C.AC_HD_ID=AH.AC_HD_ID
        WHERE C.LINK_BATCH_ID =#BATCH_ID:VARCHAR# AND C.TRANS_DT=cast(#TRANS_DT# as DATE) AND
        C.INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND C.STATUS !='DELETED' AND (C.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR C.AUTHORIZE_STATUS_2 IS NULL) AND 
        (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS !='REJECTED')
        <dynamic>
            <isParameterPresent>
                <isNotNull  property="singleTrasnId">
                    AND C.SINGLE_TRANS_ID =#singleTrasnId:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull  property="GL_TRANS_ACT_NUM">
                    AND C.GL_TRANS_ACT_NUM =#GL_TRANS_ACT_NUM:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "SCREEN_NAME">
                    C.SCREEN_NAME = #SCREEN_NAME:VARCHAR#
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    C.AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTH_REJ_STATUS">
            ( C.AUTHORIZE_STATUS != 'AUTHORIZED' OR C.AUTHORIZE_STATUS IS NULL)
             </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY C.TRANS_ID
    </dynamic-mapped-statement>
       
    <dynamic-mapped-statement name = "getCashDetailsWithTransId" result-class = "java.util.HashMap">
        SELECT * FROM CASH_TRANS WHERE LINK_BATCH_ID =#BATCH_ID:VARCHAR#  AND TRANS_DT= cast(#TRANS_DT# as DATE) AND INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND STATUS !='DELETED' AND (AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR AUTHORIZE_STATUS_2 IS NULL) AND 
        (AUTHORIZE_STATUS IS NULL )
        <dynamic>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "S_CASH_ID">
                    SINGLE_TRANS_ID = #S_CASH_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY TRANS_ID
    </dynamic-mapped-statement>   
       
       
    <dynamic-mapped-statement name = "getCashDetailsMultiple" result-class = "java.util.HashMap">
        SELECT C.TRANS_ID, AH.AC_HD_DESC AS AC_HD_ID, C.ACT_NUM, C.INP_AMOUNT, C.INP_CURR, C.AMOUNT, C.TRANS_DT, C.TRANS_TYPE, C.INST_TYPE, C.INST_DT, 
        C.TOKEN_NO, C.INIT_TRANS_ID, C.INIT_CHANN_TYPE, C.PARTICULARS, C.STATUS, C.INSTRUMENT_NO1, 
        C.INSTRUMENT_NO2, C.AVAILABLE_BALANCE, C.PROD_ID, C.PROD_TYPE, C.AUTHORIZE_STATUS, 
        C.AUTHORIZE_BY, C.AUTHORIZE_DT, C.AUTHORIZE_REMARKS, C.STATUS_BY, C.BRANCH_ID, 
        C.STATUS_DT, C.LINK_BATCH_ID, C.INITIATED_BRANCH, C.LINK_BATCH_DT, C.PAYMENT_STATUS, 
        C.PAYMENT_BY, C.PAYMENT_STATUS_DT, C.PAN_NUMBER, C.AUTHORIZE_STATUS_2, C.AUTHORIZE_BY_2, 
        C.AUTHORIZE_DT_2, C.LOAN_HIERARCHY, C.NARRATION, C.SCREEN_NAME, C.SHIFT, 
        C.TRANS_ALL_ID, 
        C.SINGLE_TRANS_ID,C.GL_TRANS_ACT_NUM, C.TRANS_MOD_TYPE FROM CASH_TRANS C
        JOIN AC_HD AH ON C.AC_HD_ID=AH.AC_HD_ID 
        WHERE C.TRANS_ID =#TRANS_ID:VARCHAR# AND C.TRANS_DT= cast(#TRANS_DT# as DATE) AND C.INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND C.STATUS !='DELETED' AND (C.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR C.AUTHORIZE_STATUS_2 IS NULL) AND 
        (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS !='REJECTED')
        <dynamic>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    C.AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY C.TRANS_ID
    </dynamic-mapped-statement>
       
       
    <mapped-statement name = "getAuthorizationsListForMutipleCash" result-class = "java.util.HashMap">
        SELECT DISTINCT TRANS_ID,AC.AC_HD_DESC,AMOUNT,TRANS_DT
            FROM CASH_TRANS,AC_HD AC
            WHERE AC.AC_HD_ID = CASH_TRANS.AC_HD_ID
            AND AUTHORIZE_REMARKS = 'MULTIPLE_CASH'
            AND CASH_TRANS.AUTHORIZE_STATUS IS NULL
            AND CASH_TRANS.STATUS_BY != #USER_ID:VARCHAR#
            AND CASH_TRANS.STATUS != 'DELETED'
            AND INITIATED_BRANCH = #BRANCH_CODE:VARCHAR#
            AND TRANS_DT = cast(#TRANS_DT# as DATE)
    </mapped-statement>
        
    <mapped-statement name="getCountForReceiptCashierAuthorizeMultipleCash" result-class="java.util.LinkedHashMap"> 
        <!--SELECT COUNT(TRANS_ID) AS COUNT FROM CASH_TRANS WHERE TRANS_ID = #IRID:VARCHAR# AND trans_type = 'CREDIT' AND payment_status IS NULL AND TRANS_DT = #TRANSDT:DATE#-->
        SELECT COUNT (trans_id) AS COUNT
        FROM cash_trans
        WHERE single_trans_id = #IRID:VARCHAR#
        AND trans_type = 'CREDIT'
        AND payment_status IS NULL
        AND trans_dt = cast(#TRANSDT# as DATE)
    </mapped-statement>
        
    <mapped-statement name = "getCashierAuthorizationsListForMutipleCash" result-class = "java.util.HashMap">   
            SELECT DISTINCT TRANS_ID,AC.AC_HD_DESC,AMOUNT,TRANS_DT
            FROM CASH_TRANS,AC_HD AC
            WHERE AC.AC_HD_ID = CASH_TRANS.AC_HD_ID
            AND AUTHORIZE_REMARKS = 'MULTIPLE_CASH'
            AND CASH_TRANS.AUTHORIZE_STATUS IS NULL
            AND CASH_TRANS.STATUS_BY != #USER_ID:VARCHAR#
            AND PAYMENT_STATUS IS NOT NULL
            AND TRANS_TYPE = 'CREDIT'
            AND CASH_TRANS.STATUS != 'DELETED'
            AND INITIATED_BRANCH = #BRANCH_CODE:VARCHAR#
            AND TRANS_DT = cast(#TRANS_DT# as DATE)
            UNION
            SELECT DISTINCT TRANS_ID,AC.AC_HD_DESC,AMOUNT,TRANS_DT
            FROM CASH_TRANS,AC_HD AC
            WHERE AC.AC_HD_ID = CASH_TRANS.AC_HD_ID
            AND AUTHORIZE_REMARKS = 'MULTIPLE_CASH'
            AND CASH_TRANS.AUTHORIZE_STATUS IS NULL
            AND CASH_TRANS.STATUS_BY !=  #USER_ID:VARCHAR#
            AND PAYMENT_STATUS IS NULL
            AND TRANS_TYPE = 'DEBIT'
            AND CASH_TRANS. STATUS != 'DELETED'
            AND INITIATED_BRANCH = #BRANCH_CODE:VARCHAR#
            AND TRANS_DT = cast(#TRANS_DT# as DATE)
    </mapped-statement>
        
    <mapped-statement name = "getAllForSelectedFromCash" result-class = "java.util.HashMap">
        <!--SELECT AH.AC_HD_DESC,CT.AC_HD_ID,AMOUNT,TRANS_DT,LINK_BATCH_ID,TRANS_TYPE,INST_TYPE,INST_DT,INIT_CHANN_TYPE,PARTICULARS,INSTRUMENT_NO2,NARRATION FROM CASH_TRANS CT,
        AC_HD AH WHERE CT.AUTHORIZE_REMARKS='MULTIPLE_CASH' AND CT.AUTHORIZE_STATUS IS NULL AND CT.TRANS_ID=#TRANS_ID:VARCHAR#  AND AH.AC_HD_ID=CT.AC_HD_ID-->
           <!-- select TRANS_ID,AC_HD_ID,AMOUNT,TRANS_DT,TRANS_TYPE,INST_TYPE,INST_DT,INIT_CHANN_TYPE,PARTICULARS,INSTRUMENT_NO2,NARRATION from cash_trans
            where AUTHORIZE_REMARKS='MULTIPLE_CASH' and AUTHORIZE_STATUS is null and trans_id=#TRANS_ID:VARCHAR# -->
        SELECT ct.trans_id,ah.ac_hd_desc, ct.ac_hd_id, amount, trans_dt, link_batch_id,
        trans_type, inst_type, inst_dt, init_chann_type, particulars,
        instrument_no2, narration
        FROM cash_trans ct, ac_hd ah
        WHERE ct.authorize_remarks = 'MULTIPLE_CASH'
        AND ct.authorize_status IS NULL
        AND ct.single_trans_id = #SINGLE_TRANS_ID:VARCHAR#
        AND ct.trans_dt = cast(#TRANS_DT# as DATE)
        AND ah.ac_hd_id = ct.ac_hd_id
    </mapped-statement>
        
    <mapped-statement name = "getInstDate" result-class = "java.util.HashMap">
        SELECT NEXT_INSTALLMENT_DATE FROM MDS_PRIZED_MONEY_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND DIVISION_NO = cast(#DIVISION_NO# as NUMERIC) AND
        NEXT_INSTALLMENT_DATE &gt;=cast(#NEXT_INSTALLMENT_DATE# as DATE) AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED' 
    </mapped-statement>
        
    <dynamic-mapped-statement name = "getStandingInsDetails" result-class = "java.util.HashMap">
           <!-- SELECT CHITTAL_NO,MEMBER_NAME,INST_AMT,PROD_TYPE,PROD_ID,DR_ACT_NO FROM MDS_APPLICATION WHERE
            STATUS!= 'DELETED' AND AUTHORIZE_STATUS='AUTHORIZED' AND STANDING_INSTN='Y' AND SCHEME_NAME =#SCHEME_NAME# ORDER BY CHITTAL_NO -->
            <!--  SELECT MA.CHITTAL_NO,MA.MEMBER_NAME,MA.INST_AMT,MA.PROD_TYPE,MA.PROD_ID,MA.DR_ACT_NO FROM 
                    MDS_APPLICATION MA, (SELECT CHITTAL_NO, SUM(NO_OF_INST) NO_OF_INST FROM MDS_TRANS_DETAILS WHERE
                    STATUS!='DELETED' AND AUTHORIZE_STATUS IS NOT NULL AND AUTHORIZE_STATUS='AUTHORIZED' GROUP BY CHITTAL_NO) A,
                    (SELECT M.SCHEME_NAME, M.DIVISION_NO, M.INSTALLMENT_NO FROM MDS_PRIZED_MONEY_DETAILS M, MDS_SCHEME_DETAILS MSD WHERE 
                    M.SCHEME_NAME = MSD.SCHEME_NAME AND NEXT_INSTALLMENT_DATE IN ( SELECT MAX (NEXT_INSTALLMENT_DATE) 
                    FROM MDS_PRIZED_MONEY_DETAILS M1 WHERE M.SCHEME_NAME = M1.SCHEME_NAME AND ADD_MONTHS (M1.NEXT_INSTALLMENT_DATE, -1)&lt; #CURR_DATE#)) B
                    WHERE MA.STATUS!= 'DELETED' AND MA.AUTHORIZE_STATUS='AUTHORIZED' AND MA.STANDING_INSTN='Y' AND 
                    MA.CHITTAL_NO=A.CHITTAL_NO AND MA.SCHEME_NAME=B.SCHEME_NAME AND MA.DIVISION_NO=B.DIVISION_NO AND
                    B.INSTALLMENT_NO-A.NO_OF_INST>0 AND MA.SCHEME_NAME =#SCHEME_NAME# ORDER BY MA.CHITTAL_NO -->
                    
          <!--    SELECT  MA.CHITTAL_NO,MA.SUB_NO,MA.MEMBER_NAME,MA.INST_AMT,MA.PROD_TYPE,MA.PROD_ID,MA.DR_ACT_NO FROM MDS_APPLICATION MA, 
                    (SELECT CHITTAL_NO, SUM(NO_OF_INST) NO_OF_INST FROM MDS_TRANS_DETAILS WHERE STATUS!='DELETED' AND 
                    AUTHORIZE_STATUS IS NOT NULL AND AUTHORIZE_STATUS='AUTHORIZED' GROUP BY CHITTAL_NO) A, 
                    (SELECT M.SCHEME_NAME, MAX(M.INSTALLMENT_NO) AS INSTALLMENT_NO FROM MDS_PRIZED_MONEY_DETAILS M, MDS_SCHEME_DETAILS MSD 
                    WHERE M.SCHEME_NAME = MSD.SCHEME_NAME AND 
                    ADD_MONTHS(M.NEXT_INSTALLMENT_DATE, -1) &lt; #CURR_DATE#
                    GROUP BY M.SCHEME_NAME) B WHERE MA.STATUS!= 'DELETED' AND MA.AUTHORIZE_STATUS='AUTHORIZED' 
                    AND MA.STANDING_INSTN='Y' AND MA.CHITTAL_NO=A.CHITTAL_NO AND MA.SCHEME_NAME=B.SCHEME_NAME 
                    AND B.INSTALLMENT_NO-A.NO_OF_INST>0 AND MA.SCHEME_NAME =#SCHEME_NAME#
                    ORDER BY MA.CHITTAL_NO 
                    
 SELECT DISTINCT MA.CHITTAL_NO,MA.SUB_NO,MA.MEMBER_NAME,MA.INST_AMT,MA.PROD_TYPE,MA.PROD_ID,MA.DR_ACT_NO,AM.AVAILABLE_BALANCE FROM MDS_APPLICATION MA, 
        MDS_MASTER_MAINTENANCE MM, ACT_MASTER AM, (SELECT CHITTAL_NO,SUB_NO,SUM(NO_OF_INST) NO_OF_INST FROM MDS_TRANS_DETAILS WHERE STATUS!='DELETED' 
        AND AUTHORIZE_STATUS IS NOT NULL AND AUTHORIZE_STATUS='AUTHORIZED' GROUP BY CHITTAL_NO,SUB_NO) A, (SELECT M.SCHEME_NAME, 
        MAX(M.INSTALLMENT_NO) AS INSTALLMENT_NO,BONUS_FIRST_INSTALLMENT FROM MDS_PRIZED_MONEY_DETAILS M, MDS_PRODUCT_GENERAL_DETAILS MPGD, MDS_SCHEME_DETAILS MSD WHERE 
        M.SCHEME_NAME = MSD.SCHEME_NAME AND MPGD.PROD_ID =MSD.PROD_ID AND ADD_MONTHS(M.NEXT_INSTALLMENT_DATE, -1) &lt; #CURR_DATE# GROUP BY M.SCHEME_NAME,BONUS_FIRST_INSTALLMENT) B 
        WHERE MA.STATUS!= 'DELETED' AND MA.AUTHORIZE_STATUS='AUTHORIZED' AND MA.STANDING_INSTN='Y' AND MA.CHITTAL_NO=A.CHITTAL_NO AND MA.SUB_NO=A.SUB_NO AND
        MA.CHITTAL_NO=MM.CHITTAL_NO AND MA.SUB_NO=MM.SUB_NO AND MA.DR_ACT_NO=AM.ACT_NUM AND MA.SCHEME_NAME=MM.SCHEME_NAME AND NVL(MM.LOCK_STATUS,'N')='N' AND 
        MA.SCHEME_NAME=B.SCHEME_NAME AND B.INSTALLMENT_NO-A.NO_OF_INST&gt;DECODE(B.BONUS_FIRST_INSTALLMENT,'Y',0,-1) AND MA.SCHEME_NAME =#SCHEME_NAME# 
        ORDER BY MA.CHITTAL_NO -->
                    
        SELECT DISTINCT MA.CHITTAL_NO,MA.SUB_NO,MA.MEMBER_NAME,MA.INST_AMT,MA.PROD_TYPE,MA.PROD_ID,MA.DR_ACT_NO,(AM.AVAILABLE_BALANCE - AM.SHADOW_DEBIT) AS AVAILABLE_BALANCE,AM.MIN_BALANCE FROM 
        MDS_APPLICATION MA, MDS_MASTER_MAINTENANCE MM, ALL_CUSTOMER_BALANCE AM, (SELECT CHITTAL_NO,SUB_NO,SUM(NO_OF_INST) NO_OF_INST 
        FROM MDS_TRANS_DETAILS WHERE STATUS!='DELETED' AND AUTHORIZE_STATUS IS NOT NULL AND AUTHORIZE_STATUS='AUTHORIZED' 
        GROUP BY CHITTAL_NO,SUB_NO) A, (SELECT M.SCHEME_NAME, MAX(M.INSTALLMENT_NO) AS 
        INSTALLMENT_NO,BONUS_FIRST_INSTALLMENT,ADVANCE_COLLECTION FROM MDS_PRIZED_MONEY_DETAILS M, MDS_PRODUCT_GENERAL_DETAILS MPGD, 
        MDS_SCHEME_DETAILS MSD WHERE M.SCHEME_NAME = MSD.SCHEME_NAME AND MPGD.PROD_ID =MSD.PROD_ID AND ADD_MONTHS
        (M.NEXT_INSTALLMENT_DATE, -1)  &lt; cast(#CURR_DATE# as DATE) GROUP BY M.SCHEME_NAME,BONUS_FIRST_INSTALLMENT,ADVANCE_COLLECTION) B WHERE MA.STATUS!= 'DELETED' AND 
        MA.AUTHORIZE_STATUS='AUTHORIZED' AND MA.STANDING_INSTN='Y' AND MA.CHITTAL_NO=A.CHITTAL_NO AND MA.SUB_NO=A.SUB_NO AND 
        MA.CHITTAL_NO=MM.CHITTAL_NO AND MA.SUB_NO=MM.SUB_NO AND MA.DR_ACT_NO=AM.ACT_NUM AND <!--MA.BRANCH_CODE=AM.BRANCH_CODE AND--> MA.SCHEME_NAME=MM.SCHEME_NAME 
        AND NVL(MM.LOCK_STATUS,'N')='N' AND MA.SCHEME_NAME=B.SCHEME_NAME AND B.INSTALLMENT_NO-A.NO_OF_INST&gt;DECODE
        (B.ADVANCE_COLLECTION,'Y',0,-1) 
        AND MA.SCHEME_NAME =#SCHEME_NAME:VARCHAR# 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "PROD_ID">
                    MA.PROD_ID = #PROD_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        AND MM.CHIT_CLOSE_DT IS NULL
        AND CHECK_MDS_AUTH_PENDING(MA.CHITTAL_NO, MA.SCHEME_NAME) = 0
        ORDER BY MA.CHITTAL_NO
    </dynamic-mapped-statement>
        
    <mapped-statement name = "getSelectSchemeName" result-class = "java.util.HashMap">
        SELECT SCHEME_NAME, MP_MDS_CODE AS SCHEME_DESC, MULTIPLE_MEMBER  FROM MDS_SCHEME_DETAILS WHERE STATUS!='DELETED' AND AUTHORIZED_STATUS='AUTHORIZED' AND SCHEME_NAME=#SCHEME_NAME:VARCHAR#
    </mapped-statement>

    <mapped-statement name = "getFromDateForLetterGeneration" result-class = "java.util.HashMap">
        <!--select nvl(max(MPD.DRAW_AUCTION_DATE),MSD.SCHEME_START_DT) from MDS_PRIZED_MONEY_DETAILS mpd
	 	join MDS_SCHEME_DETAILS msd on MSD.SCHEME_NAME = MPD.SCHEME_NAME
	 	where MSD.SCHEME_NAME = #SCHEME_NAME:VARCHAR# group by MSD.SCHEME_START_DT-->
		select to_date(get_FromDate_mdsletter( #SCHEME_NAME:VARCHAR#),'DD/mm/yyyy') from dual
    </mapped-statement>
        
    <mapped-statement name = "getSelectSchemeNameForApplication" result-class = "java.util.HashMap">
        SELECT SCHEME_NAME, MP_MDS_CODE AS SCHEME_DESC, MULTIPLE_MEMBER,PROD_DESC  FROM MDS_SCHEME_DETAILS WHERE STATUS!='DELETED' AND AUTHORIZED_STATUS='AUTHORIZED' AND SCHEME_NAME=#SCHEME_NAME:VARCHAR#
    </mapped-statement>
        
        
    <mapped-statement name = "getSelectChittalNo" result-class = "java.util.HashMap">
        SELECT SCHEME_NAME,CHITTAL_NO FROM MDS_APPLICATION WHERE STATUS!='DELETED' AND AUTHORIZE_STATUS='AUTHORIZED' AND CHITTAL_NO =#CHITTAL_NO:VARCHAR#
        UNION ALL
        SELECT SCHEME_NAME,CHITTAL_NO FROM MDS_APPLICATION MA,OLD_AC_NOS TT WHERE STATUS!='DELETED' AND AUTHORIZE_STATUS='AUTHORIZED' 
        AND MA.CHITTAL_NO =TT.NEW_ACT_NUM AND TT.OLD_ACT_NUM=#CHITTAL_NO:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name = "getSelectBankAdvanceDetail" result-class = "java.util.LinkedHashMap">
        SELECT COUNT(*) AS COUNT,BONUS_AMT FROM MDS_BANK_ADVANCE WHERE REPAID='N' AND  SCHEME_NAME=#SCHEME_NAME:VARCHAR# AND CHITTAL_NO = #CHITTAL_NO:VARCHAR# AND 
        INSTALLMENT_NO&gt;=cast(#INSTALLMENT_NO# as NUMERIC) AND STATUS!='DELETED' AND AUTHORIZE_STATUS ='AUTHORIZED' GROUP BY BONUS_AMT
    </mapped-statement>
    
    <mapped-statement name = "getSelectBankAdvanceDetailsData" result-class = "java.util.LinkedHashMap">
        SELECT * FROM MDS_BANK_ADVANCE WHERE REPAID='N' AND  SCHEME_NAME=#SCHEME_NAME:VARCHAR# AND CHITTAL_NO = #CHITTAL_NO:VARCHAR# AND SUB_NO = cast(#SUB_NO# as NUMERIC) AND 
        INSTALLMENT_NO&gt;=cast(#INSTALLMENT_NO# as NUMERIC) AND STATUS!='DELETED' AND AUTHORIZE_STATUS ='AUTHORIZED' ORDER BY BANK_ADV_ID
    </mapped-statement>
        
    <dynamic-mapped-statement name = "checkPendingForAuthorization" result-class = "java.util.LinkedHashMap">
        SELECT DISTINCT CHITTAL_NO AS CHIT_NO,SUB_NO,CHITTAL_NO||'_'||SUB_NO AS CHITTAL_NO FROM MDS_RECEIPT_ENTRY WHERE STATUS!='DELETED' AND AUTHORIZE_STATUS IS NULL 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "SCHEME_NAME">
                    SCHEME_NAME=#SCHEME_NAME:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "CHITTAL_NO">
                    CHITTAL_NO=#CHITTAL_NO:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "SUB_NO">
                    SUB_NO=cast(#SUB_NO# as NUMERIC)
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY CHITTAL_NO
    </dynamic-mapped-statement>
        
    <dynamic-mapped-statement name = "getMultipleCashTransDetails" result-class = "java.util.HashMap">
         SELECT C.TRANS_ID, AH.AC_HD_DESC AS AC_HD_ID, C.ACT_NUM, C.INP_AMOUNT, C.INP_CURR, C.AMOUNT, C.TRANS_DT, C.TRANS_TYPE, C.INST_TYPE, C.INST_DT, 
        C.TOKEN_NO, C.INIT_TRANS_ID, C.INIT_CHANN_TYPE, C.PARTICULARS, C.STATUS, C.INSTRUMENT_NO1, 
        C.INSTRUMENT_NO2, C.AVAILABLE_BALANCE, C.PROD_ID, C.PROD_TYPE, C.AUTHORIZE_STATUS, 
        C.AUTHORIZE_BY, C.AUTHORIZE_DT, C.AUTHORIZE_REMARKS, C.STATUS_BY, C.BRANCH_ID, 
        C.STATUS_DT, C.LINK_BATCH_ID, C.INITIATED_BRANCH, C.LINK_BATCH_DT, C.PAYMENT_STATUS, 
        C.PAYMENT_BY, C.PAYMENT_STATUS_DT, C.PAN_NUMBER, C.AUTHORIZE_STATUS_2, C.AUTHORIZE_BY_2, 
        C.AUTHORIZE_DT_2, C.LOAN_HIERARCHY, C.NARRATION, C.SCREEN_NAME, C.SHIFT, 
        C.TRANS_ALL_ID,
        C.SINGLE_TRANS_ID, C.GL_TRANS_ACT_NUM, C.TRANS_MOD_TYPE FROM CASH_TRANS C
        JOIN AC_HD AH ON C.AC_HD_ID=AH.AC_HD_ID  
        WHERE (C.LINK_BATCH_ID =#BATCH_ID:VARCHAR# OR C.LINK_BATCH_ID =#BATCH_ID1:VARCHAR# OR C.LINK_BATCH_ID =#BATCH_ID2:VARCHAR#) AND C.TRANS_DT=cast(#TRANS_DT# as DATE) AND C.INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND C.STATUS !='DELETED' AND (C.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR C.AUTHORIZE_STATUS_2 IS NULL) AND 
        (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS !='REJECTED')
        <dynamic>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    C.AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY C.TRANS_ID
    </dynamic-mapped-statement>
    
    <dynamic-mapped-statement name = "getMultipleTransferDetails" result-class = "java.util.HashMap">
        SELECT * FROM TRANSFER_TRANS WHERE (LINK_BATCH_ID =#BATCH_ID:VARCHAR# OR LINK_BATCH_ID =#BATCH_ID1:VARCHAR# OR LINK_BATCH_ID =#BATCH_ID2:VARCHAR#) AND TRANS_DT= cast(#TRANS_DT# as DATE) AND INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND STATUS !='DELETED' AND (AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR AUTHORIZE_STATUS_2 IS NULL)
        AND PARTICULARS NOT LIKE '%Pending Interest%'  AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS!='REJECTED')
        <dynamic>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY TRANS_ID
    </dynamic-mapped-statement>

    <mapped-statement name = "getMDSSchemeDetails" result-class = "java.util.LinkedHashMap">
        SELECT * FROM MDS_SCHEME_DETAILS WHERE STATUS!='DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED' AND SCHEME_NAME=#SCHEME_NAME:VARCHAR#
    </mapped-statement>
    
    <mapped-statement name = "getInitBrId" result-class = "java.util.LinkedHashMap">
    	SELECT distinct INITIATED_BRANCH  FROM TRANSFER_TRANS where LINK_BATCH_ID=#LINK_BATCH_ID:VARCHAR# AND TRANS_DT= cast(#TRANS_DT# as DATE) AND SINGLE_TRANS_ID = #SINGLE_TRANS_ID:VARCHAR# 
    </mapped-statement> 
       
    <mapped-statement name = "getMaxDivisionNoFromPrizedDetailsTable" result-class = "java.util.LinkedHashMap">
        SELECT MAX(DIVISION_NO) AS DIVISION_NO FROM MDS_PRIZED_MONEY_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR#  AND 
        cast(#CURR_DT# as DATE) BETWEEN DRAW_AUCTION_DATE AND NEXT_INSTALLMENT_DATE-1 AND STATUS!='DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement>

    <mapped-statement name = "getDefaulterDts" result-class = "java.util.LinkedHashMap">
        select nvl(DEFAULTER,'N') as DEFAULTER from mds_master_maintenance where chittal_no=#CHITTAL_NO:VARCHAR# and scheme_name=#SCHEME_NAME:VARCHAR#
    </mapped-statement>


    <mapped-statement name = "getClosedRate" result-class = "java.util.LinkedHashMap">
        select penal_closed_rate as CLOSED_PENAL 
        from mds_scheme_details where SCHEME_NAME=#SCHEME_NAME:VARCHAR#
    </mapped-statement>
    
    <mapped-statement name = "getMdsBAnkAdvForReciept" result-class = "java.util.LinkedHashMap">
        select count(*) as NUM from mds_bank_advance where chittal_no=#CHITTAL:VARCHAR# 
        and sub_no=cast(#SUB_NO# as NUMERIC) and BANK_ADV_DT between cast(#NEXT_INSTALL# as DATE) and cast(#CURR_DATE# as DATE)
    </mapped-statement>

    <mapped-statement name = "checkMdsAdv" result-class = "java.util.LinkedHashMap">
        select ADVANCE_COLLECTION from mds_product_general_details where prod_id=
        (select prod_id from mds_scheme_details where scheme_name=#SCHEME_NAME:VARCHAR#)
    </mapped-statement>
    
    <mapped-statement name = "getShareCount" result-class = "java.util.LinkedHashMap">
        select COUNT(*)+1 AS COUNT
        from share_acct_DETAILS sa where SA.AUTHORIZE='AUTHORIZED' 
        AND SA.STATUS='CREATED' AND SA.SHARE_ACCT_NO=#SHARE_ACCT_NO:VARCHAR#
    </mapped-statement>
         
    <mapped-statement name = "updateRemitIssueTransAppl" inline-parameters = "true">         
        update REMIT_ISSUE_TRANS
        set BATCH_DT= cast(#CURRDATE# as DATE)
        where batch_id=#BATCH_ID:VARCHAR#
        and trans_id=#TRANS_ID:VARCHAR#
        and BRANCH_CODE=#BRANCH_CODE:VARCHAR#
    </mapped-statement>
    
    <dynamic-mapped-statement name = "getTransferDetailsForAuthorizeList" result-class = "java.util.HashMap">
        SELECT T.TRANS_ID, T.BATCH_ID,AH.AC_HD_DESC AS AC_HD_ID,T.ACT_NUM,T.INP_AMOUNT,T.
        INP_CURR,T.AMOUNT,T.TRANS_DT,T.TRANS_TYPE,T.INST_TYPE,T.
        INST_DT,T.INIT_TRANS_ID,T.INIT_CHANN_TYPE,T.PARTICULARS,T.STATUS,T.
        INSTRUMENT_NO1,T.INSTRUMENT_NO2,T.PROD_ID,T.AUTHORIZE_STATUS,T.AUTHORIZE_BY,T.
        AUTHORIZE_DT,T.AUTHORIZE_REMARKS,T.STATUS_BY,T.BRANCH_ID,T.STATUS_DT,T.
        PROD_TYPE,T.LINK_BATCH_ID,T.LINK_BATCH_DT,T.TRANS_MODE,T.INITIATED_BRANCH,T.
        LOAN_HIERARCHY,T.AUTHORIZE_STATUS_2,T.NARRATION,T.SHIFT,T.
        TRANS_ALL_ID,T.REC_MODE,T.
        SINGLE_TRANS_ID,T.AUTHORIZE_BY_2,T.GL_TRANS_ACT_NUM,T.TRANS_MOD_TYPE FROM TRANSFER_TRANS T
        JOIN AC_HD AH ON AH.AC_HD_ID=T.AC_HD_ID 
        WHERE T.LINK_BATCH_ID=#BATCH_ID:VARCHAR# AND T.INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND T.STATUS !='DELETED' AND (T.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR T.AUTHORIZE_STATUS_2 IS NULL)
        AND T.PARTICULARS NOT LIKE '%Pending Interest%'  AND (T.AUTHORIZE_STATUS IS NULL )
        <dynamic>
            <isParameterPresent>
                <isNotNull  property="GL_TRANS_ACT_NUM">
                    AND C.GL_TRANS_ACT_NUM =#GL_TRANS_ACT_NUM:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (T.AUTHORIZE_STATUS IS NULL OR T.AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    T.AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY T.TRANS_ID
    </dynamic-mapped-statement>
        
    <dynamic-mapped-statement name = "getCashDetailsForAuthorizeList" result-class = "java.util.HashMap">
        SELECT C.TRANS_ID, AH.AC_HD_DESC AS AC_HD_ID, C.ACT_NUM, C.INP_AMOUNT, C.INP_CURR, C.AMOUNT, C.TRANS_DT, C.TRANS_TYPE, C.INST_TYPE, C.INST_DT, 
        C.TOKEN_NO, C.INIT_TRANS_ID, C.INIT_CHANN_TYPE, C.PARTICULARS, C.STATUS, C.INSTRUMENT_NO1, 
        C.INSTRUMENT_NO2, C.AVAILABLE_BALANCE, C.PROD_ID, C.PROD_TYPE, C.AUTHORIZE_STATUS, 
        C.AUTHORIZE_BY, C.AUTHORIZE_DT, C.AUTHORIZE_REMARKS, C.STATUS_BY, C.BRANCH_ID, 
        C.STATUS_DT, C.LINK_BATCH_ID, C.INITIATED_BRANCH, C.LINK_BATCH_DT, C.PAYMENT_STATUS, 
        C.PAYMENT_BY, C.PAYMENT_STATUS_DT, C.PAN_NUMBER, C.AUTHORIZE_STATUS_2, C.AUTHORIZE_BY_2, 
        C.AUTHORIZE_DT_2, C.LOAN_HIERARCHY, C.NARRATION, C.SCREEN_NAME, C.SHIFT, 
        C.TRANS_ALL_ID, 
        C.SINGLE_TRANS_ID,C.GL_TRANS_ACT_NUM, C.TRANS_MOD_TYPE FROM CASH_TRANS C
        JOIN AC_HD AH ON C.AC_HD_ID=AH.AC_HD_ID 
        WHERE C.LINK_BATCH_ID =#BATCH_ID:VARCHAR# AND C.INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND C.STATUS !='DELETED' AND (C.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR C.AUTHORIZE_STATUS_2 IS NULL) AND 
        (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS !='REJECTED')
        <dynamic>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    C.AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY C.TRANS_ID
    </dynamic-mapped-statement>
    
   <mapped-statement name = "getMdsReceiptEntryAuthStatus" result-class = "java.util.HashMap">         
        select MRE.CHITTAL_NO,MRE.STATUS_BY from MDS_RECEIPT_ENTRY mre where MRE.AUTHORIZE_STATUS is null
        and MRE.CHITTAL_NO = #CHITTAL_NO:VARCHAR# 
        and MRE.STATUS_DT = cast(#STATUS_DT# as DATE)
    </mapped-statement>
    
    <mapped-statement name = "getChittalLastInstDetails" result-class = "java.util.HashMap">         
        SELECT *FROM MDS_SCHEME_DETAILS MS WHERE MS.NO_OF_INSTALLMENTS =(SELECT SUM(MT.NO_OF_INST) FROM 
        MDS_TRANS_DETAILS MT,MDS_APPLICATION MA
        WHERE MA.CHITTAL_NO = MT.CHITTAL_NO AND MA.AUTHORIZE_STATUS = 'AUTHORIZED' AND MT.AUTHORIZE_STATUS = 'AUTHORIZED' 
        AND MT.STATUS !='DELETED'
        AND MA.CHITTAL_NO =#CHITTAL_NO:VARCHAR#
        AND MA.SCHEME_NAME =#SCHEME_NAME:VARCHAR# ) AND MS.SCHEME_NAME =#SCHEME_NAME:VARCHAR#
    </mapped-statement>

    <mapped-statement name = "updateMasterMaintenceCloseDt" result-class = "java.util.HashMap">
        UPDATE MDS_MASTER_MAINTENANCE SET CHIT_CLOSE_DT =cast(#LAST_INST_DT# as DATE) WHERE CHITTAL_NO = #CHITTAL_NO:VARCHAR#  
        AND SCHEME_NAME = #SCHEME_NAME:VARCHAR#
    </mapped-statement> 
    
   <mapped-statement name = "getChittalPendingInstAmount" result-class = "java.util.HashMap">
           SELECT SUM (MP.NEXT_BONUS_AMOUNT) AS TOTAL_BONUS
          FROM MDS_PRIZED_MONEY_DETAILS MP
         WHERE MP.INSTALLMENT_NO &gt; cast(#PENDING_INST# as NUMERIC)
           AND MP.SCHEME_NAME = #SCHEME_NAME:VARCHAR#
           AND MP.STATUS != 'DELETED'
           AND MP.AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement> 
    
    <dynamic-mapped-statement name = "getTransferDetailsForCashPayment" result-class = "java.util.HashMap">
        SELECT T.TRANS_ID, T.BATCH_ID,AH.AC_HD_DESC AS AC_HD_ID,T.ACT_NUM,T.INP_AMOUNT,T.
	    INP_CURR,T.AMOUNT,T.TRANS_DT,T.TRANS_TYPE,T.INST_TYPE,T.
	    INST_DT,T.INIT_TRANS_ID,T.INIT_CHANN_TYPE,T.PARTICULARS,T.STATUS,T.
	    INSTRUMENT_NO1,T.INSTRUMENT_NO2,T.PROD_ID,T.AUTHORIZE_STATUS,T.AUTHORIZE_BY,T.
	    AUTHORIZE_DT,T.AUTHORIZE_REMARKS,T.STATUS_BY,T.BRANCH_ID,T.STATUS_DT,T.
	    PROD_TYPE,T.LINK_BATCH_ID,T.LINK_BATCH_DT,T.TRANS_MODE,T.INITIATED_BRANCH,T.
	    LOAN_HIERARCHY,T.AUTHORIZE_STATUS_2,T.NARRATION,T.SHIFT,T.
	    TRANS_ALL_ID,T.REC_MODE,T.SINGLE_TRANS_ID,T.AUTHORIZE_BY_2,T.GL_TRANS_ACT_NUM,T.TRANS_MOD_TYPE FROM TRANSFER_TRANS T
	    JOIN AC_HD AH ON AH.AC_HD_ID=T.AC_HD_ID
	    WHERE T.TRANS_DT= cast(#TRANS_DT# as DATE) AND
	    T.INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# AND T.STATUS !='DELETED' AND (T.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR T.AUTHORIZE_STATUS_2 IS NULL)
	    AND T.PARTICULARS NOT LIKE '%Pending Interest%'  AND (T.AUTHORIZE_STATUS IS NULL OR T.AUTHORIZE_STATUS!='REJECTED')
            and T.LINK_BATCH_ID=(SELECT DISTINCT TT.BATCH_ID
            FROM TRANSFER_TRANS TT
            WHERE TT.GL_TRANS_ACT_NUM =
                   (SELECT DISTINCT CT.GL_TRANS_ACT_NUM
                      FROM CASH_TRANS CT
                     WHERE CT.TRANS_DT = cast(#TRANS_DT# as DATE)
                       AND CT.TRANS_ID = #BATCH_ID:VARCHAR#)
            AND TT.TRANS_DT = cast(#TRANS_DT# as DATE)
            AND STATUS != 'DELETED'
            AND TT.AUTHORIZE_STATUS IS NULL
            AND TT.INITIATED_BRANCH = #BRANCH_CODE:VARCHAR#
            and TT.SCREEN_NAME = 'MDS_MONEY_PAYMENT') AND  T.SCREEN_NAME = 'MDS_MONEY_PAYMENT'
            ORDER BY T.TRANS_ID
    </dynamic-mapped-statement>
    
    <mapped-statement name = "getChittalPrizedDetailsForStanding" result-class = "java.util.HashMap">
       SELECT MD.BRANCH_ID,MD.CHITTAL_NO,MD.DIVISION_NO from MDS_PRIZED_MONEY_DETAILS md where MD.CHITTAL_NO = #CHITTAL_NO:VARCHAR#
       and MD.BRANCH_ID = #BRANCH_ID:VARCHAR# and MD.AUTHORIZED_STATUS = 'AUTHORIZED'
       AND MD.STATUS != 'DELETED' AND MD.SCHEME_NAME = #SCHEME_NAME:VARCHAR#
    </mapped-statement> 
           
    <dynamic-mapped-statement name = "getPendingCashDetails" result-class = "java.util.HashMap">
        SELECT C.TRANS_ID, AH.AC_HD_DESC AS AC_HD_ID, C.ACT_NUM, C.INP_AMOUNT, C.INP_CURR, C.AMOUNT, C.TRANS_DT, C.TRANS_TYPE, C.INST_TYPE, C.INST_DT, 
        C.TOKEN_NO, C.INIT_TRANS_ID, C.INIT_CHANN_TYPE, C.PARTICULARS, C.STATUS, C.INSTRUMENT_NO1, 
        C.INSTRUMENT_NO2, C.AVAILABLE_BALANCE, C.PROD_ID, C.PROD_TYPE, C.AUTHORIZE_STATUS, 
        C.AUTHORIZE_BY, C.AUTHORIZE_DT, C.AUTHORIZE_REMARKS, C.STATUS_BY, C.BRANCH_ID, 
        C.STATUS_DT, C.LINK_BATCH_ID, C.INITIATED_BRANCH, C.LINK_BATCH_DT, C.PAYMENT_STATUS, 
        C.PAYMENT_BY, C.PAYMENT_STATUS_DT, C.PAN_NUMBER, C.AUTHORIZE_STATUS_2, C.AUTHORIZE_BY_2, 
        C.AUTHORIZE_DT_2, C.LOAN_HIERARCHY, C.NARRATION, C.SCREEN_NAME, C.SHIFT, 
        C.TRANS_ALL_ID, 
        C.SINGLE_TRANS_ID,C.GL_TRANS_ACT_NUM, C.TRANS_MOD_TYPE FROM CASH_TRANS C
        JOIN AC_HD AH ON C.AC_HD_ID=AH.AC_HD_ID
        WHERE C.LINK_BATCH_ID =#BATCH_ID:VARCHAR# AND C.TRANS_DT=cast(#TRANS_DT# as DATE) AND
        (C.INITIATED_BRANCH=#BRANCH_CODE:VARCHAR# OR BRANCH_ID=#BRANCH_CODE:VARCHAR#) AND C.STATUS !='DELETED' AND (C.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR C.AUTHORIZE_STATUS_2 IS NULL) AND 
        (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS !='REJECTED')
        <dynamic>
            <isParameterPresent>
                <isNotNull  property="singleTrasnId">
                    AND C.SINGLE_TRANS_ID =#singleTrasnId:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (C.AUTHORIZE_STATUS IS NULL OR C.AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "SCREEN_NAME">
                    C.SCREEN_NAME = #SCREEN_NAME:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    C.AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTH_REJ_STATUS">
                    ( C.AUTHORIZE_STATUS != 'AUTHORIZED' OR C.AUTHORIZE_STATUS IS NULL)
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY C.TRANS_ID
    </dynamic-mapped-statement>
        
        
    <dynamic-mapped-statement name = "getPendingTransferDetails" result-class = "java.util.HashMap">
        SELECT T.TRANS_ID, T.BATCH_ID,AH.AC_HD_DESC AS AC_HD_ID,T.ACT_NUM,T.INP_AMOUNT,T.
        INP_CURR,T.AMOUNT,T.TRANS_DT,T.TRANS_TYPE,T.INST_TYPE,T.
        INST_DT,T.INIT_TRANS_ID,T.INIT_CHANN_TYPE,T.PARTICULARS,T.STATUS,T.
        INSTRUMENT_NO1,T.INSTRUMENT_NO2,T.PROD_ID,T.AUTHORIZE_STATUS,T.AUTHORIZE_BY,T.
        AUTHORIZE_DT,T.AUTHORIZE_REMARKS,T.STATUS_BY,T.BRANCH_ID,T.STATUS_DT,T.
        PROD_TYPE,T.LINK_BATCH_ID,T.LINK_BATCH_DT,T.TRANS_MODE,T.INITIATED_BRANCH,T.
        LOAN_HIERARCHY,T.AUTHORIZE_STATUS_2,T.NARRATION,T.SHIFT,T.
        TRANS_ALL_ID,T.REC_MODE,T.SINGLE_TRANS_ID,T.AUTHORIZE_BY_2,T.GL_TRANS_ACT_NUM,T.TRANS_MOD_TYPE FROM TRANSFER_TRANS T
        JOIN AC_HD AH ON AH.AC_HD_ID=T.AC_HD_ID
        WHERE T.LINK_BATCH_ID=#BATCH_ID:VARCHAR# AND T.TRANS_DT= cast(#TRANS_DT# as DATE) AND
        (T.INITIATED_BRANCH=#BRANCH_CODE# OR T.BRANCH_ID=#BRANCH_CODE#) AND T.STATUS !='DELETED' AND (T.AUTHORIZE_STATUS_2 ='ENTERED_AMOUNT' OR T.AUTHORIZE_STATUS_2 IS NULL)
        AND T.PARTICULARS NOT LIKE '%Pending Interest%'  AND (T.AUTHORIZE_STATUS IS NULL OR T.AUTHORIZE_STATUS!='REJECTED')
        <dynamic>
            <isParameterPresent>
                <isNotNull  property="singleTrasnId">
                    AND T.SINGLE_TRANS_ID =#singleTrasnId:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property="SCREEN_NAME">
                    T.SCREEN_NAME =#SCREEN_NAME:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isNotParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    (T.AUTHORIZE_STATUS IS NULL OR T.AUTHORIZE_STATUS='AUTHORIZED')
                </isNotNull>
            </isNotParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE_STATUS">
                    T.AUTHORIZE_STATUS IS NULL
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "AUTHORIZE">
                    T.AUTHORIZE_STATUS = #AUTHORIZE:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "INSTRUMENT_NO2">
                    ( T.INSTRUMENT_NO2 IS NULL OR T.INSTRUMENT_NO2 != 'NOTICE')
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY T.TRANS_ID
    </dynamic-mapped-statement>
    
    <mapped-statement name = "getSelectSchemeNameForMDSReceiptEntry" result-class = "java.util.HashMap">        
        SELECT SCHEME_NAME, MP_MDS_CODE AS SCHEME_DESC, MULTIPLE_MEMBER
        FROM MDS_SCHEME_DETAILS MSD
        WHERE     MSD.STATUS != 'DELETED'
        AND MSD.AUTHORIZED_STATUS = 'AUTHORIZED'
        AND MSD.SCHEME_NAME = #SCHEME_NAME:VARCHAR#
        AND msd.scheme_end_dt + MSD.SCHEME_GRACE_PERIOD &gt;= cast(#CURR_DT# as DATE)
    </mapped-statement>
	
    <mapped-statement name = "getSelectForfietAmountForChittal" result-class = "java.util.HashMap">
        select mds.* from MDS_BANK_ADVANCE mds, MDS_PRODUCT_GENERAL_DETAILS mpd, MDS_SCHEME_DETAILS ms
        where MS.PROD_ID = MPD.PROD_ID
        and MDS.SCHEME_NAME = MS.SCHEME_NAME
        and mds.SCHEME_NAME = #SCHEME_NAME:VARCHAR# 
        and MDS.CHITTAL_NO = #CHITTAL_NO:VARCHAR#
        and MDS.REPAID = 'N'
        and MDS.BONUS_AMT > 0
        and MPD.BANK_ADV_FORFIET = 'N'
        AND MPD.BANK_ADV_Y_N = 'Y'
        AND MPD.FORFEITE_HD_Y_N = 'N'
        and MDS.INSTALLMENT_NO = cast(#SL_NO# as NUMERIC)
        and MDS.DIVISION_NO = cast(#DIVISION_NO# as NUMERIC)
    </mapped-statement>     
        
    <mapped-statement name = "getMDSNarration" result-class = "java.util.HashMap">
    SELECT GET_MDS_NARRATION(#SCHEME#::varchar,#INST_TO_PAY#,#INST_PAID#,cast(#DIVNO# as numeric)) 
    AS NARRATION FROM DUAL
    </mapped-statement>    

</sql-map>