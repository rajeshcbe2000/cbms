<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="MDSApplicationMap">

	<!-- Use ExternalWireTO object (JavaBean) properties as parameters for insert. Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name = "insertApplicationTO" inline-parameters = "true">
        INSERT INTO MDS_APPLICATION(SCHEME_NAME,DIVISION_NO,CHITTAL_NO,CHIT_START_DT,CHIT_END_DT,INST_AMT,APPLN_NO,APPLN_DT,
        THALAYAL,MUNNAL,MEMBER_NO,MEMBER_TYPE,MEMBER_NAME,HOUSE_ST,AREA,CITY,STATE,PIN,STANDING_INSTN,NOMINEE,REMARKS,STATUS,
        STATUS_BY,STATUS_DT,AUTHORIZE_STATUS,AUTHORIZE_BY,AUTHORIZE_DT,BRANCH_CODE,TRANS_ID,TOTAL_BALANCE,CLEAR_BALANCE,
        AVAILABLE_BALANCE,SHADOW_CREDIT,SHADOW_DEBIT,CHIT_NO,PROD_TYPE,PROD_ID,DR_ACT_NO,CO_CHITTAL,SUB_NO,SALARY_RECOVERY,CUST_ID)
        VALUES(
        #schemeName#,#divisionNo#,#chittalNo#,#chitStartDt#,#chitEndDt#,
        #instAmt#,#applnNo#,#applnDate#,#thalayal#,#munnal#,#membershipNo#,
        #membershipType#,#membershipName#,#houseStNo#,#area#,#city#,
        #state#,#pin#,#standingInstn#,#nominee#,#remarks#,#status#,
        #statusBy#,#statusDt#,#authorizeStatus#,#authorizeBy#,#authorizeDt:DATE#,
        #branchCode#,#transId#,#totalBalance#,#clearBalance#,#availableBalance#,
        #shadowCredit#,#shadowDebit#,#chitNo#,#prodType#,#prodId#,#drAccNo#,
        #coChittal#,#subNo#,#salaryRecovery#,#cudt_id#)
    </mapped-statement>
    
    <result-map name="getAccProductresultOASA" class="com.see.truetransact.transferobject.common.lookup.LookUpTO">
        <property name="lookUpRefID" column="PROD_ID" />
        <property name="lookUpDesc" column="PROD_DESC" />
    </result-map>             
    
    <mapped-statement name="Cash.getAccProductOASA" result-map="getAccProductresultOASA">
        SELECT PROD_ID,PROD_DESC FROM OPERATIVE_SUSPENSE_PROD
    </mapped-statement>
   
    <mapped-statement name="getLastChittalNo" result-class = "java.util.HashMap">
        SELECT NEXT_CHITTAL_NO FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME=#SCHEME_NAME#
    </mapped-statement>
    
    <mapped-statement name="updateLastChittalNo" inline-parameters="true">
        UPDATE MDS_SCHEME_DETAILS SET NEXT_CHITTAL_NO=#CHITTAL_NO# WHERE SCHEME_NAME=#SCHEME_NAME#
    </mapped-statement>
    
    <mapped-statement name="getPrizedMembersList" result-class="java.util.LinkedHashMap">
        SELECT * FROM MDS_PRIZED_MONEY_DETAILS WHERE CHITTAL_NO=#CHITTAL_NO# AND SCHEME_NAME=#SCHEME_NAME# 
    </mapped-statement>
    
    <mapped-statement name = "insertApplicationTOForNo" inline-parameters = "true">
        INSERT INTO MDS_APPLICATION(SCHEME_NAME,DIVISION_NO,CHITTAL_NO,CHIT_START_DT,CHIT_END_DT,INST_AMT,APPLN_NO,APPLN_DT,
        THALAYAL,MUNNAL,MEMBER_NO,MEMBER_TYPE,MEMBER_NAME,HOUSE_ST,AREA,CITY,STATE,PIN,STANDING_INSTN,NOMINEE,REMARKS,STATUS,
        STATUS_BY,STATUS_DT,AUTHORIZE_STATUS,AUTHORIZE_BY,AUTHORIZE_DT,BRANCH_CODE,TRANS_ID,TOTAL_BALANCE,CLEAR_BALANCE,
        AVAILABLE_BALANCE,SHADOW_CREDIT,SHADOW_DEBIT,CHIT_NO,PROD_TYPE,PROD_ID,DR_ACT_NO,CO_CHITTAL,SUB_NO,SALARY_RECOVERY,
        COMMENCEMENT_TRANS_ID,COMMENCEMENT_AUTHORIZE_STATUS,CUST_ID
        )VALUES(
        #schemeName#,#divisionNo#,#chittalNo#,#chitStartDt#,#chitEndDt#,#instAmt#,
        #applnNo#,#applnDate#,#thalayal#,#munnal#,#membershipNo#,#membershipType#,
        #membershipName#,#houseStNo#,#area#,#city#,#state#,#pin#,
        #standingInstn#,#nominee#,#remarks#,#status#,#statusBy#,#statusDt#,
        'AUTHORIZED',#authorizeBy#,#authorizeDt:DATE#,#branchCode#,#transId#,#totalBalance#,
        #clearBalance#,#availableBalance#,#shadowCredit#,#shadowDebit#,#chitNo#,#prodType#,
        #prodId#,#drAccNo#,#coChittal#,#subNo#,#salaryRecovery#,#chittalNo#,
        'AUTHORIZED',#cudt_id#)
    </mapped-statement> 
        
       <!-- <mapped-statement name="updateApplicationTO" inline-parameters="true">
            UPDATE MDS_APPLICATION SET DIVISION_NO = #divisionNo:NUMERIC#,
            CHITTAL_NO = #chittalNo#,
            SUB_NO = #subNo#,
            CHIT_START_DT = #chitStartDt:DATE#,
            CHIT_END_DT = #chitEndDt:DATE#,
            INST_AMT = #instAmt:NUMERIC#,
            APPLN_NO = #applnNo:NUMERIC#,
            APPLN_DT = #applnDate:DATE#,
            THALAYAL = #thalayal#,
            CO_CHITTAL = #coChittal#,
            SALARY_RECOVERY = #salaryRecovery#,
            MUNNAL = #munnal#,
            MEMBER_NO = #membershipNo#,
            MEMBER_TYPE = #membershipType#,
            MEMBER_NAME = #membershipName#,
            HOUSE_ST = #houseStNo#,
            AREA = #area#,
            CITY = #city#,
            STATE = #state#,
            PIN = #pin:NUMERIC#,
            STANDING_INSTN = #standingInstn#,
            NOMINEE = #nominee#,
            PROD_TYPE = #prodType#,
            PROD_ID = #prodId#,
            DR_ACT_NO = #drAccNo#,
            REMARKS = #remarks#,
            STATUS = #status#,
            STATUS_BY = #statusBy#,
            AUTHORIZE_STATUS = #authorizeStatus#,
            STATUS_DT = #statusDt:DATE# WHERE SCHEME_NAME = #schemeName# and 
            BRANCH_CODE = #branchCode# AND TRANS_ID = #transId#
        </mapped-statement>-->
        
        
        
    <dynamic-mapped-statement name="updateApplicationTO" inline-parameters="true">
        UPDATE MDS_APPLICATION SET DIVISION_NO = #divisionNo#,
        CHITTAL_NO = #chittalNo#,
        SUB_NO = #subNo#,
        CHIT_START_DT = #chitStartDt#,
        CHIT_END_DT = #chitEndDt#,
        INST_AMT = #instAmt#,
        APPLN_NO = #applnNo#,
        APPLN_DT = #applnDate#,
        THALAYAL = #thalayal#,
        CO_CHITTAL = #coChittal#,
        SALARY_RECOVERY = #salaryRecovery#,
        MUNNAL = #munnal#,
        MEMBER_NO = #membershipNo#,
        MEMBER_TYPE = #membershipType#,
        MEMBER_NAME = #membershipName#,
        HOUSE_ST = #houseStNo#,
        AREA = #area#,
        CITY = #city#,
        STATE = #state#,
        PIN = #pin#,
        STANDING_INSTN = #standingInstn#,
        NOMINEE = #nominee#,
        PROD_TYPE = #prodType#,
        PROD_ID = #prodId#,
        DR_ACT_NO = #drAccNo#,
        REMARKS = #remarks#,
        STATUS = #status#,
        STATUS_BY = #statusBy#,
        CUST_ID=#cudt_id#,
        STATUS_DT = #statusDt# WHERE 
        SCHEME_NAME = #schemeName# 
        AND CHITTAL_NO = #chittalNo# 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="transId">
                    TRANS_ID = #transId#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>
    
    <mapped-statement name="updateMdsMasterMaintenance" inline-parameters="true">
        UPDATE MDS_MASTER_MAINTENANCE SET 
        MEMBER_TYPE=#membershipType#,
        MEMBER_NO=#membershipNo#,
        MEMBER_NAME=#membershipName#
        WHERE CHITTAL_NO=#chittalNo#
    </mapped-statement>
    
    <mapped-statement name="updateMdsPrizedMoneyDetails" inline-parameters="true">
        UPDATE MDS_PRIZED_MONEY_DETAILS SET 
        MEMBER_TYPE=#membershipType#,
        MEMBER_NAME=#membershipName#
        WHERE CHITTAL_NO=#chittalNo#
    </mapped-statement>
        
     <mapped-statement name="updateMdsMemberReceiptEntry" inline-parameters="true">
        UPDATE MDS_MEMBER_RECEIPT_ENTRY SET
        MEMBER_NO=#membershipNo#
        WHERE CHITTAL_NO=#chittalNo#
    </mapped-statement>   
    
    <mapped-statement name="updateMdsReceiptEntry" inline-parameters="true">
        UPDATE MDS_RECEIPT_ENTRY SET
        MEMBER_NAME=#membershipName#
        WHERE CHITTAL_NO=#chittalNo#
    </mapped-statement>   
            
    <result-map name="getMDSApplicationTOResult" class="com.see.truetransact.transferobject.mdsapplication.MDSApplicationTO">
        <property name="schemeName" column="SCHEME_NAME"/>
        <property name="divisionNo" column="DIVISION_NO"/>
        <property name="chittalNo" column="CHITTAL_NO"/>
        <property name="subNo" column="SUB_NO"/>
        <property name="chitStartDt" column="CHIT_START_DT"/>
        <property name="chitEndDt" column="CHIT_END_DT"/>
        <property name="instAmt" column="INST_AMT"/>
        <property name="applnNo" column="APPLN_NO"/>
        <property name="applnDate" column="APPLN_DT"/>
        <property name="thalayal" column="THALAYAL"/>
        <property name="coChittal" column="CO_CHITTAL"/>
        <property name="salaryRecovery" column="SALARY_RECOVERY"/>
        <property name="munnal" column="MUNNAL"/>
        <property name="membershipNo" column="MEMBER_NO"/>
        <property name="membershipType" column="MEMBER_TYPE"/>
        <property name="membershipName" column="MEMBER_NAME"/>
        <property name="houseStNo" column="HOUSE_ST"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="pin" column="PIN"/>
        <property name="standingInstn" column="STANDING_INSTN"/>
        <property name="nominee" column="NOMINEE"/>
        <property name="remarks" column="REMARKS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="authorizeBy" column="AUTHORIZE_BY"/>
        <property name="authorizeDt" column="AUTHORIZE_DT"/>
        <property name="branchCode" column="BRANCH_CODE"/>
        <property name="transId" column="TRANS_ID"/>
        <property name="commencementStatus" column="COMMENCEMENT_STATUS"/>
        <property name="commencementDate" column="COMMENCEMENT_DATE"/>
        <property name="lastTransDt" column="LAST_TRANS_DT"/>
        <property name="totalBalance" column="TOTAL_BALANCE"/>
        <property name="clearBalance" column="CLEAR_BALANCE"/>
        <property name="availableBalance" column="AVAILABLE_BALANCE"/>
        <property name="shadowCredit" column="SHADOW_CREDIT"/>
        <property name="shadowDebit" column="SHADOW_DEBIT"/>       
        <property name="commencementAuthStatus" column="COMMENCEMENT_AUTHORIZE_STATUS"/>       
        <property name="lastTransDt" column="LAST_TRANS_DT"/>       
        <property name="commencementTransId" column="COMMENCEMENT_TRANS_ID"/>       
        <property name="chitNo" column="CHIT_NO"/>       
        <property name="prodType" column="PROD_TYPE"/>    
        <property name="prodId" column="PROD_ID"/>    
        <property name="drAccNo" column="DR_ACT_NO"/>    
        <property name="deletedUsed" column="DELETED_USED"/>       
        <property name="instCount" column="INST_COUNT"/> 
        <property name="cudt_id" column="CUST_ID"/>      
    </result-map>        
    
    <!--<mapped-statement name = "getSelectMDSApplicationTO" result-map = "getMDSApplicationTOResult">
       // SELECT * FROM MDS_APPLICATION WHERE TRANS_ID = #value# nnn
        SELECT * FROM MDS_APPLICATION WHERE TRANS_ID = #TRANS_ID#
        AND CHITTAL_NO = #CHITTAL_NO#
    </mapped-statement>-->
    
    
    
    
    
    <dynamic-mapped-statement name = "getSelectMDSApplicationTO" result-map = "getMDSApplicationTOResult">
        <!--SELECT * FROM MDS_APPLICATION WHERE TRANS_ID = #value#--> <!-- Changed by Rajesh -->
        SELECT * FROM MDS_APPLICATION WHERE CHITTAL_NO = #CHITTAL_NO#
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="TRANS_ID">
                    TRANS_ID = #TRANS_ID#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        
    </dynamic-mapped-statement>
                         
  <dynamic-mapped-statement name = "getSelectRecordForEntered" result-class = "java.util.LinkedHashMap">
       <!-- SELECT SCHEME_NAME,CHITTAL_NO,SUB_NO,CHIT_START_DT,TRANS_ID FROM MDS_APPLICATION WHERE STATUS != 'DELETED' AND AUTHORIZE_STATUS IS NULL -->
        <!-- SELECT SCHEME_NAME,CHITTAL_NO,SUB_NO,CHIT_START_DT,TRANS_ID
FROM MDS_APPLICATION WHERE STATUS != 'DELETED' AND  ( AUTHORIZE_STATUS IS NULL or AUTHORIZE_STATUS!='REJECTED')
and SCHEME_NAME not in(select SCHEME_NAME from mds_closure_details where AUTHORIZED_STATUS='AUTHORIZED') changed by sreekr-->
        SELECT MSD.MP_MDS_CODE as SCHEME_DESC, MA.SCHEME_NAME, MA.CHITTAL_NO, MA.SUB_NO, MA.CHIT_START_DT, MA.TRANS_ID,MA.MEMBER_NO,MA.MEMBER_NAME
        FROM MDS_APPLICATION MA,MDS_SCHEME_DETAILS MSD
        WHERE MSD.SCHEME_NAME=MA.SCHEME_NAME
        AND MA.STATUS != 'DELETED'
        AND (MA.AUTHORIZE_STATUS IS NULL OR MA.AUTHORIZE_STATUS != 'REJECTED')
        AND MA.SCHEME_NAME NOT IN (SELECT SCHEME_NAME
        FROM MDS_CLOSURE_DETAILS WHERE AUTHORIZED_STATUS = 'AUTHORIZED')
          <dynamic>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_DESC">
                    UPPER(MSD.MP_MDS_CODE) LIKE UPPER('%$SCHEME_DESC$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_NAME">
                    UPPER(MA.SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"   property="CHITTAL_NO">
                    UPPER(MA.CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="SUB_NO">
                    UPPER(MA.SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="CHIT_START_DT">
                    UPPER(MA.CHIT_START_DT) LIKE UPPER('%$CHIT_START_DT$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="TRANS_ID">
                    UPPER(MA.TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBER_NO">
                    UPPER(MA.MEMBER_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBER_NAME">
                    UPPER(MA.MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
            </dynamic>
    </dynamic-mapped-statement>
    <mapped-statement name = "getSelPrizdPend" result-class = "java.util.HashMap">
        select SECURITY_PRIZED,SECURITY_PENDING from MDS_PRODUCT_GENERAL_DETAILS
        where PROD_ID=#PROD_ID#
    </mapped-statement>
    
    <mapped-statement name="getSelIsTran" result-class = "java.util.LinkedHashMap">
      <!--Select nvl(TRANS_FIRST_INSTALLMENT,'Y') as TRANS_FIRST_INSTALLMENT from MDS_PRODUCT_GENERAL_DETAILS,MDS_SCHEME_DETAILS where SCHEME_NAME=#SCHEME_NAME#-->
        Select nvl(TRANS_FIRST_INSTALLMENT,'Y') as TRANS_FIRST_INSTALLMENT from
        MDS_PRODUCT_GENERAL_DETAILS join MDS_SCHEME_DETAILS
        on MDS_PRODUCT_GENERAL_DETAILS.PROD_ID=MDS_SCHEME_DETAILS.PROD_ID
        where mds_scheme_details.scheme_name=#SCHEME_NAME#
    </mapped-statement>
    
    <mapped-statement name = "getSelectNonAuthRecordForEntered" result-class = "java.util.LinkedHashMap">
        SELECT DISTINCT MDSA.TRANS_ID,SCHEME_NAME, CHITTAL_NO, SUB_NO, CHIT_START_DT,INST_AMT AS AMOUNT
        FROM MDS_APPLICATION MDSA,ALL_TRANS AT
        WHERE (MDSA.STATUS != 'DELETED' OR MDSA.STATUS IS NULL)
        AND MDSA.STATUS_BY != #USER_ID#
        AND NVL(AT.BATCH_ID,AT.TRANS_ID) = MDSA.TRANS_ID
        AND AT.TRANS_DT = #TRANS_DT:DATE#
        AND MDSA.BRANCH_CODE = #SELECTED_BRANCH_ID#
        AND MDSA.AUTHORIZE_STATUS IS NULL
        AND CASE WHEN AT.TRANS_MODE = 'TRANSFER' 
        THEN 'AUTHORIZED' ELSE AT.PAYMENT_STATUS END IS NOT NULL
        AND cast(#HIERARCHY_ID# as numeric) &gt;=
          (SELECT DISTINCT DECODE (NVL (SAME_HIERARCHY_ALLOWED, 'N'),
                                   'Y', HIERARCHY_ID,
                                   HIERARCHY_ID + 1
                                  )
                      FROM USER_MASTER UM, ROLE_MASTER RM
                     WHERE RM.ROLE_ID = UM.USER_ROLE
                       AND UM.USER_ID = MDSA.STATUS_BY)
    </mapped-statement>
    
     <mapped-statement name = "getSelectNonAuthRecordForEnteredWithOutCashier" result-class = "java.util.LinkedHashMap">
        <!-- SELECT DISTINCT MDSA.TRANS_ID,SCHEME_NAME, CHITTAL_NO, SUB_NO, CHIT_START_DT,INST_AMT AS AMOUNT
        FROM MDS_APPLICATION MDSA,ALL_TRANS AT
        WHERE (MDSA.STATUS != 'DELETED' OR MDSA.STATUS IS NULL)
        AND MDSA.STATUS_BY != #USER_ID#
        AND NVL(AT.BATCH_ID,AT.TRANS_ID) = MDSA.TRANS_ID
        AND AT.TRANS_DT = #TRANS_DT:DATE#
        AND MDSA.BRANCH_CODE = #SELECTED_BRANCH_ID#
        AND MDSA.AUTHORIZE_STATUS IS NULL
        AND #HIERARCHY_ID#::numeric &gt;=
          (SELECT DISTINCT DECODE (NVL (SAME_HIERARCHY_ALLOWED, 'N'),
                                   'Y', HIERARCHY_ID,
                                   HIERARCHY_ID + 1
                                  )
                      FROM USER_MASTER UM, ROLE_MASTER RM
                     WHERE RM.ROLE_ID = UM.USER_ROLE
                       AND UM.USER_ID = MDSA.STATUS_BY) -->
              
        SELECT DISTINCT mdsa.trans_id, mdsa.scheme_name, chittal_no, sub_no, chit_start_dt,
            inst_amt AS amount
            FROM mds_application mdsa, all_trans AT, MDS_SCHEME_DETAILS msd
            WHERE (mdsa.status != 'DELETED' OR mdsa.status IS NULL)
            AND mdsa.status_by != #USER_ID#
            <!--AND NVL (AT.batch_id, AT.trans_id) = mdsa.trans_id-->
            AND DECODE (AT.batch_id,NULL, AT.trans_id,AT.batch_id) = mdsa.trans_id
            AND AT.trans_dt = #TRANS_DT:DATE#
            AND mdsa.branch_code = #SELECTED_BRANCH_ID#
            AND mdsa.authorize_status IS NULL
            and MDSA.SCHEME_NAME = MSD.SCHEME_NAME
            and MSD.GROUP_NO is null
            AND cast(#HIERARCHY_ID# as numeric) &gt;=
                   (SELECT DISTINCT DECODE (NVL (same_hierarchy_allowed, 'N'),
                                            'Y', hierarchy_id,
                                            hierarchy_id + 1
                                           )
                               FROM user_master um, role_master rm
                              WHERE rm.role_id = um.user_role
                                AND um.user_id = mdsa.status_by)         
                       
    </mapped-statement>
    
    <mapped-statement name = "getSelectApplnAmt" result-class = "java.util.HashMap">
        SELECT INST_AMT FROM MDS_APPLICATION WHERE TRANS_ID = #TRANS_ID# 
    </mapped-statement>
    
    <dynamic-mapped-statement name = "updateAuthorizeStatusAppl" result-class="java.util.HashMap">
        UPDATE MDS_APPLICATION SET AUTHORIZE_STATUS = #AUTHORIZE_STATUS#,AUTHORIZE_BY = #AUTHORIZE_BY#,
        AUTHORIZE_DT = #AUTHORIZE_DT:DATE# 
        WHERE SCHEME_NAME = #SCHEME#    and  CHITTAL_NO = #CHITTAL_NO# and SUB_NO = #SUB_NO#
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="transId">
                    TRANS_ID = #TRANS_ID#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CUST_ID">
                    CUST_ID=#CUST_ID#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>
        
    <dynamic-mapped-statement name = "getSelectGLTransMDSApplicationTO" result-map = "getMDSApplicationTOResult">
        SELECT * FROM MDS_APPLICATION WHERE STATUS!='DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND COMMENCEMENT_STATUS IS NULL
        AND COMMENCEMENT_DATE IS NULL AND SCHEME_NAME = #SCHEME_NAME# 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CHITTAL_NO">
                    CHITTAL_NO = #CHITTAL_NO#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY CHITTAL_NO
    </dynamic-mapped-statement>
    
   <dynamic-mapped-statement name = "getSelectMdsPredefinedChittalDetails" result-class = "java.util.HashMap">
        SELECT MA.*,MP.* FROM MDS_APPLICATION MA,MDS_PRIZED_MONEY_DETAILS MP
        WHERE MP.SCHEME_NAME = MA.SCHEME_NAME
           AND MA.DIVISION_NO = MP.DIVISION_NO 
           AND MA.STATUS != 'DELETED'
           AND MA.AUTHORIZE_STATUS = 'AUTHORIZED'
           AND COMMENCEMENT_AUTHORIZE_STATUS IS NULL
           AND MA.SCHEME_NAME = #SCHEME_NAME# 
           AND MP.INSTALLMENT_NO = 1
           AND MP.AUTHORIZED_STATUS = 'AUTHORIZED'
           AND MP.STATUS != 'DELETED'
    </dynamic-mapped-statement>
    
    <mapped-statement name = "getChittalNO" result-class = "java.util.HashMap">
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,
        NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,INSTALLMENT_AMOUNT
        FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #value# 
        AND NEXT_CHITTAL_NO IS NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
        UNION
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,
        NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,INSTALLMENT_AMOUNT
        FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #value#
        AND NEXT_CHITTAL_NO IS NOT NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement>
    
    <mapped-statement name="updateChittalNxtNum" inline-parameters="true">
        UPDATE MDS_SCHEME_DETAILS SET NEXT_CHITTAL_NO = #VALUE#,SUFFIX_NO = #SUFFIX# 
        WHERE SCHEME_NAME = #SCHEME_NAME# AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement>
    
    <mapped-statement name = "getSelectSchemeAcctHead" result-class = "java.util.LinkedHashMap">
        SELECT MAH.*,MSD.*,MPOD.*,MPGD.* FROM MDS_SCHEME_DETAILS MSD,MDS_PRODUCT_GENERAL_DETAILS MPGD,MDS_ACCT_HEAD MAH,MDS_PRODUCT_OTHER_DETAILS MPOD WHERE 
        MSD.PROD_ID = MPGD.PROD_ID AND MSD.STATUS!='DELETED' AND MSD.AUTHORIZED_STATUS = 'AUTHORIZED' AND 
        MAH.SCHEME_NAME = MSD.SCHEME_NAME AND MSD.PROD_ID = MPOD.PROD_ID AND MSD.SCHEME_NAME = #SCHEME_NAME#
    </mapped-statement>
    
    <mapped-statement name="updateMDSApplication" inline-parameters="true">
        UPDATE MDS_APPLICATION SET MEMBER_TYPE=#MEMBER_TYPE#,MEMBER_NO=#MEMBER_NO#,
        MEMBER_NAME=#MEMBER_NAME#,CUST_ID=#CUST_ID# WHERE CHITTAL_NO=#CHITTAL_NO#
    </mapped-statement>
        
    <mapped-statement name = "updateMDSAvailBalance" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET AVAILABLE_BALANCE = NVL(AVAILABLE_BALANCE,0) + #availableBalance#
        WHERE SCHEME_NAME = #schemeName# and BRANCH_CODE = #branchCode# AND TRANS_ID = #transId#
    </mapped-statement>

    <mapped-statement name = "updateMDSClearBalance" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET CLEAR_BALANCE = NVL(CLEAR_BALANCE,0) + #clearBalance#
        WHERE SCHEME_NAME = #schemeName# and BRANCH_CODE = #branchCode# AND TRANS_ID = #transId#
    </mapped-statement>
    
    <mapped-statement name = "updateMDSTotalBalance" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET TOTAL_BALANCE = NVL(TOTAL_BALANCE,0) + #totalBalance#
        WHERE SCHEME_NAME = #schemeName# and BRANCH_CODE = #branchCode# AND TRANS_ID = #transId#
    </mapped-statement>

    <mapped-statement name = "updateMDSShadowDebit" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET SHADOW_DEBIT = NVL(SHADOW_DEBIT - #shadowDebit#,0)
        WHERE SCHEME_NAME = #schemeName# and BRANCH_CODE = #branchCode# AND TRANS_ID = #transId#
    </mapped-statement>
    
    <mapped-statement name = "updateMDSShadowCreditDrAmt" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET SHADOW_CREDIT = NVL(SHADOW_CREDIT,0) - #shadowCredit#
        WHERE SCHEME_NAME = #schemeName# and BRANCH_CODE = #branchCode# AND TRANS_ID = #transId#
    </mapped-statement>
    
    <mapped-statement name = "updateMDSShadowCreditCrAmt" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET SHADOW_CREDIT = NVL(SHADOW_CREDIT,0) + #shadowCredit#
        WHERE SCHEME_NAME = #schemeName# and BRANCH_CODE = #branchCode# AND TRANS_ID = #transId#
    </mapped-statement>
    
    <mapped-statement name = "getSelectGLTransNotAuthMDSApplicationTO" result-map = "getMDSApplicationTOResult">
        SELECT * FROM MDS_APPLICATION WHERE STATUS!='DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND COMMENCEMENT_STATUS = 'Y'
        AND SCHEME_NAME = #SCHEME_NAME# AND COMMENCEMENT_AUTHORIZE_STATUS IS NULL
    </mapped-statement>
    
    <dynamic-mapped-statement name = "getSelectCustomerMemberList" result-class = "java.util.LinkedHashMap">
        SELECT MEMBERSHIP_CLASS,MEMBERSHIP_NO,get_cust_name(CUST.CUST_ID)  as "CUSTOMER"
        FROM CUSTOMER CUST WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND MEMBERSHIP_NO IS NOT NULL
    <dynamic>
             <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBERSHIP_CLASS">
                    UPPER(MEMBERSHIP_CLASS) LIKE UPPER('%$MEMBERSHIP_CLASS$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBERSHIP_NO">
                    UPPER(MEMBERSHIP_NO) LIKE UPPER('%$MEMBERSHIP_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="CUSTOMER">
                    UPPER(get_cust_name(CUST.CUST_ID)) LIKE UPPER('%$CUSTOMER$%')
                </isNotNull>
            </isParameterPresent>
            </dynamic>
    </dynamic-mapped-statement>
          
    <mapped-statement name = "getChittalNOUISide" result-class = "java.util.HashMap">
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,
        CO_NO_OF_INSTALLMENTS,TOTAL_AMOUNT_SCHEME FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME# 
        AND NEXT_CHITTAL_NO IS NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
        UNION
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,
        CO_NO_OF_INSTALLMENTS,TOTAL_AMOUNT_SCHEME FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME#
        AND NEXT_CHITTAL_NO IS NOT NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement>
    
    <mapped-statement name = "getSumOfInstAmtForChittal" result-class = "java.util.HashMap">
        SELECT NVL(SUM(INST_AMT),0) AS TOTAL_INST_AMT FROM MDS_APPLICATION MA WHERE 
        STATUS!='DELETED' AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')   AND MA.SCHEME_NAME =#SCHEME_NAME#
    </mapped-statement>
    
    <mapped-statement name = "getOnlyMemberOrNot" result-class = "java.util.HashMap">
        select MPGD.ONLY_MEMBER from  MDS_PRODUCT_GENERAL_DETAILS mpgd,mds_scheme_details msd
        where  MSD.SCHEME_NAME=#SCHEME_NAME# and MSD.PROD_ID=MPGD.PROD_ID

    </mapped-statement>
    
    <dynamic-mapped-statement name = "getMemeberShipDetails" result-class = "java.util.LinkedHashMap">
        SELECT MEMBERSHIP_NO,get_cust_name(CUST.CUST_ID)  as "CUSTOMER",        
        MEMBERSHIP_CLASS,CUST_ID FROM CUSTOMER CUST WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "MEMBERSHIP_NO">
                    MEMBERSHIP_NO = #MEMBERSHIP_NO#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "CUST_ID">
                    CUST_ID = #CUST_ID#
                </isNotNull>
            </isParameterPresent>
             <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="CUSTOMER">
                    UPPER(get_cust_name(CUST.CUST_ID)) LIKE UPPER('%$CUSTOMER$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBERSHIP_CLASS">
                    UPPER(MEMBERSHIP_CLASS) LIKE UPPER('%$MEMBERSHIP_CLASS$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="CUST_ID">
                    UPPER(CUST_ID) LIKE UPPER('%$CUST_ID$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY CUST_ID
    </dynamic-mapped-statement>
     <dynamic-mapped-statement name = "getMemeberShipDetailsWhileNotMember" result-class = "java.util.LinkedHashMap">
        SELECT MEMBERSHIP_NO,get_cust_name(CUST.CUST_ID)  as "CUSTOMER",        
        MEMBERSHIP_CLASS,CUST_ID FROM CUSTOMER CUST WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND MEMBERSHIP_NO IS NOT NULL
        <dynamic>
             <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBERSHIP_NO">
                    <!--UPPER(MEMBERSHIP_NO) LIKE UPPER('%$MEMBERSHIP_NO$%')-->
                    UPPER(MEMBERSHIP_NO) = UPPER(#MEMBERSHIP_NO#)
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="CUST_ID">
                    UPPER(CUST_ID) LIKE UPPER('%$CUST_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBERSHIP_CLASS">
                    UPPER(membership_class) LIKE UPPER('%$MEMBERSHIP_CLASS$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="CUSTOMER">
                    UPPER(get_cust_name(CUST.CUST_ID)) LIKE UPPER('%$CUSTOMER$%')
                </isNotNull>
            </isParameterPresent>
           <!-- <isParameterPresent>
                <isNotNull prepend = "AND" property = "MEMBERSHIP_NO">
                    MEMBERSHIP_NO = #MEMBERSHIP_NO#
                </isNotNull>
            </isParameterPresent>-->
        </dynamic>
       <!-- <dynamic>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "CUST_ID">
                    CUST_ID = #CUST_ID#
                </isNotNull>
            </isParameterPresent>
        </dynamic>-->
       <dynamic>
            <isParameterPresent>
                <isNotNull prepend = "AND" property = "SHARE_TYPE">
                    membership_class = #SHARE_TYPE#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY CUST_ID
    </dynamic-mapped-statement>
   
   
    <dynamic-mapped-statement name = "getAllMemeberDetails" result-class = "java.util.LinkedHashMap">
        SELECT nvl(MEMBERSHIP_NO,' ') AS MEMBERSHIP_NO,get_cust_name(CUST.CUST_ID)  as "CUSTOMER",        
        MEMBERSHIP_CLASS,CUST_ID FROM CUSTOMER CUST WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND CUST.CUSTOMER_STATUS='PRESENT' 
          <dynamic>
          <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBERSHIP_NO">
                    UPPER(MEMBERSHIP_NO) LIKE UPPER('%$MEMBERSHIP_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="CUST_ID">
                    UPPER(CUST_ID) LIKE UPPER('%$CUST_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBERSHIP_CLASS">
                    UPPER(membership_class) LIKE UPPER('%$MEMBERSHIP_CLASS$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="CUSTOMER">
                    UPPER(get_cust_name(CUST.CUST_ID)) LIKE UPPER('%$CUSTOMER$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY MEMBERSHIP_NO
    </dynamic-mapped-statement>
    
    
    <mapped-statement name = "getUserAllowedDetails" result-class = "java.util.LinkedHashMap">
        select ONLY_MEMBER,ACCEPT_TYPE_CLASSA,ACCEPT_TYPE_CLASSB,ACCEPT_TYPE_CLASSC,ACCEPT_TYPE_CLASSALL from mds_product_general_details where prod_id=#PROD_ID#
    </mapped-statement>
    <dynamic-mapped-statement name = "getShareMemeberDetails" result-class = "java.util.LinkedHashMap">
        SELECT MEMBERSHIP_NO,get_cust_name(CUST.CUST_ID)  as "CUSTOMER",        
        CUST.MEMBERSHIP_CLASS,CUST.CUST_ID FROM CUSTOMER CUST join share_acct sa on sa.CUST_ID=CUST.CUST_ID 
        WHERE CUST.STATUS!= 'DELETED' AND CUST.AUTHORIZE_STATUS = 'AUTHORIZED' AND CUST.CUSTOMER_STATUS='PRESENT'
        AND sa.STATUS!= 'DELETED' AND sa.AUTHORIZE = 'AUTHORIZED'  AND MEMBERSHIP_NO IS NOT NULL
        <dynamic>
              <isParameterPresent>
                <isNotNull prepend="AND" property="SHARE_TYPE">
                    sa.SHARE_TYPE = #SHARE_TYPE#
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="OR" property="SHARE_TYPE1">
                    sa.SHARE_TYPE = #SHARE_TYPE1#
                </isNotNull>
            </isParameterPresent>
             <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBERSHIP_NO">
                    UPPER(MEMBERSHIP_NO) LIKE UPPER('%$MEMBERSHIP_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CUSTOMER">
                    UPPER(get_cust_name(CUST.CUST_ID)) LIKE UPPER('%$CUSTOMER$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBERSHIP_CLASS">
                    UPPER(CUST.MEMBERSHIP_CLASS) LIKE UPPER('%$MEMBERSHIP_CLASS$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CUST_ID">
                    UPPER(CUST.CUST_ID) LIKE UPPER('%$CUST_ID$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY MEMBERSHIP_NO
    </dynamic-mapped-statement>
   
   
    <mapped-statement name = "getSchemeDetailsList" result-class = "java.util.LinkedHashMap">
        SELECT * FROM MDS_SCHEME_DETAILS MDS, MDS_PRODUCT_GENERAL_DETAILS MDSP WHERE 
        SCHEME_NAME = #SCHEME_NAME# AND MDS.STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED' AND MDS.PROD_ID=MDSP.PROD_ID     
    </mapped-statement>
   
    <mapped-statement name = "getSchemeDivisionetailsList" result-class = "java.util.LinkedHashMap">
      <!--  SELECT NO_OF_DIVISIONS,TOTAL_NO_OF_MEMBERS,NVL(MAX(CHIT_NO),1) AS TOTAL_CHIT_NO,COMMENCEMENT_TRANS_ID,
        COMMENCEMENT_AUTHORIZE_STATUS,MULTIPLE_MEMBER,TOTAL_AMOUNT_SCHEME FROM MDS_SCHEME_DETAILS MSD, MDS_APPLICATION MDS WHERE MDS.SCHEME_NAME = MSD.SCHEME_NAME AND 
        MDS.SCHEME_NAME = #SCHEME_NAME# AND MDS.STATUS!= 'DELETED' AND MDS.AUTHORIZE_STATUS = 'AUTHORIZED' 
        GROUP BY NO_OF_DIVISIONS,TOTAL_NO_OF_MEMBERS,COMMENCEMENT_TRANS_ID,COMMENCEMENT_AUTHORIZE_STATUS,MULTIPLE_MEMBER,TOTAL_AMOUNT_SCHEME -->
        
        SELECT NO_OF_DIVISIONS,TOTAL_NO_OF_MEMBERS,A.TOTAL_CHIT_NO,COMMENCEMENT_TRANS_ID, 
        COMMENCEMENT_AUTHORIZE_STATUS,MULTIPLE_MEMBER,TOTAL_AMOUNT_SCHEME FROM MDS_SCHEME_DETAILS MSD, MDS_APPLICATION MDS ,
        (SELECT COUNT(*) AS TOTAL_CHIT_NO,SCHEME_NAME FROM (SELECT COUNT(*),SCHEME_NAME FROM MDS_APPLICATION WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# 
        AND status != 'DELETED' AND authorize_status = 'AUTHORIZED' GROUP BY CHITTAL_NO,SCHEME_NAME)A GROUP BY SCHEME_NAME) A
        WHERE MDS.SCHEME_NAME = MSD.SCHEME_NAME AND MDS.SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND MDS.STATUS!= 'DELETED' AND 
        MDS.AUTHORIZE_STATUS = 'AUTHORIZED' AND A.SCHEME_NAME = MDS.SCHEME_NAME  GROUP BY NO_OF_DIVISIONS,TOTAL_NO_OF_MEMBERS,COMMENCEMENT_TRANS_ID,
        COMMENCEMENT_AUTHORIZE_STATUS,MULTIPLE_MEMBER,TOTAL_AMOUNT_SCHEME,TOTAL_CHIT_NO
    </mapped-statement>
    
    <mapped-statement name = "getSelectDeletedRecordNo" result-class = "java.util.LinkedHashMap">
<!--        SELECT NVL(MIN(CHIT_NO),1) AS MIN_CHIT_NO FROM MDS_APPLICATION WHERE (STATUS = 'DELETED' OR AUTHORIZE_STATUS = 'DELETED')
        AND SCHEME_NAME = #SCHEME_NAME#
        SELECT NVL(MIN(CHIT_NO),1) AS MIN_CHIT_NO FROM MDS_APPLICATION WHERE DELETED_USED IS NULL AND AUTHORIZE_STATUS IS NOT NULL
        AND SCHEME_NAME = #SCHEME_NAME#-->
        SELECT NVL(MIN(CHIT_NO),1) AS MIN_CHIT_NO,STATUS,AUTHORIZE_STATUS FROM MDS_APPLICATION WHERE 
        (STATUS = 'DELETED' OR (AUTHORIZE_STATUS = 'DELETED' OR AUTHORIZE_STATUS = 'REJECTED'))  
        AND DELETED_USED IS NULL AND SCHEME_NAME = #SCHEME_NAME# GROUP BY STATUS,AUTHORIZE_STATUS
    </mapped-statement>
   
    <mapped-statement name = "updateUsedChittalNum" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET DELETED_USED = #DELETED_USED# WHERE CHITTAL_NO = #CHITTAL_NO#
    </mapped-statement>
    
    <mapped-statement name = "getSelectDeletedRecordDivisionNo" result-class = "java.util.LinkedHashMap">
        SELECT DIVISION_NO FROM MDS_APPLICATION WHERE CHIT_NO = #CHIT_NO# AND SCHEME_NAME = #SCHEME_NAME#         
    </mapped-statement>
   
    <mapped-statement name = "getSelectTransDet" result-class = "java.util.LinkedHashMap">
        select TRANS_FIRST_INSTALLMENT from MDS_PRODUCT_GENERAL_DETAILS 
        join MDS_SCHEME_DETAILS on mds_product_general_details.prod_id=
        mds_scheme_details.prod_id
        WHERE  mds_scheme_details.scheme_name=#SCHEME_NAME#             
    </mapped-statement>
   
    <dynamic-mapped-statement name = "getSelectChittalReceiptEntryDetailsN" result-class = "java.util.LinkedHashMap">
        <!--SELECT SCHEME_NAME, CHITTAL_NO, SUB_NO, MEMBER_NO, MEMBER_NAME, TRANS_ID,DIVISION_NO,BRANCH_CODE FROM 
        MDS_APPLICATION MA WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME = #SCHEME_NAME#
        and COMMENCEMENT_TRANS_ID is not null -->
        
        SELECT MA.SCHEME_NAME, MA.CHITTAL_NO, MA.SUB_NO, MA.MEMBER_NO, MA.MEMBER_NAME, MA.TRANS_ID,MA.DIVISION_NO,
        MA.BRANCH_CODE,MSD.SCHEME_START_DT FROM 
        MDS_APPLICATION MA join MDS_SCHEME_DETAILS MSD 
        on MA.SCHEME_NAME=MSD.SCHEME_NAME
        WHERE MA.STATUS!= 'DELETED' AND MA.AUTHORIZE_STATUS = 'AUTHORIZED' AND MA.SCHEME_NAME = #SCHEME_NAMES#  
        and MA.COMMENCEMENT_TRANS_ID is not null
         <dynamic>
        <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(MA.SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(MA.CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(MA.SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NAME">
                    UPPER(MA.MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="TRANS_ID">
                    UPPER(MA.TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="DIVISION_NO">
                    UPPER(MA.DIVISION_NO) LIKE UPPER('%$DIVISION_NO$%')
                </isNotNull>
            </isParameterPresent>
           <!--  <isParameterPresent>
             <isNotNull prepend="AND"      property="BRANCH_CODE">
                    UPPER(MA.BRANCH_CODE) LIKE UPPER('%$BRANCH_CODE$%')
                </isNotNull>
            </isParameterPresent>-->
              <isParameterPresent>
             <isNotNull prepend="AND"      property="SCHEME_START_DT">
                    UPPER(MSD.SCHEME_START_DT) LIKE UPPER('%$SCHEME_START_DT$%')
                </isNotNull>
            </isParameterPresent>
            </dynamic>
    </dynamic-mapped-statement>

    <dynamic-mapped-statement name = "getSelectRecordForEnquiryDetails" result-class = "java.util.LinkedHashMap">
        SELECT SCHEME_NAME, CHITTAL_NO, SUB_NO, MEMBER_NO, MEMBER_NAME, TRANS_ID,DIVISION_NO FROM MDS_APPLICATION WHERE STATUS!= 'DELETED' AND
        AUTHORIZE_STATUS = 'AUTHORIZED'
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="SCHEME_NAMES">
                    SCHEME_NAME = #SCHEME_NAMES#
                </isNotNull>
            </isParameterPresent>
              <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NO">
                    UPPER(MEMBER_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NAME">
                    UPPER(MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="TRANS_ID">
                    UPPER(TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="DIVISION_NO">
                    UPPER(DIVISION_NO) LIKE UPPER('%$DIVISION_NO$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY CHITTAL_NO
    </dynamic-mapped-statement>
    
    <mapped-statement name="getProductId" result-class = "java.util.LinkedHashMap">
        SELECT PROD_ID ,SCHEME_NAME FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME IN
        (SELECT SCHEME_NAME FROM MDS_APPLICATION WHERE CHITTAL_NO=#CHITTAL_NO#)
    </mapped-statement>
   
    <dynamic-mapped-statement name = "getSelectChittalReceiptEntryDetails" result-class = "java.util.LinkedHashMap">
       <!-- SELECT SCHEME_NAME, CHITTAL_NO, SUB_NO, MEMBER_NO, MEMBER_NAME, TRANS_ID,DIVISION_NO,BRANCH_CODE FROM MDS_APPLICATION MA WHERE STATUS!= 'DELETED' AND         
        AUTHORIZE_STATUS = 'AUTHORIZED'   AND   SCHEME_NAME = #SCHEME_NAME# AND CHITTAL_NO IN ( SELECT CHITTAL_NO FROM 
        (SELECT NO_OF_INSTALLMENTS FROM MDS_SCHEME_DETAILS WHERE STATUS!='DELETED' AND STATUS!='CLOSED' AND SCHEME_NAME = #SCHEME_NAME#) A,
        (SELECT CHITTAL_NO, SUM(NO_OF_INST) AS INST_PAID FROM MDS_TRANS_DETAILS WHERE STATUS!= 'DELETED' AND         
        AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME = #SCHEME_NAME# GROUP BY CHITTAL_NO) B  WHERE NO_OF_INSTALLMENTS-INST_PAID>0) -->
        
        SELECT CHITTAL_NO, SUB_NO, SCHEME_NAME, MEMBER_NO, MEMBER_NAME, TRANS_ID,DIVISION_NO,BRANCH_CODE,THALAYAL,MUNNAL FROM 
        MDS_APPLICATION MA WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME = #SCHEME_NAMES#
        AND CHITTAL_NO IN ( SELECT CHITTAL_NO FROM (SELECT NO_OF_INSTALLMENTS FROM MDS_SCHEME_DETAILS WHERE 
        STATUS!='DELETED' AND STATUS!='CLOSED' AND SCHEME_NAME = #SCHEME_NAMES#) A, (SELECT MTD.CHITTAL_NO,MTD.SUB_NO, SUM(NO_OF_INST) AS 
        INST_PAID FROM MDS_TRANS_DETAILS MTD,MDS_APPLICATION MA WHERE MTD.STATUS!= 'DELETED' AND MTD.AUTHORIZE_STATUS = 'AUTHORIZED' 
        AND MA.SUB_NO=MTD.SUB_NO AND MA.CHITTAL_NO=MTD.CHITTAL_NO 
        AND
        MTD.SCHEME_NAME = #SCHEME_NAMES#   GROUP BY MTD.CHITTAL_NO,MTD.SUB_NO) B WHERE NO_OF_INSTALLMENTS-INST_PAID>0)
        AND CHITTAL_NO NOT in (SELECT CHITTAL_NO  FROM MDS_MASTER_MAINTENANCE WHERE CHIT_CLOSE_DT IS NOT NULL AND SCHEME_NAME =#SCHEME_NAMES#)
        <dynamic>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NO">
                    UPPER(MEMBER_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NAME">
                    UPPER(MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="TRANS_ID">
                    UPPER(TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="DIVISION_NO">
                    UPPER(DIVISION_NO) LIKE UPPER('%$DIVISION_NO$%')
                </isNotNull>
            </isParameterPresent>
             <!--<isParameterPresent>
                <isNotNull prepend="AND"      property="BRANCH_CODE">
                    UPPER(BRANCH_CODE) LIKE UPPER('%$BRANCH_CODE$%')
                </isNotNull>
            </isParameterPresent>-->
              <isParameterPresent>
                <isNotNull prepend="AND"      property="THALAYAL">
                    UPPER(THALAYAL) LIKE UPPER('%$THALAYAL$%')
                </isNotNull>
            </isParameterPresent>
       </dynamic>
       <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CHITTAL_NUMBER">
                    CHITTAL_NO = #CHITTAL_NUMBER#
                    UNION ALL
                    SELECT CHITTAL_NO, SUB_NO, SCHEME_NAME, MEMBER_NO, MEMBER_NAME, TRANS_ID,DIVISION_NO,BRANCH_CODE,THALAYAL FROM 
                    MDS_APPLICATION MA,OLD_AC_NOS TT WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME = #SCHEME_NAME# AND CHITTAL_NO 
                    IN ( SELECT CHITTAL_NO FROM (SELECT NO_OF_INSTALLMENTS FROM MDS_SCHEME_DETAILS WHERE STATUS!='DELETED' AND STATUS!
                    ='CLOSED' AND SCHEME_NAME = #SCHEME_NAME#) A, (SELECT MTD.CHITTAL_NO,MTD.SUB_NO, SUM(NO_OF_INST) AS INST_PAID FROM 
                    MDS_TRANS_DETAILS MTD,MDS_APPLICATION MA WHERE MTD.STATUS!= 'DELETED' AND MTD.AUTHORIZE_STATUS = 'AUTHORIZED' AND 
                    MA.SUB_NO=MTD.SUB_NO AND MA.CHITTAL_NO=MTD.CHITTAL_NO AND MTD.SCHEME_NAME = #SCHEME_NAME# GROUP BY MTD.CHITTAL_NO,MTD.SUB_NO) B 
                    WHERE NO_OF_INSTALLMENTS-INST_PAID>0) AND MA.CHITTAL_NO = TT.NEW_ACT_NUM AND TT.OLD_ACT_NUM=#CHITTAL_NO#
                <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NO">
                    UPPER(MEMBER_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NAME">
                    UPPER(MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="TRANS_ID">
                    UPPER(TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="DIVISION_NO">
                    UPPER(DIVISION_NO) LIKE UPPER('%$DIVISION_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="BRANCH_CODE">
                    UPPER(BRANCH_CODE) LIKE UPPER('%$BRANCH_CODE$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="THALAYAL">
                    UPPER(THALAYAL) LIKE UPPER('%$THALAYAL$%')
                </isNotNull>
            </isParameterPresent>
               </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY CHITTAL_NO
    </dynamic-mapped-statement>
   


    <dynamic-mapped-statement name = "getSelectChitNoNotinMasterDetails" result-class = "java.util.LinkedHashMap">
        SELECT SCHEME_NAME,CHITTAL_NO,SUB_NO,CHIT_START_DT,TRANS_ID,DIVISION_NO,REMARKS,MEMBER_NAME,THALAYAL FROM MDS_APPLICATION WHERE STATUS!= 'DELETED' AND
        AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME = #SCHEME_NAMES# 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CHITTAL_NUMBER">
                    CHITTAL_NO = #CHITTAL_NUMBER#
                </isNotNull>
            </isParameterPresent>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="CHIT_START_DT">
                    UPPER(CHIT_START_DT) LIKE UPPER('%$CHIT_START_DT$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NAME">
                    UPPER(MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="TRANS_ID">
                    UPPER(TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="DIVISION_NO">
                    UPPER(DIVISION_NO) LIKE UPPER('%$DIVISION_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="REMARKS">
                    UPPER(REMARKS) LIKE UPPER('%$REMARKS$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="THALAYAL">
                    UPPER(THALAYAL) LIKE UPPER('%$THALAYAL$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic> 
        <!-- AND
        CHITTAL_NO NOT IN(SELECT CHITTAL_NO FROM MDS_MASTER_MAINTENANCE WHERE SCHEME_NAME = #SCHEME_NAME# AND STATUS!= 'DELETED' AND
        AUTHORIZE_STATUS = 'AUTHORIZED') ORDER BY CHITTAL_NO  -->
    </dynamic-mapped-statement>
   
    <dynamic-mapped-statement name = "getSelectEachSchemeNotEnteredDetails" result-class = "java.util.LinkedHashMap">
        <!-- SELECT MSD.SCHEME_NAME,PROD_ID,SCHEME_START_DT,SCHEME_END_DT,NO_OF_DIVISIONS,INSTALLMENT_AMOUNT,TOTAL_NO_OF_MEMBERS,
        MULTIPLE_MEMBER,NO_OF_CHITTALS FROM MDS_SCHEME_DETAILS MSD
        WHERE TOTAL_NO_OF_MEMBERS > (SELECT COUNT(*) FROM MDS_APPLICATION MA WHERE MSD.SCHEME_NAME=MA.SCHEME_NAME AND STATUS!='DELETED' AND
        (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')) -->
        <!-- sreekrish
        SELECT MSD.SCHEME_NAME,PROD_ID,SCHEME_START_DT,SCHEME_END_DT,NO_OF_DIVISIONS,INSTALLMENT_AMOUNT,TOTAL_NO_OF_MEMBERS, MULTIPLE_MEMBER,NO_OF_CHITTALS 
        FROM MDS_SCHEME_DETAILS MSD WHERE TOTAL_AMOUNT_SCHEME > (SELECT NVL(SUM(INST_AMT),0) FROM MDS_APPLICATION MA WHERE MSD.SCHEME_NAME=MA.SCHEME_NAME 
        AND STATUS!='DELETED' AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED'))
        <dynamic>
                <isParameterPresent>
                    <isNotNull prepend="AND" property="SCHEME_NAME">
                    MSD.SCHEME_NAME= #SCHEME_NAME#
                    </isNotNull>
                </isParameterPresent>
         </dynamic> 
         ORDER BY SCHEME_NAME -->
       
        SELECT MSD.MP_MDS_CODE as SCHEME_DESC,MSD.SCHEME_NAME,PROD_ID,SCHEME_START_DT,SCHEME_END_DT,NO_OF_DIVISIONS,INSTALLMENT_AMOUNT,TOTAL_NO_OF_MEMBERS, MULTIPLE_MEMBER,NO_OF_CHITTALS 
        FROM MDS_SCHEME_DETAILS MSD WHERE SCHEME_NAME NOT IN(SELECT SCHEME_NAME FROM MDS_CLOSURE_DETAILS WHERE AUTHORIZED_STATUS='AUTHORIZED') 
        AND TOTAL_AMOUNT_SCHEME > (SELECT NVL(SUM(INST_AMT),0) FROM MDS_APPLICATION MA WHERE MSD.SCHEME_NAME=MA.SCHEME_NAME 
        AND STATUS!='DELETED' AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')) AND AUTHORIZED_STATUS='AUTHORIZED' 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="SCHEME_NAME">
                    MSD.SCHEME_NAME= #SCHEME_NAME#
                </isNotNull>
            </isParameterPresent>
             <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_DESC">
                    UPPER(MSD.MP_MDS_CODE) LIKE UPPER('%$SCHEME_DESC$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_DESC">
                    UPPER(MSD.MP_MDS_CODE) LIKE UPPER('%$SCHEME_DESC$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="PROD_ID">
                    UPPER(PROD_ID) LIKE UPPER('%$PROD_ID$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_START_DT">
                    UPPER(SCHEME_START_DT) LIKE UPPER('%$SCHEME_START_DT$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_END_DT">
                    UPPER(SCHEME_END_DT) LIKE UPPER('%$SCHEME_END_DT$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="NO_OF_DIVISIONS">
                    UPPER(NO_OF_DIVISIONS) LIKE UPPER('%$NO_OF_DIVISIONS$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="INSTALLMENT_AMOUNT">
                    UPPER(INSTALLMENT_AMOUNT) LIKE UPPER('%$INSTALLMENT_AMOUNT$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"      property="TOTAL_NO_OF_MEMBERS">
                   UPPER(TOTAL_NO_OF_MEMBERS) LIKE UPPER('%$TOTAL_NO_OF_MEMBERS$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MULTIPLE_MEMBER">
                   UPPER(MULTIPLE_MEMBER) LIKE UPPER('%$MULTIPLE_MEMBER$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="NO_OF_CHITTALS">
                   UPPER(NO_OF_CHITTALS) LIKE UPPER('%$NO_OF_CHITTALS$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic> 
        ORDER BY SCHEME_NAME 
    </dynamic-mapped-statement>
   
    <mapped-statement name = "getCustomerAddressDetailsinAppln" result-class = "java.util.LinkedHashMap">
        SELECT LAST_TRANS_DT,INST_COUNT,TOTAL_BALANCE,MEMBER_NO,MEMBER_TYPE,HOUSE_ST,AREA,CITY,STATE,PIN FROM MDS_APPLICATION 
        WHERE SCHEME_NAME = #SCHEME_NAME# AND CHITTAL_NO = #CHITTAL_NO# AND SUB_NO=CAST(#SUB_NO# AS NUMERIC) AND COMMENCEMENT_AUTHORIZE_STATUS = 'AUTHORIZED'  
    </mapped-statement>
    <mapped-statement name = "getFromDateFrmdsLetter" result-class = "java.util.HashMap">
      <!--select ADD_MONTHS(max(MPD.DRAW_AUCTION_DATE),1) AS A_COUNT from MDS_PRIZED_MONEY_DETAILS  mpd where MPD.SCHEME_NAME = #SCHEME_NAME#-->
	  select get_FromDate_mdsletter(#SCHEME_NAME#) AS A_COUNT from dual
    </mapped-statement>

    <mapped-statement name = "getToDateFrmdsLetter" result-class = "java.util.HashMap">
      <!--select ADD_MONTHS(ADD_MONTHS(max(MPD.DRAW_AUCTION_DATE),1),#NO_OF_MONTHS#) AS A_COUNT from MDS_PRIZED_MONEY_DETAILS  mpd where MPD.SCHEME_NAME = #SCHEME_NAME# -->
      SELECT ADD_MONTHS ( get_FromDate_mdsletter(#SCHEME_NAME#), #NO_OF_MONTHS#) AS A_COUNT from dual
    </mapped-statement>
	    
	<mapped-statement name = "getMinDiscValueFrMdsletter" result-class = "java.util.HashMap">
    	select case when MPOD.COMMISION_RATE_TYPE = 'Percent' then
        (MSD.TOTAL_AMOUNT_SCHEME *  MPOD.COMMISION_RATE_AMT * (1/100)) +1
        when MPOD.COMMISION_RATE_TYPE = 'Absolute' then
        (MSD.TOTAL_AMOUNT_SCHEME *  MPOD.COMMISION_RATE_AMT) * 1 + 1
        End  Commission from MDS_SCHEME_DETAILS msd 
		join MDS_PRODUCT_OTHER_DETAILS mpod on MPOD.PROD_ID = MSD.PROD_ID
		where MSD.SCHEME_NAME = #SCHEME_NAME#
    </mapped-statement>
    
    <mapped-statement name = "getMaxDiscValueFrMdsletter" result-class = "java.util.HashMap">
    	select MSD.TOTAL_AMOUNT_SCHEME * 30/100 as Max_Amt  from MDS_SCHEME_DETAILS msd where MSD.SCHEME_NAME = #SCHEME_NAME#
    </mapped-statement>
    
    <mapped-statement name = "getAuctionAmtFrMdsletter" result-class = "java.util.HashMap">
    	select MSD.TOTAL_AMOUNT_SCHEME  from MDS_SCHEME_DETAILS msd where MSD.SCHEME_NAME = #SCHEME_NAME#
    </mapped-statement>
    
    <mapped-statement name = "getChitalNoFrmdsLetter" result-class = "java.util.HashMap">
    	select  CHITTAL_NO from MDS_LETTER_DETAILS mld,DAY_END DE where status in('CREATED','MODIFIED') AND 
        (CANCEL = 'false' OR MLD.VALID_UPTO > DE.CURR_APPL_DT) AND CHITTAL_NO = #CHITAL_NO#         
    </mapped-statement>
    
    <mapped-statement name = "getApplDetails" result-class = "java.util.HashMap">
      <!--  SELECT SCHEME_NAME,CHITTAL_NO,DIVISION_NO,CHIT_START_DT,MEMBER_NO,MEMBER_NAME,MEMBER_TYPE,NOMINEE,SUB_NO  FROM MDS_APPLICATION WHERE 
        STATUS !='DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME =#SCHEME_NAME# AND CHITTAL_NO =#CHITTAL_NO# AND SUB_NO=#SUB_NO#  -->
        SELECT SCHEME_NAME,CHITTAL_NO,DIVISION_NO,CHIT_START_DT,MEMBER_NO,MEMBER_NAME,MEMBER_TYPE,NOMINEE,NOMINEE_NAME,SUB_NO,SALARY_RECOVERY,MA.CUST_ID  
        FROM MDS_APPLICATION MA
        LEFT JOIN DEPOSIT_NOMINEE_DETAIL DND ON (MA.CHITTAL_NO||'_'||SUB_NO=DND.DEPOSIT_NO)
        WHERE MA.STATUS !='DELETED' AND MA.AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME =#SCHEME_NAME# 
        AND CHITTAL_NO =#CHITTAL_NO# AND SUB_NO=#SUB_NO#
    </mapped-statement>
    
    <dynamic-mapped-statement name = "getChittalSubNo" result-class = "java.util.LinkedHashMap">
        SELECT SCHEME_NAME, MDS.CHITTAL_NO,MDS.SUB_NO,MEMBER_NO,MEMBER_NAME,A.MAX_SUB FROM MDS_APPLICATION MDS,
        (SELECT CHITTAL_NO,MAX(SUB_NO) AS MAX_SUB FROM MDS_APPLICATION WHERE STATUS!= 'DELETED' AND
        (AUTHORIZE_STATUS = 'AUTHORIZED' OR AUTHORIZE_STATUS IS NULL) AND CO_CHITTAL='Y' AND SCHEME_NAME =#SCHEME_NAMES# GROUP BY CHITTAL_NO) A
        WHERE  STATUS!= 'DELETED' AND (AUTHORIZE_STATUS = 'AUTHORIZED' OR AUTHORIZE_STATUS IS NULL) AND CO_CHITTAL='Y'  AND SCHEME_NAME =#SCHEME_NAMES#  
        AND A.CHITTAL_NO = MDS.CHITTAL_NO
        <dynamic>
           <!-- <isParameterPresent>
                <isNotNull prepend="AND" property="CHITTAL_NO">
                    MDS.CHITTAL_NO= #CHITTAL_NO#
                </isNotNull>
            </isParameterPresent>-->
             <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_NAME">
                    UPPER(SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="CHITTAL_NO">
                    UPPER(MDS.CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="SUB_NO">
                    UPPER(MDS.SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
                <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBER_NO">
                    UPPER(MEMBER_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
              </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBER_NAME">
                    UPPER(MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
              </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"   property="MAX_SUB">
                    UPPER(A.MAX_SUB) LIKE UPPER('%$MAX_SUB$%')
                </isNotNull>
              </isParameterPresent>
        </dynamic> 
        ORDER BY MDS.CHITTAL_NO 
    </dynamic-mapped-statement>
    
    <mapped-statement name = "getCountDetailsForCoChittal" result-class = "java.util.HashMap">
        SELECT COUNT(*) AS COUNT  FROM MDS_APPLICATION WHERE 
        STATUS !='DELETED' AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED') 
        AND SCHEME_NAME=#SCHEME_NAME# AND CHITTAL_NO=#CHITTAL_NO# 
        GROUP BY CHITTAL_NO ORDER BY CHITTAL_NO
    </mapped-statement>
    
    <mapped-statement name = "getSumOfCoChittalInstAmt" result-class = "java.util.HashMap">
        SELECT INST_AMT FROM MDS_APPLICATION WHERE 
        STATUS !='DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME=#SCHEME_NAME# AND CHITTAL_NO=#CHITTAL_NO#
    </mapped-statement>
    
    <mapped-statement name = "getStatusMDSApp" result-class = "java.util.HashMap">
        select STATUS,CUST_ID from mds_application where chittal_no=#CHITTAL_NO#
    </mapped-statement>
    
   <dynamic-mapped-statement name = "getSelectAllChittalReceiptEntryDetails" result-class = "java.util.LinkedHashMap">
        <!--SELECT SCHEME_NAME, CHITTAL_NO, SUB_NO, MEMBER_NO, MEMBER_NAME, TRANS_ID,DIVISION_NO,BRANCH_CODE FROM 
        MDS_APPLICATION MA WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME = #SCHEME_NAME#
        and COMMENCEMENT_TRANS_ID is not null -->
        
        SELECT MA.SCHEME_NAME, MA.CHITTAL_NO, MA.SUB_NO, MA.MEMBER_NO, MA.MEMBER_NAME, MA.TRANS_ID,MA.DIVISION_NO,
        MA.BRANCH_CODE,MSD.SCHEME_START_DT FROM 
        MDS_APPLICATION MA join MDS_SCHEME_DETAILS MSD 
        on MA.SCHEME_NAME=MSD.SCHEME_NAME
        WHERE MA.STATUS!= 'DELETED' AND MA.AUTHORIZE_STATUS = 'AUTHORIZED'
        AND MA.COMMENCEMENT_TRANS_ID is not null 
         <dynamic>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(MA.CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(MA.SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(MA.SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NO">
                    UPPER(MA.MEMBER_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NAME">
                    UPPER(MA.MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="TRANS_ID">
                    UPPER(MA.TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="DIVISION_NO">
                    UPPER(MA.DIVISION_NO) LIKE UPPER('%$DIVISION_NO$%')
                </isNotNull>
            </isParameterPresent>
             <!--<isParameterPresent>
                <isNotNull prepend="AND"      property="BRANCH_CODE">
                    UPPER(MA.BRANCH_CODE) LIKE UPPER('%$BRANCH_CODE$%')
                </isNotNull>
            </isParameterPresent>-->
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_START_DT">
                    UPPER(MSD.SCHEME_START_DT) LIKE UPPER('%$SCHEME_START_DT$%')
                </isNotNull>
            </isParameterPresent>
       </dynamic>
        order by MA.SCHEME_NAME
    </dynamic-mapped-statement>
                   
    <mapped-statement name = "getNxtInstallmntAmt" result-class = "java.util.HashMap">
        SELECT INSTALLMENT_AMOUNT FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME#
    </mapped-statement>
    <dynamic-mapped-statement name = "getSelectEachSchemeDetailsForReportview" result-class = "java.util.LinkedHashMap">
        SELECT MP_MDS_CODE AS SCHEME_DESC,MSD.SCHEME_NAME,PROD_ID,PROD_DESC,MULTIPLE_MEMBER,MSD.SCHEME_DESC as SCHEME_DETAILS FROM MDS_SCHEME_DETAILS MSD  WHERE 
        TOTAL_AMOUNT_SCHEME = (SELECT SUM(INST_AMT) FROM MDS_APPLICATION WHERE SCHEME_NAME = MSD.SCHEME_NAME AND          
        COMMENCEMENT_TRANS_ID IS NOT NULL AND COMMENCEMENT_AUTHORIZE_STATUS = 'AUTHORIZED') AND STATUS!='DELETED'
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="SCHEME_NAME">
                    SCHEME_NAME= #SCHEME_NAME#
                </isNotNull>
            </isParameterPresent>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_NAME">
                    UPPER(MSD.SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_DESC">
                    UPPER(MP_MDS_CODE) LIKE UPPER('%$SCHEME_DESC$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="PROD_ID">
                    UPPER(PROD_ID) LIKE UPPER('%$PROD_ID$%')
                </isNotNull>
            </isParameterPresent>
                <isParameterPresent>
                <isNotNull prepend="AND"   property="PROD_DESC">
                    UPPER(PROD_DESC) LIKE UPPER('%$PROD_DESC$%')
                </isNotNull>
              </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"   property="MULTIPLE_MEMBER">
                    UPPER(MULTIPLE_MEMBER) LIKE UPPER('%$MULTIPLE_MEMBER$%')
                </isNotNull>
              </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_DETAILS">
                    UPPER(MSD.SCHEME_DESC) LIKE UPPER('%$SCHEME_DETAILS$%')
                </isNotNull>
              </isParameterPresent>
        </dynamic> 
        ORDER BY MSD.SCHEME_NAME
    </dynamic-mapped-statement>
    <dynamic-mapped-statement name = "getSelectChittalReceiptEntryDetailsForReportview" result-class = "java.util.LinkedHashMap">
        SELECT CHITTAL_NO, SUB_NO, SCHEME_NAME, MEMBER_NO, MEMBER_NAME, TRANS_ID,DIVISION_NO,BRANCH_CODE FROM 
        MDS_APPLICATION MA WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME = #SCHEME_NAMES#
        AND CHITTAL_NO IN ( SELECT CHITTAL_NO FROM (SELECT NO_OF_INSTALLMENTS FROM MDS_SCHEME_DETAILS WHERE 
        STATUS!='DELETED'  AND SCHEME_NAME = #SCHEME_NAMES#) A, (SELECT MTD.CHITTAL_NO,MTD.SUB_NO, SUM(NO_OF_INST) AS 
        INST_PAID FROM MDS_TRANS_DETAILS MTD,MDS_APPLICATION MA WHERE MTD.STATUS!= 'DELETED' AND MTD.AUTHORIZE_STATUS = 'AUTHORIZED' 
        AND MA.SUB_NO=MTD.SUB_NO AND MA.CHITTAL_NO=MTD.CHITTAL_NO 
        AND
        MTD.SCHEME_NAME = #SCHEME_NAMES#   GROUP BY MTD.CHITTAL_NO,MTD.SUB_NO) B WHERE NO_OF_INSTALLMENTS-INST_PAID>0)
       <dynamic>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NO">
                    UPPER(MEMBER_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NAME">
                    UPPER(MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="TRANS_ID">
                    UPPER(TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="DIVISION_NO">
                    UPPER(DIVISION_NO) LIKE UPPER('%$DIVISION_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="BRANCH_CODE">
                    UPPER(BRANCH_CODE) LIKE UPPER('%$BRANCH_CODE$%')
                </isNotNull>
            </isParameterPresent>
       </dynamic>
      <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CHITTAL_NUMBER">
                    CHITTAL_NO = #CHITTAL_NUMBER#
                    UNION ALL
                    SELECT CHITTAL_NO, SUB_NO, SCHEME_NAME, MEMBER_NO, MEMBER_NAME, TRANS_ID,DIVISION_NO,BRANCH_CODE FROM 
                    MDS_APPLICATION MA,OLD_AC_NOS TT WHERE STATUS!= 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED' AND SCHEME_NAME = #SCHEME_NAME# AND CHITTAL_NO 
                    IN ( SELECT CHITTAL_NO FROM (SELECT NO_OF_INSTALLMENTS FROM MDS_SCHEME_DETAILS WHERE STATUS!='DELETED'
                    AND SCHEME_NAME = #SCHEME_NAME#) A, (SELECT MTD.CHITTAL_NO,MTD.SUB_NO, SUM(NO_OF_INST) AS INST_PAID FROM 
                    MDS_TRANS_DETAILS MTD,MDS_APPLICATION MA WHERE MTD.STATUS!= 'DELETED' AND MTD.AUTHORIZE_STATUS = 'AUTHORIZED' AND 
                    MA.SUB_NO=MTD.SUB_NO AND MA.CHITTAL_NO=MTD.CHITTAL_NO AND MTD.SCHEME_NAME = #SCHEME_NAME# GROUP BY MTD.CHITTAL_NO,MTD.SUB_NO) B 
                    WHERE NO_OF_INSTALLMENTS-INST_PAID>0) AND MA.CHITTAL_NO = TT.NEW_ACT_NUM AND TT.OLD_ACT_NUM=#CHITTAL_NO#
                    <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                    UPPER(SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NO">
                    UPPER(MEMBER_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="MEMBER_NAME">
                    UPPER(MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="TRANS_ID">
                    UPPER(TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="DIVISION_NO">
                    UPPER(DIVISION_NO) LIKE UPPER('%$DIVISION_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="BRANCH_CODE">
                    UPPER(BRANCH_CODE) LIKE UPPER('%$BRANCH_CODE$%')
                </isNotNull>
            </isParameterPresent>
               </isNotNull>
            </isParameterPresent>
        </dynamic>
        ORDER BY CHITTAL_NO
    </dynamic-mapped-statement>
                   
   <mapped-statement name = "getThalayalHeadForChittal" result-class = "java.util.LinkedHashMap">
       SELECT MD.THALAYAL_REP_PAY_HEAD,AC.AC_HD_DESC FROM MDS_ACCT_HEAD MD,AC_HD AC  WHERE MD.SCHEME_NAME = #SCHEME_NAME#
        AND AC.AC_HD_ID = MD.THALAYAL_REP_PAY_HEAD
   </mapped-statement>    
   
   <mapped-statement name = "getMunnalHeadForChittal" result-class = "java.util.LinkedHashMap">
       SELECT MD.MUNNAL_REP_PAY_HEAD,AC.AC_HD_DESC FROM MDS_ACCT_HEAD MD,AC_HD AC  WHERE MD.SCHEME_NAME = #SCHEME_NAME#
        AND AC.AC_HD_ID = MD.THALAYAL_REP_PAY_HEAD
   </mapped-statement>    
 
 <dynamic-mapped-statement name = "getPredifiendBonusTransId" result-class = "java.util.LinkedHashMap">
         SELECT DISTINCT TT.BATCH_ID
        FROM TRANSFER_TRANS TT
        WHERE TT.TRANS_DT =  #TRANS_DT:DATE#
        AND TT.STATUS !='DELETED'
        AND TT.AUTHORIZE_STATUS IS NULL
        AND TT.SINGLE_TRANS_ID =(SELECT CT.SINGLE_TRANS_ID
        FROM ALL_TRANS CT
        WHERE CT.TRANS_DT = #TRANS_DT:DATE#
        AND CT.STATUS !='DELETED'
        AND CT.INITIATED_BRANCH = #BRANCH_CODE#         
         <dynamic>
            <isEqual prepend="AND" property="TRANS_MODE" compareValue="CASH" >
                CT.TRANS_ID = #TRANS_ID#
            </isEqual>
        </dynamic>
        <dynamic>
            <isEqual prepend="AND" property="TRANS_MODE" compareValue="TRANSFER" >
                CT.BATCH_ID = #TRANS_ID#
            </isEqual>
        </dynamic>
         )
        AND TT.INITIATED_BRANCH = #BRANCH_CODE#
 </dynamic-mapped-statement>   
 
 <mapped-statement name = "getTotalBonusPredifinedCommencement" result-class = "java.util.LinkedHashMap">
        SELECT NVL(TOTAL_BONUS_AMOUNT,0) AS TOTAL_BONUS
        FROM MDS_PRIZED_MONEY_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME#
        AND INSTALLMENT_NO = '1'  AND STATUS !='DELETED' AND AUTHORIZED_STATUS ='AUTHORIZED'
 </mapped-statement>       
 
 <dynamic-mapped-statement name="updateApplicationSchemeStartDt" inline-parameters="true">
    UPDATE MDS_APPLICATION SET CHIT_START_DT = #START_DT:DATE#, CHIT_END_DT = #END_DT:DATE#
    WHERE SCHEME_NAME = #SCHEME_NAME# 
</dynamic-mapped-statement>

<mapped-statement name = "getGuarantorCustomerId" result-class = "java.util.HashMap">
   SELECT S.CUST_ID FROM SHARE_ACCT S WHERE S.SHARE_ACCT_NO = #SHARE_ACCT_NO#
 </mapped-statement>
 
 <mapped-statement name = "getShareAcctClosedStatus" result-class = "java.util.HashMap">
   SELECT SA.ACCT_STATUS FROM SHARE_ACCT SA WHERE SA.SHARE_ACCT_NO = #MEMBERSHIP_NO#
 </mapped-statement>
 
 
 <dynamic-mapped-statement name="updateMasterMaintenanceSchemeStartDt" inline-parameters="true">
     update MDS_MASTER_MAINTENANCE set CHIT_START_DT = #START_DT:DATE# 
     where scheme_name = #SCHEME_NAME:VARCHAR# 
 </dynamic-mapped-statement>
   <result-map name="getAccountResultListMDS" class="java.util.LinkedHashMap">
        <property name="AccountNo" column="ACT_NUM"/>
        <property name="CustomerName" column="MEMBER_NAME"/>
        <property name="MemberNo" column="MEMBER_NO"/>
        <property name="Scheme" column="SCHEME_DESC"/>        
    </result-map>     
     
    <dynamic-mapped-statement name="Report.getAccountListMDS" result-map="getAccountResultListMDS" >         
         
        SELECT ma.chittal_no AS ACT_NUM,
        ma.member_name AS MEMBER_NAME,
        MA.MEMBER_NO AS MEMBER_NO,
        (  SELECT SA.EMP_REFNO_NEW
        FROM share_acct sa
        WHERE SA.CUST_ID = MA.CUST_ID AND ROWNUM = 1
        GROUP BY SA.EMP_REFNO_NEW)             AS EMP_REFNO_NEW,
        msd.scheme_desc                         AS scheme_desc,
        msd.total_amount_division               AS sala
        FROM mds_scheme_details msd
        JOIN mds_application ma ON msd.scheme_name = ma.scheme_name
        WHERE     ma.chittal_no IS NOT NULL
        AND EXISTS
        (SELECT *
        FROM mds_trans_details mtd
        WHERE mtd.chittal_no = ma.chittal_no)
        and MA.scheme_name = #PROD_ID:VARCHAR#     
        <dynamic> 
            <isParameterPresent>
                <isNotNull prepend="AND"      property="ACT_NUM">
                    UPPER(ACT_NUM) LIKE UPPER('%$ACT_NUM$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic>        
        ORDER BY ma.chittal_no
         
    </dynamic-mapped-statement>      
 

</sql-map>
