<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="AuthorizationChk">
    <!-- Statement to create the view for authorization chk 
         SELECT  'SELECT ''' || TABLE_NAME || ''' AS TABLE_NAME, ''' || COLUMN_NAME || ''' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ' || TABLE_NAME || ' WHERE ' ||
         COLUMN_NAME || ' IS NULL OR ' || COLUMN_NAME || ' = '''' HAVING COUNT(*) > 0 '
         FROM ALL_TAB_COLS
         WHERE OWNER = 'TTUSER' AND COLUMN_NAME IN (
         'AUTHORISED','AUTHORIZATION_STATUS','AUTHORIZE','AUTHORIZE_STATUS', 'AUTHORIZE_STATUS_1', 'AUTHORIZE_STATUS_2',
         'AUTHORIZED_STATUS')
    -->
    <!-- Actual View creator
    CREATE VIEW AUTHORIZATION_VIEW AS 
    SELECT 'ACT_CLOSING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_CLOSING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ACT_DEATH_MARKING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_DEATH_MARKING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ACT_FREEZE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_FREEZE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ACT_LIEN' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_LIEN WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ACT_MASTER' AS TABLE_NAME, 'AUTHORIZATION_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_MASTER WHERE AUTHORIZATION_STATUS IS NULL OR AUTHORIZATION_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ACT_POA' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_POA WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'AC_HD' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM AC_HD WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'AC_HD_ACCT_INFO' AS TABLE_NAME, 'AUTHORIZED_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM AC_HD_ACCT_INFO WHERE AUTHORIZED_STATUS IS NULL OR AUTHORIZED_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'AC_HD_PARAM' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM AC_HD_PARAM WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADVANCES_PRODUCT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADVANCES_PRODUCT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_BORROWER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_BORROWER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_CLASSIFY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_CLASSIFY_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_COMPANY' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_COMPANY WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_DRAWING_POWER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_DRAWING_POWER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_ENHANCEMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_ENHANCEMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_FACILITY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_FACILITY_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_GUARANTOR_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_GUARANTOR_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_INSURANCE_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_INSURANCE_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_INT_MAINTENANCE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_INT_MAINTENANCE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_POA' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_POA WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'ADV_SANCTION' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ADV_SANCTION WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'AGENT_MASTER' AS TABLE_NAME, 'AUTHORIZED_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM AGENT_MASTER WHERE AUTHORIZED_STATUS IS NULL OR AUTHORIZED_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'AUDIT_PERFORMANCE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM AUDIT_PERFORMANCE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'BILLS_CARRIER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BILLS_CARRIER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'BILLS_LODGEMENT_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BILLS_LODGEMENT_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'BILLS_PRODUCT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BILLS_PRODUCT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'BLOCK_LIST' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BLOCK_LIST WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'BRANCH_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS_1' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BRANCH_MASTER WHERE AUTHORIZE_STATUS_1 IS NULL OR AUTHORIZE_STATUS_1 = '' OR AUTHORIZE_STATUS_2 IS NULL OR AUTHORIZE_STATUS_2 = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CASH_MOVEMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CASH_MOVEMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CASH_TRANS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CASH_TRANS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CHARGES' AS TABLE_NAME, 'AUTHORISED' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHARGES WHERE AUTHORISED IS NULL OR AUTHORISED = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CHARGE_CONFIG' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHARGE_CONFIG WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CHEQUE_ISSUE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHEQUE_ISSUE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CHEQUE_LOOSE_LEAF' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHEQUE_LOOSE_LEAF WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CHEQUE_STOP_PAYMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHEQUE_STOP_PAYMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CLEARING_BANK_PARAM' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CLEARING_BANK_PARAM WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CLEARING_PARAM' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CLEARING_PARAM WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CUSTOMER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CUSTOMER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CUST_INSURANCE_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CUST_INSURANCE_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CUST_SECURITY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CUST_SECURITY_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DD_STOP_PAYMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DD_STOP_PAYMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEATH_MARKING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEATH_MARKING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSITS_PRODUCT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSITS_PRODUCT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_ACINFO' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_ACINFO WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_AUTHORIZE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_AUTHORIZE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_DEATH_MARKING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_DEATH_MARKING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_FREEZE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_FREEZE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_LIEN' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_LIEN WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_POA' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_POA WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_ROI_GROUP' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_ROI_GROUP WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_SUB_ACINFO' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_SUB_ACINFO WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_TRANSFER_OUT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_TRANSFER_OUT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'FOREX_DENOMINATION_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM FOREX_DENOMINATION_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'FOREX_EXCHANGE_RATE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM FOREX_EXCHANGE_RATE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'INVENTORY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM INVENTORY_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'INVENTORY_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM INVENTORY_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'INWARD_CLEARING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM INWARD_CLEARING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LEVEL_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LEVEL_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LEVEL_MULTI' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LEVEL_MULTI WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_AUTHORIZE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_AUTHORIZE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_BORROWER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_BORROWER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_CLASSIFY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_CLASSIFY_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_COMPANY' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_COMPANY WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_DRAWING_POWER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_DRAWING_POWER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_FACILITY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS_1' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_FACILITY_DETAILS WHERE AUTHORIZE_STATUS_1 IS NULL OR AUTHORIZE_STATUS_1 = '' AND AUTHORIZE_STATUS_2 IS NULL OR AUTHORIZE_STATUS_2 = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_GUARANTOR_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_GUARANTOR_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_INT_MAINTENANCE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_INT_MAINTENANCE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_POA' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_POA WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_PRODUCT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_PRODUCT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_REPAY_SCHEDULE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_REPAY_SCHEDULE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_SANCTION' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_SANCTION WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'MJR_AC_HD' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM MJR_AC_HD WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'OP_AC_PRODUCT' AS TABLE_NAME, 'AUTHORIZED_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM OP_AC_PRODUCT WHERE AUTHORIZED_STATUS IS NULL OR AUTHORIZED_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'OTHER_BANK' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM OTHER_BANK WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'OUTWARD_CLEARING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM OUTWARD_CLEARING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'OUTWARD_RETURN' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM OUTWARD_RETURN WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'PAY_IN_SLIP' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM PAY_IN_SLIP WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'PVT_AI_FTINTERNAL' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM PVT_AI_FTINTERNAL WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'PVT_EXTERNAL_WIRE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM PVT_EXTERNAL_WIRE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'PVT_ORDER_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM PVT_ORDER_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'PVT_ORDER_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM PVT_ORDER_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'PVT_PURCHASE_EQUITY' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM PVT_PURCHASE_EQUITY WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'PVT_RELATIONSHIP' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM PVT_RELATIONSHIP WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'PVT_TAM_MAINTENANCE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM PVT_TAM_MAINTENANCE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'PVT_TIME_DEPOSIT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM PVT_TIME_DEPOSIT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'REMITTANCE_PRODUCT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM REMITTANCE_PRODUCT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'REMIT_ISSUE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM REMIT_ISSUE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'REMIT_PAYMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM REMIT_PAYMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'SHARE_ACCT' AS TABLE_NAME, 'AUTHORIZE' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_ACCT WHERE AUTHORIZE IS NULL OR AUTHORIZE = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'SHARE_ACCT_DETAILS' AS TABLE_NAME, 'AUTHORIZE' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_ACCT_DETAILS WHERE AUTHORIZE IS NULL OR AUTHORIZE = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'SHARE_AUTHORIZE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_AUTHORIZE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'SHARE_CONF_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_CONF_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'SHARE_POA' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_POA WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'SHARE_TRANSFER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_TRANSFER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'STANDING_INSTRUCTION' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM STANDING_INSTRUCTION WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'SUB_AC_HD' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SUB_AC_HD WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'TDS_CONFIG' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TDS_CONFIG WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'TDS_EXEMPTION' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TDS_EXEMPTION WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'TOKEN_CONFIG' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TOKEN_CONFIG WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'TOKEN_ISSUE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TOKEN_ISSUE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'TOKEN_LOST' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TOKEN_LOST WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'TRANSFER_TRANS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TRANSFER_TRANS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'TRANSFER_TRANS_LOG' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TRANSFER_TRANS_LOG WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'USER_MASTER' AS TABLE_NAME, 'AUTHORIZED_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM USER_MASTER WHERE AUTHORIZED_STATUS IS NULL OR AUTHORIZED_STATUS = '' HAVING COUNT(*) > 0 
    -->
    
    <!-- REPLACED VIEW ....
CREATE OR REPLACE VIEW AUTHORIZATION_VIEW AS
    SELECT 'CASH_TRANS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM CASH_TRANS WHERE (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '') GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'TRANSFER_TRANS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM TRANSFER_TRANS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'INWARD_CLEARING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM INWARD_CLEARING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'OUTWARD_CLEARING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM OUTWARD_CLEARING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'OUTWARD_RETURN' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM OUTWARD_RETURN WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'CLEARING_PARAM' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM CLEARING_PARAM WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'CUSTOMER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_CODE' AS BRANCH_COLUMN, BRANCH_CODE FROM CUSTOMER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_CODE HAVING COUNT(*) > 0
     UNION
    SELECT 'CUST_SECURITY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_CODE' AS BRANCH_COLUMN, BRANCH_CODE FROM CUST_SECURITY_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_CODE HAVING COUNT(*) > 0
     UNION
    SELECT 'ACT_MASTER' AS TABLE_NAME, 'AUTHORIZATION_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_CODE' AS BRANCH_COLUMN, BRANCH_CODE FROM ACT_MASTER WHERE AUTHORIZATION_STATUS IS NULL OR AUTHORIZATION_STATUS = ''  GROUP BY BRANCH_CODE HAVING COUNT(*) > 0
     UNION
    SELECT 'LOANS_FACILITY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS_1' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM LOANS_FACILITY_DETAILS WHERE AUTHORIZE_STATUS_1 IS NULL OR AUTHORIZE_STATUS_1 = '' AND AUTHORIZE_STATUS_2 IS NULL OR AUTHORIZE_STATUS_2 = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'LOANS_DRAWING_POWER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_CODE' AS BRANCH_COLUMN, BRANCH_CODE FROM LOANS_DRAWING_POWER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_CODE HAVING COUNT(*) > 0
     UNION
    SELECT 'CASH_MOVEMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM CASH_MOVEMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'CHEQUE_ISSUE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM CHEQUE_ISSUE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'CHEQUE_LOOSE_LEAF' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM CHEQUE_LOOSE_LEAF WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'CHEQUE_STOP_PAYMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM  CHEQUE_STOP_PAYMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'AGENT_MASTER' AS TABLE_NAME, 'AUTHORIZED_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM AGENT_MASTER WHERE AUTHORIZED_STATUS IS NULL OR AUTHORIZED_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'DD_STOP_PAYMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM DD_STOP_PAYMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'DEPOSIT_ACINFO' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM DEPOSIT_ACINFO WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'INVENTORY_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM INVENTORY_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'SHARE_ACCT' AS TABLE_NAME, 'AUTHORIZE' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_CODE' AS BRANCH_COLUMN, BRANCH_CODE FROM SHARE_ACCT WHERE AUTHORIZE IS NULL OR AUTHORIZE = ''  GROUP BY BRANCH_CODE HAVING COUNT(*) > 0
     UNION
    SELECT 'STANDING_INSTRUCTION' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_CODE' AS BRANCH_COLUMN, BRANCH_CODE FROM STANDING_INSTRUCTION WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY  BRANCH_CODE HAVING COUNT(*) > 0
     UNION
    SELECT 'TDS_EXEMPTION' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM TDS_EXEMPTION WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'TOKEN_CONFIG' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM TOKEN_CONFIG WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'TOKEN_ISSUE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM TOKEN_ISSUE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
     UNION
    SELECT 'TOKEN_LOST' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'BRANCH_ID' AS BRANCH_COLUMN, BRANCH_ID FROM TOKEN_LOST WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = ''  GROUP BY BRANCH_ID HAVING COUNT(*) > 0
/

    
    
    SELECT 'ACT_FREEZE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM ACT_FREEZE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'ACT_LIEN' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM ACT_LIEN WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'ACT_CLOSING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM ACT_CLOSING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DEATH_MARKING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM DEATH_MARKING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DEPOSIT_SUB_ACINFO' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM DEPOSIT_SUB_ACINFO WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DEPOSIT_FREEZE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM DEPOSIT_FREEZE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DEPOSIT_LIEN' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM DEPOSIT_LIEN WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'INVENTORY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM INVENTORY_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'SHARE_ACCT_DETAILS' AS TABLE_NAME, 'AUTHORIZE' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM SHARE_ACCT_DETAILS WHERE AUTHORIZE IS NULL OR AUTHORIZE = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'SHARE_TRANSFER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT, 'NIL' FROM SHARE_TRANSFER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION

         
    
CREATE OR REPLACE VIEW AUTHORIZATION_VIEW AS
    SELECT 'CASH_TRANS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CASH_TRANS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'TRANSFER_TRANS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TRANSFER_TRANS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'INWARD_CLEARING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM INWARD_CLEARING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'OUTWARD_CLEARING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM OUTWARD_CLEARING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'OUTWARD_RETURN' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM OUTWARD_RETURN WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'CLEARING_PARAM' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CLEARING_PARAM WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'CUSTOMER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CUSTOMER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'CUST_SECURITY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CUST_SECURITY_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'ACT_MASTER' AS TABLE_NAME, 'AUTHORIZATION_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_MASTER WHERE AUTHORIZATION_STATUS IS NULL OR AUTHORIZATION_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'LOANS_FACILITY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS_1' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_FACILITY_DETAILS WHERE AUTHORIZE_STATUS_1 IS NULL OR AUTHORIZE_STATUS_1 = '' AND AUTHORIZE_STATUS_2 IS NULL OR AUTHORIZE_STATUS_2 = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_DRAWING_POWER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_DRAWING_POWER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'CASH_MOVEMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CASH_MOVEMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'CHEQUE_ISSUE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHEQUE_ISSUE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'CHEQUE_LOOSE_LEAF' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHEQUE_LOOSE_LEAF WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'CHEQUE_STOP_PAYMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHEQUE_STOP_PAYMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'ACT_FREEZE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_FREEZE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'ACT_LIEN' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_LIEN WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'ACT_CLOSING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM ACT_CLOSING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'AGENT_MASTER' AS TABLE_NAME, 'AUTHORIZED_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM AGENT_MASTER WHERE AUTHORIZED_STATUS IS NULL OR AUTHORIZED_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'BILLS_CARRIER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BILLS_CARRIER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'BILLS_LODGEMENT_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BILLS_LODGEMENT_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'BLOCK_LIST' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BLOCK_LIST WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'CHARGES' AS TABLE_NAME, 'AUTHORISED' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHARGES WHERE AUTHORISED IS NULL OR AUTHORISED = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DD_STOP_PAYMENT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DD_STOP_PAYMENT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DEATH_MARKING' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEATH_MARKING WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DEPOSIT_ACINFO' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_ACINFO WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DEPOSIT_SUB_ACINFO' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_SUB_ACINFO WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DEPOSIT_FREEZE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_FREEZE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'DEPOSIT_LIEN' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_LIEN WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'INVENTORY_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM INVENTORY_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'INVENTORY_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM INVENTORY_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'SHARE_ACCT' AS TABLE_NAME, 'AUTHORIZE' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_ACCT WHERE AUTHORIZE IS NULL OR AUTHORIZE = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'SHARE_ACCT_DETAILS' AS TABLE_NAME, 'AUTHORIZE' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_ACCT_DETAILS WHERE AUTHORIZE IS NULL OR AUTHORIZE = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'SHARE_TRANSFER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_TRANSFER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'STANDING_INSTRUCTION' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM STANDING_INSTRUCTION WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'TDS_EXEMPTION' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TDS_EXEMPTION WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'TOKEN_CONFIG' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TOKEN_CONFIG WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'TOKEN_ISSUE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TOKEN_ISSUE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION
    SELECT 'TOKEN_LOST' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TOKEN_LOST WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0

    
    
CREATE OR REPLACE VIEW AUTHORIZATION_DC_VIEW AS 
    SELECT 'MJR_AC_HD' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM MJR_AC_HD WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'SUB_AC_HD' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SUB_AC_HD WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'AC_HD' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM AC_HD WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'AC_HD_PARAM' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM AC_HD_PARAM WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'OP_AC_PRODUCT' AS TABLE_NAME, 'AUTHORIZED_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM OP_AC_PRODUCT WHERE AUTHORIZED_STATUS IS NULL OR AUTHORIZED_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSITS_PRODUCT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSITS_PRODUCT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LOANS_PRODUCT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LOANS_PRODUCT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'REMITTANCE_PRODUCT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM REMITTANCE_PRODUCT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'SHARE_CONF_DETAILS' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM SHARE_CONF_DETAILS WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'BILLS_PRODUCT' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BILLS_PRODUCT WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'BRANCH_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS_1' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BRANCH_MASTER WHERE AUTHORIZE_STATUS_1 IS NULL OR AUTHORIZE_STATUS_1 = '' OR AUTHORIZE_STATUS_2 IS NULL OR AUTHORIZE_STATUS_2 = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'DEPOSIT_ROI_GROUP' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM DEPOSIT_ROI_GROUP WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CHARGE_CONFIG' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHARGE_CONFIG WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'CLEARING_BANK_PARAM' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CLEARING_BANK_PARAM WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'FOREX_DENOMINATION_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM FOREX_DENOMINATION_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'FOREX_EXCHANGE_RATE' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM FOREX_EXCHANGE_RATE WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LEVEL_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LEVEL_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'LEVEL_MULTI' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM LEVEL_MULTI WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'OTHER_BANK' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM OTHER_BANK WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'TDS_CONFIG' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM TDS_CONFIG WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0 
     UNION
    SELECT 'USER_MASTER' AS TABLE_NAME, 'AUTHORIZED_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM USER_MASTER WHERE AUTHORIZED_STATUS IS NULL OR AUTHORIZED_STATUS = '' HAVING COUNT(*) > 0 
        UNION
            SELECT 'BLOCK_LIST' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BLOCK_LIST WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
        UNION
            SELECT 'CHARGES' AS TABLE_NAME, 'AUTHORISED' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM CHARGES WHERE AUTHORISED IS NULL OR AUTHORISED = '' HAVING COUNT(*) > 0
        UNION
            SELECT 'BILLS_CARRIER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BILLS_CARRIER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
    
        
        
    SELECT 'BILLS_LODGEMENT_MASTER' AS TABLE_NAME, 'AUTHORIZE_STATUS' AS COLUMN_NAME, COUNT(*) AS ERR_COUNT FROM BILLS_LODGEMENT_MASTER WHERE AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS = '' HAVING COUNT(*) > 0
     UNION        
    -->
    
    <mapped-statement name="getViewData" result-class="java.util.LinkedHashMap">
        SELECT TABLE_NAME, COLUMN_NAME, ERR_COUNT, BRANCH_COLUMN FROM AUTHORIZATION_VIEW
        WHERE BRANCH_ID = #BRANCH_ID:VARCHAR#
    </mapped-statement>
    <mapped-statement name="CashAndTransferAuth_view" result-class="java.util.LinkedHashMap">
        SELECT TABLE_NAME, COLUMN_NAME, ERR_COUNT, BRANCH_COLUMN FROM CashAndTransferAuth_view
        WHERE BRANCH_ID = #BRANCH_ID:VARCHAR#
    </mapped-statement>

    <!-- Statement to get the non authorized records -->
    <dynamic-mapped-statement name="getNonAuthorizedRecords" result-class="java.util.LinkedHashMap">
        SELECT '$TABLE_NAME$' as TABLE_NAME, 
        <dynamic>
            <isNotEqual prepend="" property="TABLE_NAME" compareValue="CUSTOMER" >
                $TABLE_NAME$.* 
            </isNotEqual>
            <isEqual prepend="" property="TABLE_NAME" compareValue="CUSTOMER" >
                CUST_ID, BRANCH_CODE, LNAME, FNAME, MNAME, DOB, NETWORTH, CREATEDDT, DELETEDDT, 
                GENDER, PROFESSION, MINOR, ANNINCOME, EDUCATION, VEHICLE, REMARKS, COMP_NAME, 
                COMM_ADDR_TYPE, EMAIL_ID, TITLE, RESIDENTIALSTATUS, NATIONALITY, LANGUAGE, 
                CUSTOMERGROUP, RELATIONMANAGER, PRIMARY_OCCUPATION, PREFERRED_COMM, STATUS, 
                MARITALSTATUS, CUST_TYPE_ID, SSN, CUST_USERID, CUST_PWD, CUST_TYPE, WEBSITE, 
                AUTHORIZE_CUST_ID, AUTHORIZED_BY, AUTHORIZED_DT, AUTHORIZE_STATUS, TRANS_PWD, 
                MEMBERSHIP_CLASS, CARE_OF, CARE_OF_NAME, CUSTOMER_STATUS, CR_AVAILED_SINCE, 
                RISK_RATING, INTRO_TYPE, ADDR_VERIFIED, PHONE_VERIFIED, OBTAIN_FINSTAT, 
                STATUS_BY, STATUS_DT, CREATED_BY, SEND_THANKS_LETTER, CONFIRM_THANKS, STAFF_ID, 
                DESIGNATION, NETWORTH_AS_ON, INITIATED_BRANCH, CASTE, PAN_NUMBER 
            </isEqual>
        </dynamic>
        FROM $TABLE_NAME$ WHERE ($COLUMN_NAME$ IS NULL OR
        $COLUMN_NAME$ = 'DAILY') AND STATUS!='DELETED'
        <dynamic>
            <isEqual prepend="AND" property="TABLE_NAME" compareValue="SHARE_ACCT" >
                INITIATED_BRANCH = #BRANCH_ID:VARCHAR#
            </isEqual>
            
            <isEqual prepend="AND" property="TABLE_NAME" compareValue="CASH_TRANS" >
                INITIATED_BRANCH = #BRANCH_ID:VARCHAR#
            </isEqual>
            
            <isNotEqual prepend="AND" property="TABLE_NAME" compareValue="SHARE_ACCT">
                <isNotEqual prepend="" property="TABLE_NAME" compareValue="CASH_TRANS">
                    $BRANCH_COLUMN$ = #BRANCH_ID:VARCHAR#
                </isNotEqual>
            </isNotEqual>
        </dynamic>
        <!--SELECT '$TABLE_NAME$' as TABLE_NAME, $TABLE_NAME$.* FROM $TABLE_NAME$ WHERE ($COLUMN_NAME$ IS NULL OR
        $COLUMN_NAME$ = '') AND $BRANCH_COLUMN$ = #BRANCH_ID#-->
    </dynamic-mapped-statement>
    
    <dynamic-mapped-statement name="getNonAuthRecInterBranch" result-class="java.util.LinkedHashMap">
        SELECT 'CASH_TRANS' AS TABLE_NAME, TRANS_ID, TRANS_DT, ACT_NUM, AC_HD_ID, AMOUNT, BRANCH_ID 
        FROM CASH_TRANS WHERE BRANCH_ID != INITIATED_BRANCH AND (AUTHORIZE_STATUS IS NULL OR 
        AUTHORIZE_STATUS='') AND TO_CHAR(TRANS_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT:DATE#, 'DD-MM-YYYY')
        <dynamic>
            <isNotPropertyAvailable prepend= "AND" property = "DAY_END_TYPE">
                INITIATED_BRANCH = #BRANCH_ID:VARCHAR#
            </isNotPropertyAvailable>
        </dynamic>
        UNION
        SELECT 'TRANSFER_TRANS' AS TABLE_NAME, TRANS_ID, TRANS_DT, ACT_NUM, AC_HD_ID, AMOUNT, 
        BRANCH_ID FROM TRANSFER_TRANS WHERE BRANCH_ID != INITIATED_BRANCH AND (AUTHORIZE_STATUS IS NULL 
        OR AUTHORIZE_STATUS='') AND TO_CHAR(TRANS_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT:DATE#, 'DD-MM-YYYY')
        <dynamic>
            <isNotPropertyAvailable prepend= "AND" property = "DAY_END_TYPE">
                INITIATED_BRANCH = #BRANCH_ID:VARCHAR#
            </isNotPropertyAvailable>
        </dynamic>
        UNION
        SELECT 'INWARD_CLEARING' AS TABLE_NAME, INWARD_ID AS TRANS_ID, INWARD_DT AS TRANS_DT, 
        ACCT_NO AS ACT_NUM, AC_HD_ID, AMOUNT, BRANCH_CODE AS BRANCH_ID FROM INWARD_CLEARING 
        WHERE BRANCH_CODE != INITIATED_BRANCH AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='')
        AND TO_CHAR(INWARD_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT:DATE#, 'DD-MM-YYYY')
        <dynamic>
            <isNotPropertyAvailable prepend= "AND" property = "DAY_END_TYPE">
                INITIATED_BRANCH = #BRANCH_ID:VARCHAR#
            </isNotPropertyAvailable>
        </dynamic>
        UNION
        SELECT 'OUTWARD_CLEARING' AS TABLE_NAME,OUTWARD_ID AS TRANS_ID, OUTWARD_DT AS TRANS_DT, 
        PS.ACCT_NO AS ACT_NUM, PS.AC_HD_ID, PS.AMOUNT, BRANCH_CODE AS BRANCH_ID FROM OUTWARD_CLEARING OC, 
        PAY_IN_SLIP PS WHERE PS.BATCH_ID = OC.BATCH_ID AND BRANCH_CODE != INITIATED_BRANCH AND 
        (OC.AUTHORIZE_STATUS IS NULL OR OC.AUTHORIZE_STATUS='') 
        AND TO_CHAR(OUTWARD_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT:DATE#, 'DD-MM-YYYY')
        <dynamic>
            <isNotPropertyAvailable prepend= "AND" property = "DAY_END_TYPE">
                INITIATED_BRANCH = #BRANCH_ID:VARCHAR#
            </isNotPropertyAvailable>
        </dynamic>
    </dynamic-mapped-statement>

    <mapped-statement name="getZeroBalanceData" result-class="java.util.LinkedHashMap">
        SELECT AM.* FROM ACT_MASTER AM, ACT_PARAM_DETAIL APD, OP_AC_ACCOUNT_PARAM OAPM 
        WHERE ACT_STATUS_ID = 'NEW' AND AM.ACT_NUM = APD.ACT_NUM AND 
        UPPER(AM.BRANCH_CODE) = UPPER(#BRANCH_CODE:VARCHAR#) AND 
        AM.STATUS != 'DELETED' AND (AM.AUTHORIZATION_STATUS IS NULL OR 
        AM.AUTHORIZATION_STATUS NOT IN ('REJECTED')) AND 
        AM.PROD_ID = OAPM.PROD_ID AND UPPER(AM.BRANCH_CODE) = UPPER(#BRANCH_CODE#) AND 
        TO_CHAR(CREATE_DT, 'DD-MM-YYYY') = TO_CHAR(cast(#TODAY_DT# as date), 'DD-MM-YYYY') AND
        (AVAILABLE_BALANCE &lt; DECODE(CHK_BOOK, 'Y', MIN_BAL_W_CHK, MIN_BAL_WT_CHK)
        OR AVAILABLE_BALANCE IS NULL)
    </mapped-statement>

    <mapped-statement name="getZeroBalanceDepositData" result-class="java.util.LinkedHashMap">
        SELECT DS.* FROM DEPOSIT_SUB_ACINFO DS, DEPOSIT_ACINFO DA 
        WHERE DA.DEPOSIT_STATUS = 'NEW' AND DA.DEPOSIT_NO = DS.DEPOSIT_NO AND
        UPPER(BRANCH_ID) = UPPER(#BRANCH_CODE:VARCHAR#) AND DS.STATUS != 'DELETED' AND
        DA.STATUS != 'DELETED' AND (DS.AUTHORIZE_STATUS IS NULL OR 
        DS.AUTHORIZE_STATUS NOT IN ('REJECTED')) AND 
        (DA.AUTHORIZE_STATUS IS NULL OR DA.AUTHORIZE_STATUS NOT IN ('REJECTED')) AND 
        TO_CHAR(DEPOSIT_DT, 'DD-MM-YYYY') = TO_CHAR(cast(#TODAY_DT# as date), 'DD-MM-YYYY') AND 
        (CLEAR_BALANCE &lt; DS.DEPOSIT_AMT OR CLEAR_BALANCE IS NULL)
    </mapped-statement>

    <mapped-statement name="getNonTallyTransfers" result-class="java.util.LinkedHashMap">
        SELECT BATCH_ID, SUM(DECODE(TRANS_TYPE, 'CREDIT', AMOUNT, 0)) AS CREDIT,
        SUM(DECODE(TRANS_TYPE, 'DEBIT', AMOUNT, 0)) AS DEBIT
        FROM TRANSFER_TRANS TT 
        WHERE TO_CHAR(TRANS_DT, 'DD-MM-YYYY') = TO_CHAR(cast(#TODAY_DT# as date), 'DD-MM-YYYY')
        AND UPPER(INITIATED_BRANCH) = UPPER(#BRANCH_CODE:VARCHAR#) AND 
        STATUS != 'DELETED' AND (AUTHORIZE_STATUS!='REJECTED' OR AUTHORIZE_STATUS IS NULL)
        GROUP BY BATCH_ID HAVING 
        SUM(DECODE(TRANS_TYPE, 'CREDIT', AMOUNT, 0)) - SUM(DECODE(TRANS_TYPE, 'DEBIT', AMOUNT, 0)) &lt;&gt; 0
        ORDER BY 1
    </mapped-statement>

    <mapped-statement name="getNonTallyOutClr_PS" result-class="java.util.LinkedHashMap">
        SELECT DISTINCT PS.BATCH_ID, 
        (SELECT SUM(AMOUNT) FROM OUTWARD_CLEARING WHERE BATCH_ID = OC.BATCH_ID AND STATUS!='DELETED')AS OUT_CLRG_AMOUNT, 
        (SELECT SUM(AMOUNT) FROM PAY_IN_SLIP WHERE BATCH_ID = PS.BATCH_ID AND STATUS!='DELETED') AS PAY_SLP_AMOUNT
        FROM OUTWARD_CLEARING OC, PAY_IN_SLIP PS WHERE PS.BATCH_ID = OC.BATCH_ID
        AND (PS.STATUS &lt;&gt; 'DELETED' AND OC.STATUS &lt;&gt; 'DELETED')
        AND UPPER(OC.BRANCH_ID) = UPPER(#BRANCH_CODE:VARCHAR#)
        AND (SELECT SUM(AMOUNT) FROM OUTWARD_CLEARING WHERE BATCH_ID = OC.BATCH_ID AND STATUS!='DELETED')
           &lt;&gt;
        (SELECT SUM(AMOUNT) FROM PAY_IN_SLIP WHERE BATCH_ID = PS.BATCH_ID AND STATUS!='DELETED')
        UNION
        SELECT BATCH_ID, SUM(OC.AMOUNT) AS OUT_CLRG_AMOUNT, 0 AS PAY_SLP_AMOUNT
        FROM OUTWARD_CLEARING OC
         <!--WHERE BATCH_ID NOT IN (SELECT BATCH_ID FROM PAY_IN_SLIP)-->
        WHERE  NOT EXISTS (SELECT BATCH_ID FROM PAY_IN_SLIP WHERE OC.BATCH_ID=BATCH_ID)
        AND OC.STATUS &lt;&gt; 'DELETED'
        AND UPPER(OC.BRANCH_ID) = UPPER(#BRANCH_CODE:VARCHAR#)
        GROUP BY BATCH_ID
        UNION
        SELECT BATCH_ID, 0 AS OC_AMOUNT, SUM(PS.AMOUNT) AS PS_AMOUNT
        <!-- FROM PAY_IN_SLIP PS WHERE BATCH_ID NOT IN
         (SELECT BATCH_ID FROM OUTWARD_CLEARING OC) AND STATUS &lt;&gt; 'DELETED'-->
        FROM PAY_IN_SLIP PS WHERE  NOT EXISTS
        (SELECT BATCH_ID FROM OUTWARD_CLEARING OC WHERE BATCH_ID=PS.BATCH_ID) AND STATUS &lt;&gt; 'DELETED'
        AND UPPER(PS.BRANCH_ID) = UPPER(#BRANCH_CODE:VARCHAR#)
        GROUP BY BATCH_ID, BRANCH_ID 
    </mapped-statement>

    <mapped-statement name="getInwardTallyNotClosed" result-class="java.util.LinkedHashMap">
        SELECT IT.SCHEDULE_NO, CLEARING_TYPE, COUNT(*) AS PHY_COUNT, SUM(PHY_AMOUNT) AS PHY_AMT 
        FROM INWARD_TALLY IT, INWARD_TALLY_DETAILS ITD WHERE 
        UPPER(BRANCH_ID) = UPPER(#BRANCH_CODE:VARCHAR#) AND
        TO_CHAR(CLEARING_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT:DATE#, 'DD-MM-YYYY')
        AND ITD.TALLY_ID = IT.TALLY_ID AND IT.TALLY_STATUS != 'CLOSED' 
        GROUP BY IT.SCHEDULE_NO, CLEARING_TYPE
    </mapped-statement>

    <mapped-statement name="getInwardTally" result-class="java.util.LinkedHashMap">
        <!--SELECT IT.SCHEDULE_NO, CLEARING_TYPE, COUNT(*) AS PHY_COUNT, SUM(PHY_AMOUNT) AS PHY_AMT 
        FROM INWARD_TALLY IT, INWARD_TALLY_DETAILS ITD WHERE 
        UPPER(BRANCH_ID) = UPPER(#BRANCH_CODE#) AND
        TO_CHAR(CLEARING_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT#, 'DD-MM-YYYY')
        AND ITD.TALLY_ID = IT.TALLY_ID GROUP BY IT.SCHEDULE_NO, CLEARING_TYPE-->
        SELECT IT.SCHEDULE_NO, CLEARING_TYPE, PHY_INSTRUMENTS  AS PHY_COUNT, PHY_AMOUNT AS PHY_AMT 
        FROM INWARD_TALLY IT, INWARD_TALLY_DETAILS ITD WHERE 
        UPPER(BRANCH_ID) = UPPER(#BRANCH_CODE:VARCHAR#) AND
        TO_CHAR(CLEARING_DT, 'DD-MM-YYYY') = TO_CHAR(cast(#TODAY_DT# as date), 'DD-MM-YYYY')
        AND ITD.TALLY_ID = IT.TALLY_ID
    </mapped-statement>

    <mapped-statement name="getClearingTally" result-class="java.util.LinkedHashMap">
        SELECT SCHEDULE_NO, CLEARING_TYPE, COUNT(*) AS PHY_COUNT, SUM(AMOUNT) AS PHY_AMT 
        FROM INWARD_CLEARING WHERE UPPER(BRANCH_ID) = UPPER(#BRANCH_CODE:VARCHAR#) AND    
        TO_CHAR(CLEARING_DT, 'DD-MM-YYYY') = TO_CHAR(cast(#TODAY_DT# as date), 'DD-MM-YYYY')
        GROUP BY CLEARING_TYPE, SCHEDULE_NO
    </mapped-statement>

    <mapped-statement name="getUserLogoutStatus" result-class="java.util.LinkedHashMap">
        SELECT USER_ID, LAST_LOGIN_DT, LOGIN_STATUS FROM USER_MASTER 
        WHERE BRANCH_CODE = #BRANCH_CODE:VARCHAR# 
        AND USER_ID != #USER_ID:VARCHAR#
        AND LOGIN_STATUS != 'LOGOUT'
    </mapped-statement>

    <mapped-statement name="getDayEndStatusForDC" result-class="java.util.LinkedHashMap">
        SELECT CURR_APPL_DT AS CUR_DT,BRANCH_CODE AS BRANCH_ID,'Branch DayEnd not completed' as ERROR_MSG FROM DAY_END         
        WHERE (END_DAY_STATUS IS NULL OR END_DAY_STATUS != 'COMPLETED')  AND CURR_APPL_DT = #DAYEND_DT:DATE#
        union
        select DAYEND_DT AS CUR_DT,BRANCH_ID AS BRANCH_ID,'DC DayEnd not completed' as ERROR_MSG  from daily_dayend_status_final
        where BRANCH_DAY_END_STATUS = 'COMPLETED' AND DC_DAY_END_STATUS IS NULL
        AND DAYEND_DT=#DAYEND_DT:DATE#
    </mapped-statement>
    
    <dynamic-mapped-statement name="getDayEndStatus" result-class="java.util.LinkedHashMap">
        SELECT CURR_APPL_DT FROM DAY_END
        WHERE (END_DAY_STATUS IS NULL OR END_DAY_STATUS != 'COMPLETED')
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="BRANCH_CODE">
                    BRANCH_CODE = #BRANCH_CODE:VARCHAR# 
                </isNotNull>
            </isParameterPresent>
        </dynamic>
    </dynamic-mapped-statement>
    
    <mapped-statement name="getCASH_TRANSNonAuthRecInterBranch" result-class="java.util.LinkedHashMap"> 
        SELECT 'CASH_TRANS' AS TABLE_NAME, TRANS_ID, TRANS_DT, ACT_NUM, AC_HD_ID, AMOUNT, BRANCH_ID 
        FROM CASH_TRANS WHERE BRANCH_ID != INITIATED_BRANCH AND (AUTHORIZE_STATUS IS NULL OR 
        AUTHORIZE_STATUS='') AND INITIATED_BRANCH = #BRANCH_ID:VARCHAR# AND 
        TO_CHAR(TRANS_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT:DATE#, 'DD-MM-YYYY')
    </mapped-statement>

    <mapped-statement name="getTRANSFER_TRANSNonAuthRecInterBranch" result-class="java.util.LinkedHashMap"> 
        SELECT 'TRANSFER_TRANS' AS TABLE_NAME, TRANS_ID, TRANS_DT, ACT_NUM, AC_HD_ID, AMOUNT, 
        BRANCH_ID FROM TRANSFER_TRANS WHERE BRANCH_ID != INITIATED_BRANCH AND (AUTHORIZE_STATUS IS NULL 
        OR AUTHORIZE_STATUS='') AND INITIATED_BRANCH = #BRANCH_ID:VARCHAR# AND 
        TO_CHAR(TRANS_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT:DATE#, 'DD-MM-YYYY')
    </mapped-statement>

        

    <mapped-statement name="getINWARD_CLEARINGNonAuthRecInterBranch" result-class="java.util.LinkedHashMap"> 
        SELECT 'INWARD_CLEARING' AS TABLE_NAME, INWARD_ID AS TRANS_ID, INWARD_DT AS TRANS_DT, 
        ACCT_NO AS ACT_NUM, AC_HD_ID, AMOUNT, BRANCH_CODE AS BRANCH_ID FROM INWARD_CLEARING 
        WHERE BRANCH_CODE != INITIATED_BRANCH AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='')
        AND INITIATED_BRANCH = #BRANCH_ID:VARCHAR# AND 
        TO_CHAR(INWARD_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT:DATE#, 'DD-MM-YYYY')
    </mapped-statement>

    <mapped-statement name="getOutward_CLEARINGNonAuthRecInterBranch" result-class="java.util.LinkedHashMap"> 
        SELECT 'OUTWARD_CLEARING' AS TABLE_NAME,OUTWARD_ID AS TRANS_ID, OUTWARD_DT AS TRANS_DT, 
        PS.ACCT_NO AS ACT_NUM, PS.AC_HD_ID, PS.AMOUNT, BRANCH_CODE AS BRANCH_ID FROM OUTWARD_CLEARING OC, 
        PAY_IN_SLIP PS WHERE PS.BATCH_ID = OC.BATCH_ID AND BRANCH_CODE != INITIATED_BRANCH AND 
        (OC.AUTHORIZE_STATUS IS NULL OR OC.AUTHORIZE_STATUS='') 
        AND INITIATED_BRANCH = #BRANCH_ID:VARCHAR# AND 
        TO_CHAR(OUTWARD_DT, 'DD-MM-YYYY') = TO_CHAR(#TODAY_DT:DATE#, 'DD-MM-YYYY')
    </mapped-statement>

    <dynamic-mapped-statement name="getNonAuthorizedPreviousdaysRecords" result-class="java.util.LinkedHashMap">
        SELECT DISTINCT '$TABLE_NAME$' as TABLE_NAME, 
        <dynamic>
            <isNotEqual prepend="" property="TABLE_NAME" compareValue="CUSTOMER" >
                $TABLE_NAME$.TRANS_DT 
            </isNotEqual>            
        </dynamic>
        FROM $TABLE_NAME$ WHERE ($COLUMN_NAME$ IS NULL OR
        $COLUMN_NAME$ = 'DAILY') AND STATUS!='DELETED'
        <dynamic>
            <isEqual prepend="AND" property="TABLE_NAME" compareValue="SHARE_ACCT" >
                INITIATED_BRANCH = #BRANCH_ID:VARCHAR#
            </isEqual>
            <isNotEqual prepend="AND" property="TABLE_NAME" compareValue="SHARE_ACCT" >
                $BRANCH_COLUMN$ = #BRANCH_ID:VARCHAR#
            </isNotEqual>
        </dynamic>
        ORDER BY $TABLE_NAME$.TRANS_DT
    </dynamic-mapped-statement>
</sql-map>
