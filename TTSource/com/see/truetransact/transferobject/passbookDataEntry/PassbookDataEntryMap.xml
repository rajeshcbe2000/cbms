<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="PassbookDataEntryMap">
             
    <mapped-statement name="getBankNames" result-class="java.util.HashMap"> 
        SELECT OB.ACCOUNT_TYPE AS "BANK_KEY", OB.AGENCY_NAME AS "BANK_VALUE" 
        FROM OTHER_BANKS_ACT_MASTER OB ORDER BY OB.ACT_MASTER_ID
    </mapped-statement>
 
    <mapped-statement name="insertPassBookDataTO" inline-parameters="true">
        INSERT INTO OTHER_BANK_PASSBOOK (BANK_CODE, BRANCH_CODE, TRANS_ID, TRANS_TYPE, TRANS_DATE, INST_TYPE, INST_DT, INSTRUMENT_NO1, 
        INSTRUMENT_NO2, PARTICULARS, AMOUNT, BALANCE, SRL_NO)
        VALUES(#bankCode:VARCHAR#, #branchCode:VARCHAR#, #transId:VARCHAR#, 
        #transType:VARCHAR#, #transDate:DATE#, #instType:VARCHAR#, 
        #instDate:DATE#, #instNo1:VARCHAR#, #instNo2:VARCHAR#, 
        #particulars:VARCHAR#, #amount:NUMBER#, #balance:NUMBER#, #srlNo:VARCHAR#)
    </mapped-statement>
     
    <mapped-statement name="getOtherBankCode" result-class="java.util.LinkedHashMap">
        SELECT OB.AGENCY_NAME, OB.AVAILABLE_BALANCE, OB.BRANCH_ID FROM OTHER_BANKS_ACT_MASTER OB WHERE OB.AGENCY_NAME = #bankName:VARCHAR#
    </mapped-statement>

    <dynamic-mapped-statement name="updatePassBookBalance" result-class="java.util.HashMap">
        UPDATE OTHER_BANK_PASSBOOK SET
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="" property="OTHER_BANK_OD">
                    <isEqual prepend="" property="TRANS_TYPE" compareValue="DEBIT" >
                        BALANCE = #BAL:NUMBER#-#AMT:NUMBER# 
                    </isEqual>        
                    <isEqual prepend="" property="TRANS_TYPE" compareValue="CREDIT" >
                        BALANCE = #BAL:NUMBER#+#AMT:NUMBER# 
                    </isEqual>
                </isNotNull>
            </isParameterPresent>
            <isNotParameterPresent>
                <isEqual prepend="" property="TRANS_TYPE" compareValue="DEBIT" >
                    BALANCE = #BAL:NUMBER#+#AMT:NUMBER# 
                </isEqual>        
                <isEqual prepend="" property="TRANS_TYPE" compareValue="CREDIT" >
                    BALANCE = #BAL:NUMBER#-#AMT:NUMBER# 
                </isEqual>
            </isNotParameterPresent>
        </dynamic>   
        WHERE BANK_CODE = #BANK_CODE:VARCHAR# AND BRANCH_CODE = #BRANCH_CODE:VARCHAR# 
        AND SRL_NO = #SRLNO:NUMBER# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </dynamic-mapped-statement>
     
    <mapped-statement name="getPassBookMaxBalance" result-class="java.util.HashMap">     
        SELECT SRL_NO, BALANCE FROM OTHER_BANK_PASSBOOK WHERE BANK_CODE = #BANK_CODE:VARCHAR# 
        AND BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND SRL_NO = 
        (SELECT MAX(OB.SRL_NO) FROM OTHER_BANK_PASSBOOK OB WHERE BANK_CODE = #BANK_CODE:VARCHAR# AND BRANCH_CODE = #BRANCH_CODE:VARCHAR#)
    </mapped-statement>
   
    <mapped-statement name="selectPassBookBalance" result-class="java.util.HashMap">     
        SELECT SRL_NO, BALANCE FROM OTHER_BANK_PASSBOOK WHERE BANK_CODE = #BANK_CODE:VARCHAR# 
        AND BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND SRL_NO = #SRLNO:NUMBER# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>
               
    <dynamic-mapped-statement name="getPassbookEditDetails" result-class="java.util.LinkedHashMap"> 
        SELECT OP.SRL_NO, OP.BANK_CODE, OP.BRANCH_CODE, OP.TRANS_TYPE, OP.BALANCE FROM OTHER_BANK_PASSBOOK OP 
        WHERE OP.BANK_CODE = #BANK_CODE:VARCHAR# AND OP.BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND OP.TRANS_DATE = #TRANS_DATE:DATE#
          <dynamic>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="SRL_NO">
                    UPPER(OP.SRL_NO) LIKE UPPER('%$SRL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="BANK_CODE">
                    UPPER(OP.BANK_CODE) LIKE UPPER('%$BANK_CODE$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="BRANCH_CODE">
                    UPPER(OP.BRANCH_CODE) LIKE UPPER('%$BRANCH_CODE$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="TRANS_TYPE">
                    UPPER(OP.TRANS_TYPE) LIKE UPPER('%$TRANS_TYPE$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="BALANCE">
                    UPPER(OP.BALANCE) LIKE UPPER('%$BALANCE$%')
                </isNotNull>
            </isParameterPresent>
           </dynamic>
        ORDER BY OP.BANK_CODE, OP.SRL_NO
        <!--SELECT OP.SRL_NO, OP.BANK_CODE, OP.BRANCH_CODE, OP.TRANS_TYPE, OP.BALANCE FROM OTHER_BANK_PASSBOOK OP 
        ORDER BY OP.BANK_CODE, OP.SRL_NO-->
    </dynamic-mapped-statement>
   
    <mapped-statement name="getAllPassbookDetails" result-class="java.util.HashMap"> 
        SELECT B.BANK_NAME AS BANK_CODE, B.BRANCH_ID AS BRANCH_CODE, OB.AMOUNT, OB.BALANCE, OB.INST_DT, OB.INST_TYPE,
        OB.INSTRUMENT_NO1, OB.INSTRUMENT_NO2, OB.PARTICULARS, OB.TRANS_DATE, OB.TRANS_ID, OB.TRANS_TYPE, OB.SRL_NO
        FROM OTHER_BANKS_ACT_MASTER B, OTHER_BANK_PASSBOOK OB WHERE B.AGENCY_NAME = #BANK_CODE:VARCHAR# 
        AND B.BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND OB.SRL_NO = #SRL_NO:NUMBER#
    </mapped-statement>
   
    <mapped-statement name="updatePassBookDataTO" inline-parameters="true">
        UPDATE OTHER_BANK_PASSBOOK SET 
        INST_TYPE = #instType:VARCHAR#,
        INST_DT = #instDate:DATE#,
        INSTRUMENT_NO1 = #instNo1:VARCHAR#,
        INSTRUMENT_NO2 = #instNo2:VARCHAR#, 
        PARTICULARS = #particulars:VARCHAR#, 
        AMOUNT = #amount:NUMBER#, 
        BALANCE = #balance:NUMBER#
        WHERE BANK_CODE = #bankCode:VARCHAR# AND BRANCH_CODE = #branchCode:VARCHAR# 
        AND TRANS_TYPE = #transType:VARCHAR# AND TRANS_DATE = #transDate:DATE# AND SRL_NO = #srlNo:VARCHAR# AND TRANS_ID = #transId:VARCHAR#
    </mapped-statement>
   
    <mapped-statement name="getLastSrlNoBal" result-class="java.util.HashMap"> 
        SELECT OB.BALANCE FROM OTHER_BANK_PASSBOOK OB WHERE OB.SRL_NO = #SRL:NUMBER#
    </mapped-statement>
   
    <mapped-statement name="getNextAmt" result-class="java.util.HashMap"> 
        SELECT OB.SRL_NO, OB.AMOUNT, OB.TRANS_TYPE, OB.TRANS_ID FROM OTHER_BANK_PASSBOOK OB WHERE OB.SRL_NO = #SRL:NUMBER#
    </mapped-statement>
   
    <mapped-statement name="getMaxPassbookSrlNo" result-class="java.util.HashMap"> 
        SELECT SRL_NO FROM OTHER_BANK_PASSBOOK WHERE BANK_CODE = #BANK_CODE:VARCHAR# AND BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND
        SRL_NO &lt;= (SELECT MAX(OB.SRL_NO) AS FROM OTHER_BANK_PASSBOOK OB WHERE OB.BANK_CODE = #BANK_CODE:VARCHAR# 
        AND OB.BRANCH_CODE = #BRANCH_CODE:VARCHAR#) AND SRL_NO!='1' AND SRL_NO &gt; #SRLNO:NUMBER#
    </mapped-statement>
   
    <mapped-statement name="getPassBookTransDate" result-class="java.util.HashMap">     
        SELECT OB.BANK_CODE, OB.BRANCH_CODE, OB.SRL_NO, OB.TRANS_DATE, OB.TRANS_TYPE, OB.TRANS_ID, OB.AMOUNT FROM OTHER_BANK_PASSBOOK OB 
        WHERE OB.BANK_CODE = #BANK_CODE:VARCHAR#  
        AND OB.BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND OB.TRANS_DATE &gt; #TRANSDT:DATE# 
        ORDER BY OB.TRANS_DATE, OB.SRL_NO
    </mapped-statement>
   
    <mapped-statement name="updatePassBookSrl" inline-parameters="true">
        UPDATE OTHER_BANK_PASSBOOK SET 
        SRL_NO = #SRL_NO:NUMBER#
        WHERE BANK_CODE = #BANK_CODE:VARCHAR# AND BRANCH_CODE = #BRANCH_CODE:VARCHAR# 
        AND TRANS_TYPE = #TRANS_TYPE:VARCHAR# AND TRANS_DATE = #TRANS_DATE:DATE# AND TRANS_ID=#TRANS_ID:VARCHAR#
    </mapped-statement>
   
    <mapped-statement name="updatePassBookSrlNo" inline-parameters="true">
        UPDATE OTHER_BANK_PASSBOOK SET 
        SRL_NO = #SRL_NO:NUMBER#
        WHERE BANK_CODE = #BANK_CODE:VARCHAR# AND BRANCH_CODE = #BRANCH_CODE:VARCHAR# 
        AND TRANS_TYPE = #TRANS_TYPE:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>
   
    <mapped-statement name="getAllPassBookNo" result-class="java.util.HashMap">
        SELECT OB.SRL_NO, OB.TRANS_TYPE FROM OTHER_BANK_PASSBOOK OB WHERE OB.SRL_NO &gt; #SRLNO:NUMBER# AND
        OB.BANK_CODE = #BANK_CODE:VARCHAR# AND OB.BRANCH_CODE = #BRANCH_CODE:VARCHAR# ORDER BY OB.SRL_NO
    </mapped-statement>
   
    <mapped-statement name="getAllPassBkSrlNo" result-class="java.util.HashMap">
        SELECT OB.SRL_NO, OB.TRANS_TYPE FROM OTHER_BANK_PASSBOOK OB WHERE OB.SRL_NO &gt; #SRLNO:NUMBER# AND
        OB.BANK_CODE = #BANK_CODE:VARCHAR# AND OB.BRANCH_CODE = #BRANCH_CODE:VARCHAR# ORDER BY OB.SRL_NO
    </mapped-statement>
    
    <mapped-statement name="getPreviousTransID" result-class="java.util.HashMap">
        SELECT OB.TRANS_ID FROM OTHER_BANK_PASSBOOK OB WHERE OB.BANK_CODE=#BANK_CODE:VARCHAR# AND OB.BRANCH_CODE=#BRANCH_CODE:VARCHAR# 
        AND OB.SRL_NO = #SRLNO:NUMBER#
    </mapped-statement>
      
    <mapped-statement name="getAllPassDetails" result-class="java.util.HashMap">
        SELECT * FROM OTHER_BANK_PASSBOOK OB WHERE OB.SRL_NO=#SRL:NUMBER#
    </mapped-statement>
    
    <mapped-statement name="getPassBookMaxSrlNo" result-class="java.util.HashMap">
        SELECT MAX(OB.SRL_NO) AS SRLNO FROM OTHER_BANK_PASSBOOK OB WHERE OB.BANK_CODE=#BANK_CODE:VARCHAR# AND OB.BRANCH_CODE=#BRANCH_CODE:VARCHAR#
    </mapped-statement>
    
    <mapped-statement name="getPassMinMaxSrlNo" result-class="java.util.HashMap">
        SELECT MIN(OB.SRL_NO) AS MIN_SRL, MAX(OB.SRL_NO) AS MAX_SRL FROM OTHER_BANK_PASSBOOK OB WHERE OB.TRANS_DATE = #TRANS_DATE:DATE#
    </mapped-statement>
    
    <mapped-statement name="getPassBookTransID" result-class="java.util.HashMap">
        SELECT OB.TRANS_ID FROM OTHER_BANK_PASSBOOK OB WHERE OB.BANK_CODE=#BANK_CODE:VARCHAR# AND OB.BRANCH_CODE=#BRANCH_CODE:VARCHAR# 
        AND OB.TRANS_ID=#TRANSID:VARCHAR#
    </mapped-statement>
    
    <mapped-statement name="getPassBkTransID" result-class="java.util.HashMap">
        SELECT OB.TRANS_ID FROM OTHER_BANK_PASSBOOK OB WHERE OB.BANK_CODE=#BANK_CODE:VARCHAR# AND OB.BRANCH_CODE=#BRANCH_CODE:VARCHAR# 
        AND OB.SRL_NO = #SRLNO:NUMBER#
    </mapped-statement>
    
    <mapped-statement name="getPassBkTransDate" result-class="java.util.HashMap">
        SELECT OB.TRANS_DATE FROM OTHER_BANK_PASSBOOK OB WHERE OB.BANK_CODE=#BANK_CODE:VARCHAR# AND OB.BRANCH_CODE=#BRANCH_CODE:VARCHAR# 
        AND OB.TRANS_DATE = #TRANS_DATE:DATE#
    </mapped-statement>
    
    <mapped-statement name="updateOtherBankFinalBalance" result-class="java.util.HashMap" > 
        call OTHER_BANK_BAL_UPDATE(#BANKCODE:VARCHAR#, #BRANCHCODE:VARCHAR#, #ACCTYPE:VARCHAR#)
    </mapped-statement> 
    
</sql-map>