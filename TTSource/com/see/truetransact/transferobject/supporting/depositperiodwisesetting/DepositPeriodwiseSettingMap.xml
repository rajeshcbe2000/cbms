<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="DepositPeriodwiseSettingMap">

	<!-- Use DepositPeriodwiseSettingTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertDepositPeriodwiseSettingTO" inline-parameters="true">
        INSERT INTO DEPOSIT_PERIOD_WISE_SETTINGS(PERIOD_NAME,PERIOD_FROM,PERIOD_TO, PRIORITY,PERIOD_TYPE,ID)
        VALUES(#periodname:VARCHAR#, #periodfrom:NUMBER#, #periodto:NUMBER#, #priority:NUMBER#, #periodtype:VARCHAR#, #id:VARCHAR#)	
    </mapped-statement>


	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to VisitorsDiaryTO object (JavaBean) properties -->
    <result-map name="getDepositPeriodwiseSettingToResult" class="com.see.truetransact.transferobject.supporting.depositperiodwisesetting.DepositPeriodwiseSettingTO">
        <property name="id" column="ID"/>
        <property name="periodname" column="PERIOD_NAME"/>
        <property name="periodfrom" column="PERIOD_FROM"/>
        <property name="periodto" column="PERIOD_TO"/>
        <property name="priority" column="PRIORITY"/>
        <property name="periodtype" column="PERIOD_TYPE"/>
               
    </result-map>
        
    <mapped-statement name="getDepositPeriodwiseSettingEdit" result-class="java.util.LinkedHashMap">
        SELECT PERIOD_NAME,PERIOD_FROM,PERIOD_TO,PRIORITY,PERIOD_TYPE,ID FROM DEPOSIT_PERIOD_WISE_SETTINGS
                
    </mapped-statement>  
    <mapped-statement name="getSelectDepositPeriodwiseSettingTO" result-map="getDepositPeriodwiseSettingToResult" >
        SELECT * FROM DEPOSIT_PERIOD_WISE_SETTINGS 
        WHERE ID = #ID:VARCHAR#  
    </mapped-statement>
    <mapped-statement name="updateDepositPeriodwiseSettingTO" inline-parameters="true">
        UPDATE DEPOSIT_PERIOD_WISE_SETTINGS SET 
        PERIOD_NAME =  #periodname:VARCHAR#,
        PERIOD_FROM =  #periodfrom:NUMBER#,
        PERIOD_TO = #periodto:NUMBER#,
        PRIORITY= #priority:NUMBER#,
        PERIOD_TYPE = #periodtype:VARCHAR#
        WHERE ID = #id:VARCHAR#
    </mapped-statement>
    <mapped-statement name="deleteDepositPeriodwiseSettingTO" inline-parameters="true">
        UPDATE DEPOSIT_PERIOD_WISE_SETTINGS SET 
        PRIORITY= #priority:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement> 
        
        
        
       <!-- Use DepositAmountwiseSettingTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
        
    <mapped-statement name="insertDepositAmountwiseSettingTO" inline-parameters="true">
        INSERT INTO RPT_DEP_AMTWISE_SETTINGS(AMOUNT_RANGE,FROM_AMOUNT,TO_AMOUNT,PRIORITY,ID)
        VALUES(#amountrange:VARCHAR#, #fromamount:NUMBER#, #toamount:NUMBER#, #priorityy:NUMBER#, #id:VARCHAR#)	
    </mapped-statement>


	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to VisitorsDiaryTO object (JavaBean) properties -->
    <result-map name="getDepositAmountwiseSettingToResult" class="com.see.truetransact.transferobject.supporting.depositperiodwisesetting.DepositPeriodwiseSettingTO">
        <property name="id" column="ID"/>
        <property name="amountrange" column="AMOUNT_RANGE"/>
        <property name="fromamount" column="FROM_AMOUNT"/>
        <property name="toamount" column="TO_AMOUNT"/>
        <property name="priorityy" column="PRIORITY"/>
                
               
    </result-map>
        
    <mapped-statement name="getDepositAmountwiseSettingEdit" result-class="java.util.LinkedHashMap">
        SELECT AMOUNT_RANGE,FROM_AMOUNT,TO_AMOUNT,PRIORITY,ID FROM RPT_DEP_AMTWISE_SETTINGS
                
    </mapped-statement>  
    <mapped-statement name="getSelectDepositAmountwiseSettingTO" result-map="getDepositAmountwiseSettingToResult" >
        SELECT * FROM RPT_DEP_AMTWISE_SETTINGS
        WHERE ID = #ID:VARCHAR#  
    </mapped-statement>
    <mapped-statement name="updateDepositAmountwiseSettingTO" inline-parameters="true">
        UPDATE RPT_DEP_AMTWISE_SETTINGS SET 
        AMOUNT_RANGE = #amountrange:VARCHAR#,
        FROM_AMOUNT =  #fromamount:NUMBER#,
        TO_AMOUNT = #toamount:NUMBER#,
        PRIORITY =  #priorityy:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement>
    <mapped-statement name="deleteDepositAmountwiseSettingTO" inline-parameters="true">
        UPDATE RPT_DEP_AMTWISE_SETTINGS SET 
        PRIORITY= #priorityy:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement> 
        
        
        <!-- Use    RPT_LOANISSUED_AMTWISE object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
        
       
        
    <mapped-statement name="insertLoanAmountwiseSettingTO" inline-parameters="true">
        INSERT INTO RPT_LOANISSUED_AMTWISE(AMOUNT_RANGE,FROM_AMOUNT,TO_AMOUNT,PRIORITY,ID)
        VALUES(#amountrange1:VARCHAR#, #fromamount1:NUMBER#, #toamount1:NUMBER#, #priorityy1:NUMBER#, #id:VARCHAR#)	
    </mapped-statement>


	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to VisitorsDiaryTO object (JavaBean) properties -->
    <result-map name="getLoanAmountwiseSettingToResult" class="com.see.truetransact.transferobject.supporting.depositperiodwisesetting.DepositPeriodwiseSettingTO">
        <property name="id" column="ID"/>
        <property name="amountrange1" column="AMOUNT_RANGE"/>
        <property name="fromamount1" column="FROM_AMOUNT"/>
        <property name="toamount1" column="TO_AMOUNT"/>
        <property name="priorityy1" column="PRIORITY"/>
                
               
    </result-map>
        
    <mapped-statement name="getLoanAmountwiseSettingEdit" result-class="java.util.LinkedHashMap">
        SELECT AMOUNT_RANGE,FROM_AMOUNT,TO_AMOUNT,PRIORITY,ID FROM RPT_LOANISSUED_AMTWISE
                
    </mapped-statement>  
    <mapped-statement name="getSelectLoanAmountwiseSettingTO" result-map="getLoanAmountwiseSettingToResult" >
        SELECT * FROM RPT_LOANISSUED_AMTWISE
        WHERE ID = #ID:VARCHAR#  
    </mapped-statement>
    <mapped-statement name="updateLoanAmountwiseSettingTO" inline-parameters="true">
        UPDATE RPT_LOANISSUED_AMTWISE SET 
        AMOUNT_RANGE = #amountrange1:VARCHAR#,
        FROM_AMOUNT =  #fromamount1:NUMBER#,
        TO_AMOUNT = #toamount1:NUMBER#,
        PRIORITY =  #priorityy1:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement>
    <mapped-statement name="deleteLoanAmountwiseSettingTO" inline-parameters="true">
        UPDATE RPT_DEP_AMTWISE_SETTINGS SET 
        PRIORITY= #priorityy1:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement> 
        
        
        <!-- Use    RPT_LOANISSUED_PRDWISE object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
        
      
          
    <mapped-statement name="insertLoanPeriodwiseSettingTO" inline-parameters="true">
        INSERT INTO  RPT_LOANISSUED_PRDWISE(PERIOD_RANGE,FROM_PERIOD,FROM_PERIOD_TYPE,TO_PERIOD,TO_PERIOD_TYPE,PRIORITY,ID)
        VALUES(#periodrange:VARCHAR#, #periodfrom1:NUMBER#, #periodtype1:VARCHAR#, #periodto1:NUMBER#, #periodtype2:VARCHAR#, #priority1:NUMBER#, #id:VARCHAR#)	
    </mapped-statement>


	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to VisitorsDiaryTO object (JavaBean) properties -->
    <result-map name="getLoanPeriodwiseSettingToResult" class="com.see.truetransact.transferobject.supporting.depositperiodwisesetting.DepositPeriodwiseSettingTO">
        <property name="id" column="ID"/>
        <property name="periodrange" column="PERIOD_RANGE"/>
        <property name="periodfrom1" column="FROM_PERIOD"/>
        <property name="periodtype1" column="FROM_PERIOD_TYPE"/>
        <property name="periodto1" column="TO_PERIOD"/>
        <property name="periodtype2" column="TO_PERIOD_TYPE"/>
        <property name="priority1" column="PRIORITY"/>
               
    </result-map>
        
    <mapped-statement name="getLoanPeriodwiseSettingEdit" result-class="java.util.LinkedHashMap">
        SELECT PERIOD_RANGE,FROM_PERIOD,FROM_PERIOD_TYPE,TO_PERIOD,TO_PERIOD_TYPE,PRIORITY,ID FROM  RPT_LOANISSUED_PRDWISE
                
    </mapped-statement>  
    <mapped-statement name="getSelectLoanPeriodwiseSettingTO" result-map="getLoanPeriodwiseSettingToResult" >
        SELECT * FROM  RPT_LOANISSUED_PRDWISE
        WHERE ID = #ID:VARCHAR#  
    </mapped-statement>
    <mapped-statement name="updateLoanPeriodwiseSettingTO" inline-parameters="true">
        UPDATE  RPT_LOANISSUED_PRDWISE SET
        PERIOD_RANGE =  #periodrange:VARCHAR#,
        FROM_PERIOD =  #periodfrom1:NUMBER#,
        FROM_PERIOD_TYPE = #periodtype1:VARCHAR#,
        TO_PERIOD= #periodto1:NUMBER#,
        TO_PERIOD_TYPE = #periodtype2:VARCHAR#,
        PRIORITY= #priority1:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement>
    <mapped-statement name="deleteLoanPeriodwiseSettingTO" inline-parameters="true">
        UPDATE  RPT_LOANISSUED_PRDWISE SET 
        PRIORITY= #priority1:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement> 
        
        <!-- Use    RPT_LOANISSUED_PRDWISE object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
        
      
          
    <mapped-statement name="insertLoanODPeriodwiseSettingTO" inline-parameters="true">
        INSERT INTO  RPT_LOANOD_PRDWISE(PRIORITY,DESCRIPTION,FROM_PERIOD,FROM_PERIOD_TYPE,TO_PERIOD,TO_PERIOD_TYPE,ID)
        VALUES(#priority2:NUMBER#,#desc:VARCHAR#, #periodfrom3:NUMBER#, #periodtype3:VARCHAR#, #periodto4:NUMBER#, #periodtype4:VARCHAR#, #id:VARCHAR#)	
    </mapped-statement>


	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to VisitorsDiaryTO object (JavaBean) properties -->
    <result-map name="getLoanODPeriodwiseSettingToResult" class="com.see.truetransact.transferobject.supporting.depositperiodwisesetting.DepositPeriodwiseSettingTO">
        <property name="id" column="ID"/>
        <property name="priority2" column="PRIORITY"/>
        <property name="desc" column="DESCRIPTION"/>
        <property name="periodfrom3" column="FROM_PERIOD"/>
        <property name="periodtype3" column="FROM_PERIOD_TYPE"/>
        <property name="periodto4" column="TO_PERIOD"/>
        <property name="periodtype4" column="TO_PERIOD_TYPE"/>
    </result-map>
        
    <mapped-statement name="getLoanODPeriodwiseSettingEdit" result-class="java.util.LinkedHashMap">
        SELECT PRIORITY,DESCRIPTION,FROM_PERIOD,FROM_PERIOD_TYPE,TO_PERIOD,TO_PERIOD_TYPE,ID FROM  RPT_LOANOD_PRDWISE
                
    </mapped-statement>  
    <mapped-statement name="getSelectLoanODPeriodwiseSettingTO" result-map="getLoanODPeriodwiseSettingToResult" >
        SELECT * FROM  RPT_LOANOD_PRDWISE
        WHERE ID = #ID:VARCHAR#  
    </mapped-statement>
    <mapped-statement name="updateLoanODPeriodwiseSettingTO" inline-parameters="true">
        UPDATE  RPT_LOANOD_PRDWISE SET
        PRIORITY= #priority2:NUMBER#,
        DESCRIPTION =  #desc:VARCHAR#,
        FROM_PERIOD = #periodfrom3:NUMBER#,
        FROM_PERIOD_TYPE = #periodtype3:VARCHAR#,
        TO_PERIOD= #periodto4:NUMBER#,
        TO_PERIOD_TYPE =  #periodtype4:VARCHAR#
        WHERE ID = #id:VARCHAR#
    </mapped-statement>
    <mapped-statement name="deleteLoanODPeriodwiseSettingTO" inline-parameters="true">
        UPDATE  RPT_LOANOD_PRDWISE SET 
        PRIORITY= #priority2:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement> 
        
        
         <!-- Use    TL_BAD_DOUBTFULL_SETTINGS object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
        
      
          
    <mapped-statement name="insertBaddoubtfullSettingTO" inline-parameters="true">
        INSERT INTO TL_BAD_DOUBTFULL_SETTINGS(PERSONAL_DOUBTFULL_FROM,PERSONAL_DOUBTFULL_TO,PERSONAL_BAD_FROM,PERSONAL_BAD_TO,DOCUMENT_DOUBTFULL_FROM,DOCUMENT_DOUBTFULL_TO,DOCUMENT_BAD_FROM,DOCUMENT_BAD_TO,PERSONAL_DOUBTFUL_NARRATION,PERSONAL_BAD_NARRATION,DOCUMENT_DOUBTFUL_NARRATION,DOCUMENT_BAD_NARRATION,ID)
        VALUES(#doubtfrom:NUMBER#, #doubtto:NUMBER#, #badfrom:NUMBER#, #badto:NUMBER#, #docdoubtfrom:NUMBER#, #docdoubtto:NUMBER#, #docbadfrom:NUMBER#, #docbadto:NUMBER#, #doubtnarra:VARCHAR#, #badnarra:VARCHAR#, #docdoubtnara:VARCHAR#, #docbadnara:VARCHAR#, #id:VARCHAR#)	
    </mapped-statement>


	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to VisitorsDiaryTO object (JavaBean) properties -->
    <result-map name="getBaddoubtfullSettingToResult" class="com.see.truetransact.transferobject.supporting.depositperiodwisesetting.DepositPeriodwiseSettingTO">
        <property name="id" column="ID"/>
                
                
        <property name="doubtfrom" column="PERSONAL_DOUBTFULL_FROM"/>
        <property name="doubtto" column="PERSONAL_DOUBTFULL_TO"/>
        <property name="badfrom" column="PERSONAL_BAD_FROM"/>
        <property name="badto" column="PERSONAL_BAD_TO"/>
        <property name="docdoubtfrom" column="DOCUMENT_DOUBTFULL_FROM"/>
        <property name="docdoubtto" column="DOCUMENT_DOUBTFULL_TO"/>
        <property name="docbadfrom" column="DOCUMENT_BAD_FROM"/>
        <property name="docbadto" column="DOCUMENT_BAD_TO"/>
        <property name="doubtnarra" column="PERSONAL_DOUBTFUL_NARRATION"/>
        <property name="badnarra" column="PERSONAL_BAD_NARRATION"/>
        <property name="docdoubtnara" column="DOCUMENT_DOUBTFUL_NARRATION"/>
        <property name="docbadnara" column="DOCUMENT_BAD_NARRATION"/>
    </result-map>
        
    <mapped-statement name="getBaddoubtfullSettingEdit" result-class="java.util.LinkedHashMap">
        SELECT PERSONAL_DOUBTFULL_FROM,PERSONAL_DOUBTFULL_TO,PERSONAL_BAD_FROM,PERSONAL_BAD_TO,DOCUMENT_DOUBTFULL_FROM,DOCUMENT_DOUBTFULL_TO,DOCUMENT_BAD_FROM,DOCUMENT_BAD_TO,PERSONAL_DOUBTFUL_NARRATION,PERSONAL_BAD_NARRATION,DOCUMENT_DOUBTFUL_NARRATION,DOCUMENT_BAD_NARRATION,ID 
        FROM TL_BAD_DOUBTFULL_SETTINGS
                
    </mapped-statement>  
    <mapped-statement name="getSelectBaddoubtfullSettingTO" result-map="getBaddoubtfullSettingToResult" >
        SELECT * FROM TL_BAD_DOUBTFULL_SETTINGS
        WHERE ID = #ID:VARCHAR#  
    </mapped-statement>
    <mapped-statement name="updateBaddoubtfullSettingTO" inline-parameters="true">
        UPDATE TL_BAD_DOUBTFULL_SETTINGS SET
        PERSONAL_DOUBTFULL_FROM= #doubtfrom:NUMBER#,
        PERSONAL_DOUBTFULL_TO =   #doubtto:NUMBER#,
        PERSONAL_BAD_FROM = #badfrom:NUMBER#,
        PERSONAL_BAD_TO = #badto:NUMBER#,
        DOCUMENT_DOUBTFULL_FROM= #docdoubtfrom:NUMBER#,
        DOCUMENT_DOUBTFULL_TO = #docdoubtto:NUMBER#,
        DOCUMENT_BAD_FROM= #docbadfrom:NUMBER#,
        DOCUMENT_BAD_TO =  #docbadto:NUMBER#,
        PERSONAL_DOUBTFUL_NARRATION =   #doubtnarra:VARCHAR#,
        PERSONAL_BAD_NARRATION = #badnarra:VARCHAR#,
        DOCUMENT_DOUBTFUL_NARRATION= #docdoubtnara:VARCHAR#,
        DOCUMENT_BAD_NARRATION =   #docbadnara:VARCHAR#
        WHERE ID = #id:VARCHAR#
    </mapped-statement>
    <mapped-statement name="deleteBaddoubtfullSettingTO" inline-parameters="true">
        UPDATE  TL_BAD_DOUBTFULL_SETTINGS SET 
        PERSONAL_DOUBTFULL_FROM= #doubtfrom:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement> 
        
        
    <mapped-statement name="insertFluidparameterTO" inline-parameters="true">
        INSERT INTO FLUID_PARAMETERS(FTYPE, MODULE, DESCRIPTION, PERCENTAGE, ID)VALUES(#fluidType:VARCHAR# , #module:VARCHAR#, #description:VARCHAR#, #percentage:NUMBER#, #id:VARCHAR#)
    </mapped-statement>        


	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to VisitorsDiaryTO object (JavaBean) properties -->
    <result-map name="getFluidparameterToResult" class="com.see.truetransact.transferobject.supporting.depositperiodwisesetting.DepositPeriodwiseSettingTO">
        <property name="id" column="ID"/>
        <property name="fluidType" column="FTYPE"/>
        <property name="module" column="MODULE"/>
        <property name="description" column="DESCRIPTION"/>
        <property name="percentage" column="PERCENTAGE"/>
    </result-map>
        
       
        
    <mapped-statement name="getFluidparameterEdit" result-class="java.util.LinkedHashMap">
        SELECT FTYPE, DESCRIPTION, PERCENTAGE ,ID
        FROM FLUID_PARAMETERS
                
    </mapped-statement>  
    <mapped-statement name="getSelectFluidparameterTO" result-map="getFluidparameterToResult" >
        SELECT * FROM FLUID_PARAMETERS
        WHERE ID = #ID:VARCHAR#  
    </mapped-statement>
    <mapped-statement name="updateFluidparameterTO" inline-parameters="true">
        UPDATE FLUID_PARAMETERS SET
        FTYPE = #fluidType:VARCHAR#,
        MODULE =   #module:VARCHAR#,
        DESCRIPTION = #description:VARCHAR#,
        PERCENTAGE =  #percentage:NUMBER#
        WHERE ID = #id:VARCHAR#
    </mapped-statement>
    <mapped-statement name="deleteFluidparameterTO" inline-parameters="true">
        UPDATE  FLUID_PARAMETERS SET 
        FTYPE = #fluidType:VARCHAR#
        WHERE ID = #id:VARCHAR#
    </mapped-statement> 
        
    
</sql-map>