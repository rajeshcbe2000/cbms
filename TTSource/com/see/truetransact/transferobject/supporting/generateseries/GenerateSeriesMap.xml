<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="GenerateSeriesMap">


    <mapped-statement name="GS.getTransSeriesOut" result-class="java.util.LinkedHashMap" >
        SELECT ID.BOOK_SLNO_FROM AS "BOOK_SLNO_FROM", ID.BOOK_SLNO_TO AS "BOOK_SLNO_TO", ID.INSTRUMENT_PREFIX, 
        ID.LEAVES_SLNO_TO AS "LEAVES_SLNO_FROM"
        FROM INVENTORY_MASTER IM, INVENTORY_DETAILS ID
        WHERE IM.ITEM_TYPE= #ITEM_TYPE:VARCHAR#
        AND IM.ITEM_SUB_TYPE = #USAGE:VARCHAR#
        AND IM.LEAVES_PER_BOOK = #NO OF LEAVES#
        AND IM.ITEM_ID = ID.ITEM_ID
        AND ID.TRANS_TYPE = 'TRANS_OUT'
        AND (ID.STATUS NOT IN ('DELETED'))
        AND (IM.STATUS NOT IN ('DELETED'))
        AND IM.AUTHORIZE_STATUS = 'AUTHORIZED'
        AND IM.BRANCH_ID = #BRANCH_CODE:VARCHAR#
        ORDER BY ID.TRANS_ID DESC
    </mapped-statement>
    
    <mapped-statement name="GS.getTransSeries" result-class="java.util.LinkedHashMap" >
        <!--SELECT DISTINCT ID1.TRANS_DT, IM.ITEM_ID, ID1.TRANS_TYPE, ID1.BOOK_SLNO_FROM, ID1.BOOK_SLNO_TO,
        ID1.INSTRUMENT_PREFIX, ID1.LEAVES_SLNO_FROM, ID1.LEAVES_SLNO_TO, ID1.TRANS_ID
        FROM INVENTORY_MASTER IM, INVENTORY_DETAILS ID1, INVENTORY_DETAILS ID2
        WHERE IM.ITEM_TYPE= #ITEM_TYPE:VARCHAR#
        AND IM.ITEM_SUB_TYPE = #USAGE:VARCHAR#
        AND IM.LEAVES_PER_BOOK = #NO OF LEAVES#
        AND IM.ITEM_ID = ID1.ITEM_ID
        AND IM.ITEM_ID = ID2.ITEM_ID
        AND ID1.TRANS_TYPE = 'TRANS_IN'
        AND ID2.TRANS_TYPE = 'TRANS_OUT'
        AND NOT (ID1.TRANS_IN_ID IS NOT NULL  AND ID1.BOOK_SLNO_FROM = (SELECT MIN (BOOK_SLNO_FROM) FROM INVENTORY_DETAILS
        WHERE TRANS_IN_ID=ID1.TRANS_ID)
        AND ID1.TRANS_IN_ID IS NOT NULL AND ID1.BOOK_SLNO_TO = (SELECT MAX (BOOK_SLNO_TO) FROM INVENTORY_DETAILS
        WHERE TRANS_IN_ID=ID1.TRANS_ID))
        AND ID1.ITEM_ID = ID2.ITEM_ID
        AND (UPPER(ID1.BOOK_SERIES_OVER) = 'N' OR ID1.BOOK_SERIES_OVER IS NULL)
        AND (ID1.STATUS NOT IN ('DELETED'))
        AND ID1.AUTHORIZE_STATUS = 'AUTHORIZED'
        AND (ID2.STATUS NOT IN ('DELETED'))
        AND (IM.STATUS NOT IN ('DELETED'))
        AND IM.AUTHORIZE_STATUS = 'AUTHORIZED'
        AND IM.BRANCH_ID = #BRANCH_CODE:VARCHAR#
        ORDER BY ID1.TRANS_ID-->
        SELECT DISTINCT ID1.TRANS_DT, IM.ITEM_ID, ID1.TRANS_TYPE, ID1.BOOK_SLNO_FROM, ID1.BOOK_SLNO_TO,
        ID1.INSTRUMENT_PREFIX, ID1.LEAVES_SLNO_FROM, ID1.LEAVES_SLNO_TO, ID1.TRANS_ID
        FROM INVENTORY_MASTER IM, INVENTORY_DETAILS ID1, INVENTORY_DETAILS ID2
        WHERE IM.ITEM_TYPE= #ITEM_TYPE:VARCHAR#
        AND IM.ITEM_SUB_TYPE = #USAGE:VARCHAR#
        AND IM.LEAVES_PER_BOOK = #NO OF LEAVES#
        AND IM.ITEM_ID = ID1.ITEM_ID
        AND IM.ITEM_ID = ID2.ITEM_ID
        AND ID1.TRANS_TYPE = 'TRANS_IN'
        AND ID2.TRANS_TYPE = 'TRANS_OUT'
        AND ID1.INSTRUMENT_PREFIX = #INSTRUMENT_PREFIX:VARCHAR#
        AND ID2.INSTRUMENT_PREFIX = #INSTRUMENT_PREFIX:VARCHAR#
        AND (#BK_SERIES_FROM:NUMBER# BETWEEN ID1.BOOK_SLNO_FROM AND ID1.BOOK_SLNO_TO)
        AND (#BK_SERIES_TO:NUMBER# BETWEEN ID1.BOOK_SLNO_FROM AND ID1.BOOK_SLNO_TO)
        AND (ID1.STATUS NOT IN ('DELETED'))
        AND ID1.AUTHORIZE_STATUS = 'AUTHORIZED'
        AND (ID2.STATUS NOT IN ('DELETED'))
        AND (IM.STATUS NOT IN ('DELETED'))
        AND IM.AUTHORIZE_STATUS = 'AUTHORIZED'
        AND IM.BRANCH_ID = #BRANCH_CODE:VARCHAR#
        ORDER BY ID1.TRANS_ID
    </mapped-statement>
    
    <mapped-statement name="GS.getTransSeriesIn" result-class="java.util.LinkedHashMap" >
        SELECT IM.ITEM_ID, ID.BOOK_SLNO_FROM, ID.BOOK_SLNO_TO, ID.INSTRUMENT_PREFIX, 
        ID.LEAVES_SLNO_FROM, ID.LEAVES_SLNO_TO, ID.TRANS_ID
        FROM INVENTORY_MASTER IM, INVENTORY_DETAILS ID
        WHERE IM.ITEM_TYPE= #ITEM_TYPE:VARCHAR#
        AND IM.ITEM_SUB_TYPE = #USAGE:VARCHAR#
        AND IM.LEAVES_PER_BOOK = #NO OF LEAVES#
        AND ID.ITEM_ID = IM.ITEM_ID
        AND ID.TRANS_TYPE = 'TRANS_IN'
        AND (UPPER(ID.BOOK_SERIES_OVER) = 'N' OR ID.BOOK_SERIES_OVER IS NULL)
        AND (ID.STATUS NOT IN ('DELETED'))
        AND ID.AUTHORIZE_STATUS = 'AUTHORIZED'
        AND (IM.STATUS NOT IN ('DELETED'))
        AND IM.AUTHORIZE_STATUS = 'AUTHORIZED'
        AND IM.BRANCH_ID = #BRANCH_CODE:VARCHAR#
        ORDER BY ID.TRANS_DT
    </mapped-statement> 




</sql-map>
