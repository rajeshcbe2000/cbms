<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="GDSChangeofMemberMap">

             <!-- Use ExternalWireTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
             
    <mapped-statement name="insertGDSChangeOfMemberTO" inline-parameters="true">
        INSERT INTO MDS_CHANGE_MEMBER
        (CHITTAL_NO, OLD_MEMBER_NAME, NEW_MEMBER_NAME, NEW_MEMBER_NO, SCHEME_NAME, DIVISION_NO, OLD_MEMBER_NO, INSTALLMENT_NO, 
        TOTAL_AMOUNT, NEW_MEMBER_MUNNAL, CHANGE_EFFECTIVE_DATE, REMARKS, STATUS, STATUS_DT, 
        STATUS_BY, BRANCH_CODE, SUB_NO,GDS_NO) VALUES (
        #oldMemberNo:VARCHAR#, #oldMemberName:VARCHAR#, #newMemberName:VARCHAR#, #newMemberNo:VARCHAR#, #schemeName:VARCHAR#, #divisionNo:NUMERIC#, 
        #chitNo:VARCHAR#, #installmentNo:NUMERIC#, #totalAmount:NUMERIC#, #newMemberMunnal:VARCHAR#,  
        #changeEffectiveDate:DATE#, #remarks:VARCHAR#, #status:VARCHAR#, #statusDt:DATE#, #statusBy:VARCHAR#, #branchCode:VARCHAR#, #subNo:NUMERIC#,#gdsNo:VARCHAR#)
    </mapped-statement>
        
    <dynamic-mapped-statement name="GDSgetChangeOfMemberEditDelete" result-class="java.util.LinkedHashMap">
        SELECT CHITTAL_NO,SUB_NO,SCHEME_NAME,STATUS_BY FROM MDS_CHANGE_MEMBER
        WHERE STATUS!='DELETED' AND AUTHORIZED_STATUS IS NULL AND BRANCH_CODE=#BRANCH_CODE:VARCHAR#  
          <dynamic>
               <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                  UPPER(SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="STATUS_BY">
                    UPPER(STATUS_BY) LIKE UPPER('%$STATUS_BY$%')
                </isNotNull>
            </isParameterPresent>
            </dynamic>
        ORDER BY CHITTAL_NO  
    </dynamic-mapped-statement>
        
    <dynamic-mapped-statement name="GDSgetChangeOfMemberView" result-class="java.util.LinkedHashMap">
        SELECT CHITTAL_NO,SUB_NO,SCHEME_NAME,STATUS_BY FROM MDS_CHANGE_MEMBER
        WHERE STATUS!='DELETED' AND BRANCH_CODE=#BRANCH_CODE:VARCHAR# 
         <dynamic>
               <isPropertyAvailable prepend = "" property="FILTERED_LIST">
               <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="CHITTAL_NO">
                    UPPER(CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SUB_NO">
                    UPPER(SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_NAME">
                  UPPER(SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"      property="STATUS_BY">
                    UPPER(STATUS_BY) LIKE UPPER('%$STATUS_BY$%')
                </isNotNull>
            </isParameterPresent>
            </dynamic>
        ORDER BY CHITTAL_NO  
    </dynamic-mapped-statement>
        
    <mapped-statement name="getGDSChangeOfMemberAuthorize" result-class="java.util.LinkedHashMap">           
        SELECT  distinct mc.gds_no, mc.sub_no, MA.GROUP_NO, mc.status_by
        FROM mds_change_member mc, MDS_APPLICATION ma
        WHERE mc.status != 'DELETED' AND mc.authorized_status IS NULL AND mc.branch_code = #BRANCH_CODE:VARCHAR#
        and MC.CHITTAL_NO = MA.CHITTAL_NO
        ORDER BY mc.gds_no
    </mapped-statement>
        
    <mapped-statement name="authorizeGDSChangeOfMember" result-class="java.util.HashMap">        
        UPDATE mds_change_member
        SET authorized_status = #STATUS:VARCHAR#,
        authorized_by = #AUTHORIZED_BY:VARCHAR#,
        authorized_dt = #AUTHORIZED_DT:TIMESTAMP#
        WHERE status != 'DELETED' AND GDS_NO = #GDS_NO:VARCHAR# AND sub_no = #SUB_NO:NUMBER#
    </mapped-statement>
        
    <mapped-statement name="getGDSSelectChangeOfMemberTO" result-map="getGDSChangeofMemberToResult" >        
        SELECT *
        FROM mds_change_member
        WHERE status != 'DELETED' AND GDS_NO = #GDS_NO:VARCHAR# AND sub_no = #SUB_NO:NUMBER#
    </mapped-statement>
        
    <mapped-statement name="GDSupdateMDSChangeofMemberTo" inline-parameters="true">
        UPDATE MDS_CHANGE_MEMBER SET 
        NEW_MEMBER_NO = #newMemberNo:VARCHAR#,
        NEW_MEMBER_NAME = #newMemberName:VARCHAR#,
        OLD_MEMBER_NAME = #oldMemberName:VARCHAR#,
        DIVISION_NO = #divisionNo:NUMERIC#,
        OLD_MEMBER_NO = #chitNo:NUMERIC#,
        INSTALLMENT_NO = #installmentNo:NUMERIC#,
        TOTAL_AMOUNT = #totalAmount:NUMERIC#,
        NEW_MEMBER_MUNNAL = #newMemberMunnal:VARCHAR#,
        CHANGE_EFFECTIVE_DATE = #changeEffectiveDate:DATE#,
        REMARKS = #remarks:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_DT = #statusDt:DATE#,
        STATUS_BY = #statusBy:VARCHAR#
        WHERE CHITTAL_NO = #oldMemberNo:VARCHAR# AND SUB_NO = #subNo:NUMERIC# AND SCHEME_NAME = #schemeName:VARCHAR# AND STATUS != 'DELETED'
    </mapped-statement>
        
    <mapped-statement name="GDSdeleteMDSChangeofMemberTo" inline-parameters="true">
        UPDATE MDS_CHANGE_MEMBER SET 
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = #statusDt:DATE#
        WHERE CHITTAL_NO = #oldMemberNo:VARCHAR# AND SUB_NO = #subNo:NUMERIC# AND SCHEME_NAME = #schemeName:VARCHAR#
    </mapped-statement>
        
<!--        <mapped-statement name="getProductIdFromMDSProduct" result-map="get-getMDSProductId-result"> 
         SELECT PROD_ID FROM MDS_PRODUCT_GENERAL_DETAILS WHERE STATUS!='DELETED'
 	</mapped-statement>
        
        <result-map name="get-getMDSProductId-result" class="com.see.truetransact.transferobject.common.lookup.LookUpTO">
            <property name="lookUpRefID" column="PROD_ID" />
            <property name="lookUpDesc" column="PROD_ID" />
        </result-map> -->
        
        <!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to MDSChangeofMemberTo object (JavaBean) properties -->
    <result-map name="getGDSChangeofMemberToResult" class="com.see.truetransact.transferobject.gdsapplication.gdschangeofmember.GDSChangeofMemberTO">
        <property name="oldMemberNo" column="CHITTAL_NO"/>
        <property name="newMemberNo" column="NEW_MEMBER_NO"/>
        <property name="oldMemberName" column="OLD_MEMBER_NAME"/>
        <property name="newMemberName" column="NEW_MEMBER_NAME"/>
        <property name="schemeName" column="SCHEME_NAME"/>
        <property name="divisionNo" column="DIVISION_NO"/>
        <property name="subNo" column="SUB_NO"/>
        <property name="chitNo" column="OLD_MEMBER_NO"/>
        <property name="installmentNo" column="INSTALLMENT_NO"/>
        <property name="totalAmount" column="TOTAL_AMOUNT"/>
        <property name="newMemberMunnal" column="NEW_MEMBER_MUNNAL"/>
        <property name="changeEffectiveDate" column="CHANGE_EFFECTIVE_DATE"/>
        <property name="remarks" column="REMARKS"/>
        <property name="status" column="STATUS"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="authorizedStatus" column="AUTHORIZED_STATUS"/>
        <property name="authorizedDt" column="AUTHORIZED_DT"/>
        <property name="authorizedBy" column="AUTHORIZED_BY"/>
        <property name="branchCode" column="BRANCH_CODE"/>
        <property name="gdsNo" column="GDS_NO"/>
    </result-map>
        
    <mapped-statement name="GDSgetTotalInstAmount" result-class="java.util.HashMap">
        SELECT SUM(NO_OF_INST) NO_INST_PAID, SUM(NO_OF_INST*INST_AMT) PAID_AMT,SUM(BONUS_AMT) AS TOTAL_BONUS_AMT FROM MDS_TRANS_DETAILS WHERE 
        CHITTAL_NO = #CHITTAL_NO:VARCHAR# AND SUB_NO=#SUB_NO:NUMBER# AND STATUS!='DELETED' AND AUTHORIZE_STATUS IS NOT NULL AND AUTHORIZE_STATUS='AUTHORIZED'
      <!--   SELECT COUNT(*) NO_INST_PAID, SUM(INST_AMT) PAID_AMT FROM MDS_TRANS_DETAILS WHERE 
            CHITTAL_NO = #CHITTAL_NO# AND STATUS!='DELETED' AND AUTHORIZE_STATUS IS NOT NULL AND AUTHORIZE_STATUS='AUTHORIZED' -->
    </mapped-statement>
        
    <mapped-statement name="GDSgetNoOfInstalmentsPaid" result-class="java.util.HashMap">
        <!-- Changed by Rajesh -->
         <!--SELECT SUM(NO_OF_INST) NO_OF_INST FROM MDS_TRANS_DETAILS WHERE -->
        SELECT SUM(NO_OF_INST) NO_OF_INST, MAX(TRANS_DT) AS TRANS_DT FROM MDS_TRANS_DETAILS WHERE 
        CHITTAL_NO = #CHITTAL_NO:VARCHAR# AND SUB_NO = #SUB_NO:NUMBER# AND STATUS!='DELETED' AND AUTHORIZE_STATUS IS NOT NULL AND AUTHORIZE_STATUS='AUTHORIZED'
    </mapped-statement>  
        
    <!--<mapped-statement name="getGDSChangeOfMemDetails" result-class="java.util.HashMap">
        SELECT NEW_MEMBER_NO, NEW_MEMBER_NAME,OLD_MEMBER_NO,OLD_MEMBER_NAME,INSTALLMENT_NO,CHANGE_EFFECTIVE_DATE,OLD_MEMBER_BONUS_EARNED,TOTAL_AMOUNT
        FROM MDS_CHANGE_MEMBER WHERE STATUS!='DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED' AND GDS_NO = #GDS_NO:VARCHAR# AND SUB_NO = #SUB_NO:NUMBER#
    </mapped-statement> -->
        
    <mapped-statement name="updateGDSMemberDetailsInMDSApplication" result-class="java.util.LinkedHashMap">
        UPDATE  MDS_APPLICATION SET 
        MEMBER_NO = #MEMBERSHIP_NO:VARCHAR#, 
        MEMBER_TYPE = #MEMBERSHIP_CLASS:VARCHAR#,
        MEMBER_NAME = #CUSTOMER:VARCHAR#,
        CUST_ID = #CUST_ID:VARCHAR#
        WHERE STATUS != 'DELETED'  AND GDS_NO = #GDS_NO:VARCHAR# AND SUB_NO = #SUB_NO:NUMBER# 
    </mapped-statement> 
        
    <mapped-statement name="updateGDSMemberDetailsMasterMaintanance" result-class="java.util.LinkedHashMap">
        UPDATE  MDS_MASTER_MAINTENANCE SET 
        MEMBER_NO = #MEMBERSHIP_NO:VARCHAR#, 
        MEMBER_TYPE = #MEMBERSHIP_CLASS:VARCHAR#,
        MEMBER_NAME = #CUSTOMER:VARCHAR#
        WHERE STATUS != 'DELETED'  AND GDS_NO = #GDS_NO:VARCHAR# AND SUB_NO = #SUB_NO:NUMBER# 
    </mapped-statement> 
        
    <mapped-statement name="updateGDSMemAddressDetailsMDSApplication" result-class="java.util.HashMap">
        UPDATE  MDS_APPLICATION SET 
        HOUSE_ST = #street:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        PIN = #pinCode:VARCHAR#
        WHERE STATUS != 'DELETED'  AND GDS_NO = #GDS_NO:VARCHAR# AND SUB_NO = #SUB_NO:NUMBER#  
    </mapped-statement> 
        
    <mapped-statement name="updateGDSMemberDetailsInReceiptEntry" result-class="java.util.HashMap">
        UPDATE  MDS_RECEIPT_ENTRY SET 
        MEMBER_NAME = #NEW_MEMBER_NAME:VARCHAR#,
        MEMBER_CHANGED = 'Y',
        EARLIER_MEMBER_NO = #OLD_MEMBER_NO:VARCHAR#,
        EARLIER_MEMBER_NAME = #OLD_MEMBER_NAME:VARCHAR#,
        CHANGED_DT = #CHANGE_EFFECTIVE_DATE:DATE#,
        CHANGED_INST_NO = #INSTALLMENT_NO:NUMBER#
        WHERE STATUS != 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED'  AND GDS_NO = #GDS_NO:VARCHAR# AND SUB_NO = #SUB_NO:NUMBER# 
    </mapped-statement> 
        
    <mapped-statement name="GDSgetSelectExistingMemberName" result-class="java.util.HashMap">
        SELECT get_cust_name(c.cust_id) AS "CUSTOMER NAME" FROM CUSTOMER WHERE MEMBERSHIP_NO =#MEMBERSHIP_NO:VARCHAR#
    </mapped-statement> 
        
    <mapped-statement name="updateGDSChangedMemberBonusEarned" result-class="java.util.HashMap">
        UPDATE MDS_CHANGE_MEMBER SET OLD_MEMBER_BONUS_EARNED = #TOTAL_BONUS_AMT:NUMBER# WHERE  STATUS!='DELETED' AND GDS_NO = #GDS_NO:VARCHAR# AND SUB_NO = #SUB_NO:NUMBER#
    </mapped-statement>
    
    <!--<mapped-statement name="getGDSSelectBondDetails" result-class="java.util.HashMap">
        SELECT BOND_NO,BOND_DT  FROM MDS_MASTER_MAINTENANCE WHERE STATUS!= 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED' AND GDS_NO=#GDS_NO:VARCHAR# AND SUB_NO = #SUB_NO:NUMBER#
    </mapped-statement>-->

</sql-map>