<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="GDSApplicationMap">
    
    <mapped-statement name = "insertGDSApplicationTO" inline-parameters = "true">
        INSERT INTO MDS_APPLICATION(SCHEME_NAME,DIVISION_NO,CHITTAL_NO,CHIT_START_DT,CHIT_END_DT,INST_AMT,APPLN_NO,APPLN_DT,THALAYAL,MUNNAL,
        MEMBER_NO,MEMBER_TYPE,MEMBER_NAME,HOUSE_ST,AREA,CITY,STATE,PIN,STANDING_INSTN,NOMINEE,REMARKS,STATUS,STATUS_BY,STATUS_DT,
        AUTHORIZE_STATUS,AUTHORIZE_BY,AUTHORIZE_DT,BRANCH_CODE,TRANS_ID,TOTAL_BALANCE,CLEAR_BALANCE,AVAILABLE_BALANCE,SHADOW_CREDIT,
        SHADOW_DEBIT,CHIT_NO,PROD_TYPE,PROD_ID,DR_ACT_NO,CO_CHITTAL,SUB_NO,SALARY_RECOVERY,CUST_ID,GDS_NO
        )VALUES(
        #schemeName:VARHCAR#,#divisionNo:NUMERIC#,#chittalNo:VARCHAR#,#chitStartDt:DATE#,#chitEndDt:DATE#,
        #installmentAmount:NUMERIC#,#applnNo:NUMERIC#,#applnDate:DATE#,#thalayal:VARCHAR#,#munnal:VARCHAR#,#membershipNo:VARCHAR#,
        #membershipType:VARCHAR#,#membershipName:VARCHAR#,#houseStNo:VARCHAR#,#area:VARCHAR#,#city:VARCHAR#,#state:VARCHAR#,
        #pin:NUMERIC#,#standingInstn:VARCHAR#,#nominee:VARCHAR#,#remarks:VARCHAR#,#status:VARCHAR#,#statusBy:VARCHAR#,#statusDt:VARCHAR#,
        #authorizeStatus:VARCHAR#,#authorizeBy:VARCHAR#,#authorizeDt:DATE#,#branchCode:VARCHAR#,#transId:VARCHAR#,
        #totalBalance:NUMERIC#,#clearBalance:NUMERIC#,#availableBalance:NUMERIC#,#shadowCredit:NUMERIC#,#shadowDebit:NUMERIC#,#chitNo#,
        #prodType:VARCHAR#,#prodId:VARCHAR#,#drAccNo:VARCHAR#,#coChittal:VARCHAR#,#subNo:NUMERIC#,#salaryRecovery:VARCHAR#,#cudt_id:VARCHAR#,#gds_no:VARCHAR#)
    </mapped-statement>
    
    <mapped-statement name = "insertGDSApplicationTOForNo" inline-parameters = "true">
        INSERT INTO MDS_APPLICATION(SCHEME_NAME,DIVISION_NO,CHITTAL_NO,CHIT_START_DT,CHIT_END_DT,INST_AMT,APPLN_NO,APPLN_DT,THALAYAL,MUNNAL,
        MEMBER_NO,MEMBER_TYPE,MEMBER_NAME,HOUSE_ST,AREA,CITY,STATE,PIN,STANDING_INSTN,NOMINEE,REMARKS,STATUS,STATUS_BY,STATUS_DT,
        AUTHORIZE_STATUS,AUTHORIZE_BY,AUTHORIZE_DT,BRANCH_CODE,TRANS_ID,TOTAL_BALANCE,CLEAR_BALANCE,AVAILABLE_BALANCE,SHADOW_CREDIT,
        SHADOW_DEBIT,CHIT_NO,PROD_TYPE,PROD_ID,DR_ACT_NO,CO_CHITTAL,SUB_NO,SALARY_RECOVERY,COMMENCEMENT_AUTHORIZE_STATUS,CUST_ID,GDS_NO,GROUP_NO
        )VALUES(
        #schemeName:VARHCAR#,#divisionNo:NUMERIC#,#chittalNo:VARCHAR#,#chitStartDt:DATE#,#chitEndDt:DATE#,
        #installmentAmount:NUMERIC#,#applnNo:NUMERIC#,#applnDate:DATE#,#thalayal:VARCHAR#,#munnal:VARCHAR#,#membershipNo:VARCHAR#,
        #membershipType:VARCHAR#,#membershipName:VARCHAR#,#houseStNo:VARCHAR#,#area:VARCHAR#,#city:VARCHAR#,#state:VARCHAR#,
        #pin:NUMERIC#,#standingInstn:VARCHAR#,#nominee:VARCHAR#,#remarks:VARCHAR#,#status:VARCHAR#,#statusBy:VARCHAR#,#statusDt:VARCHAR#,
        #authorizeStatus:VARCHAR#,#authorizeBy:VARCHAR#,#authorizeDt:DATE#,#branchCode:VARCHAR#,#transId:VARCHAR#,
        #totalBalance:NUMERIC#,#clearBalance:NUMERIC#,#availableBalance:NUMERIC#,#shadowCredit:NUMERIC#,#shadowDebit:NUMERIC#,#chitNo:NUMERIC#,
        #prodType:VARCHAR#,#prodId:VARCHAR#,#drAccNo:VARCHAR#,#coChittal:VARCHAR#,#subNo:NUMERIC#,#salaryRecovery:VARCHAR#,#commencementStatus:VACHAR#,#cudt_id:VACHAR#,#gds_No:VACHAR#,#groupNo:VACHAR#)
    </mapped-statement> 
    
    <mapped-statement name = "getGDSCustomerAddressDetailsinAppln" result-class = "java.util.LinkedHashMap">
        SELECT DISTINCT last_trans_dt, inst_count, total_balance, member_no,
                member_type, house_st, area, city, state, pin
           FROM mds_application
          WHERE gds_no = #GDS_NO:VARCHAR# 
            AND group_no = #GROUP_NO:VARCHAR#
            AND sub_no = #SUB_NO:NUMBER#
            AND commencement_authorize_status = 'AUTHORIZED' 
        </mapped-statement>
    
    <!--<dynamic-mapped-statement name = "getSelectGDSApplicationTO" result-map = "getMDSApplicationTOResult"> -->
        <!--SELECT * FROM MDS_APPLICATION WHERE TRANS_ID = #value#--> <!-- Changed by Rajesh -->
        <!--SELECT * FROM MDS_APPLICATION WHERE GDS_NO = #GDS_NO:VARCHAR#
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="TRANS_ID">
                    TRANS_ID = #TRANS_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        
    </dynamic-mapped-statement>-->
    <mapped-statement name = "updateGDSTransDetailsEachRec" result-class = "java.util.LinkedHashMap">
        INSERT INTO MDS_TRANS_DETAILS(SCHEME_NAME,CHITTAL_NO,NO_OF_INST,PENAL_AMT,BONUS_AMT,DISCOUNT_AMT,MDS_INTEREST,NET_AMT,STATUS,STATUS_DT,
        STATUS_BY,AUTHORIZE_STATUS,AUTHORIZE_BY,AUTHORIZE_DT,TRANS_DT,NET_TRANS_ID,INST_AMT,INST_COUNT,SUB_NO,NOTICE_AMT,ARBITRATION_AMT,NARRATION
        ,SERVICE_TAX_AMT,GDS_NO,FORFEITED_AMT,BANK_ADV_AMTCR)VALUES(
        #SCHEME_NAME:VARCHAR#,#CHITTAL_NO:VARCHAR#,#NO_OF_INST:NUMERIC#,#PENAL_AMT:NUMERIC#,#BONUS_AMT:NUMBER#,
        #DISCOUNT_AMT:NUMBER#,#MDS_INTEREST:NUMERIC#,#NET_AMT:NUMERIC#,#STATUS:VARCHAR#,#STATUS_DT:DATE#,#STATUS_BY:VARCHAR#,
        #AUTHORIZE_STATUS:VARCHAR#,#AUTHORIZE_BY:VARCHAR#,#AUTHORIZE_DT:DATE#,#TRANS_DT:DATE#,#NET_TRANS_ID:VARCHAR#,#INST_AMT:VARCHAR#,
        #INST_COUNT:NUMERIC#,#SUB_NO:NUMERIC#,#NOTICE_AMT:NUMERIC#,#ARBITRATION_AMT:NUMERIC#,#NARRATION:VARCHAR#,#SERVICE_TAX_AMT:NUMERIC#,
        #GDS_NO:NUMERIC#,#FORFEITED_AMT:NUMERIC#,#BANK_ADV_AMTCR:NUMERIC#)
    </mapped-statement>
    
    <mapped-statement name="updateGDSNxtNum" inline-parameters="true">
        UPDATE GROUP_DEPOSIT SET NEXT_GDS_NO = #NEXT_GDS_NO:NUMERIC# WHERE GROUP_NO = #GDS_NO:VARCHAR#
        AND STATUS != 'DELETED' AND AUTHORIZE_STATUS = 'AUTHORIZED'
    </mapped-statement>
    
    <dynamic-mapped-statement name="updateTransIdGDSApplication" inline-parameters="true">
        UPDATE 
        <dynamic>
       <isParameterPresent>
        <isNotNull prepend=""   property="GDS_APPLICATION">
           MDS_APPLICATION
         </isNotNull>
       </isParameterPresent>
        <isParameterPresent>
        <isNotNull prepend=""   property="GDS_PRIZED_MONEY_PAYMENT">
           MDS_MONEY_PAYMENT_DETAILS
         </isNotNull>
       </isParameterPresent>
       </dynamic>
         SET TRANS_ID = #TRANS_ID:VARCHAR# WHERE GDS_NO = #gds_No:VARCHAR#
        AND STATUS != 'DELETED' 
        <dynamic>
        <isParameterPresent>
        <isNotNull prepend=""   property="GDS_PRIZED_MONEY_PAYMENT">
          and (authorized_status  is null OR authorized_status != 'REJECTED')
         </isNotNull>
       </isParameterPresent>  
        </dynamic>      
    </dynamic-mapped-statement>
    
    <dynamic-mapped-statement name = "getGDSSelectRecordForEntered" result-class = "java.util.LinkedHashMap">
       <!-- SELECT SCHEME_NAME,CHITTAL_NO,SUB_NO,CHIT_START_DT,TRANS_ID FROM MDS_APPLICATION WHERE STATUS != 'DELETED' AND AUTHORIZE_STATUS IS NULL -->
        <!-- SELECT SCHEME_NAME,CHITTAL_NO,SUB_NO,CHIT_START_DT,TRANS_ID
FROM MDS_APPLICATION WHERE STATUS != 'DELETED' AND  ( AUTHORIZE_STATUS IS NULL or AUTHORIZE_STATUS!='REJECTED')
and SCHEME_NAME not in(select SCHEME_NAME from mds_closure_details where AUTHORIZED_STATUS='AUTHORIZED') changed by sreekr-->
        <!--SELECT DISTINCT  MA.SUB_NO, MA.CHIT_START_DT, MA.TRANS_ID,MA.MEMBER_NO,MA.MEMBER_NAME, MA.GDS_NO,GD.GROUP_NAME
        FROM MDS_APPLICATION MA,MDS_SCHEME_DETAILS MSD,GROUP_DEPOSIT gd
        WHERE MA.GDS_NO IS NOT NULL
        AND MA.STATUS != 'DELETED'
        and MSD.GROUP_NO = GD.GROUP_NO
        AND (MA.AUTHORIZE_STATUS IS NOT NULL OR MA.AUTHORIZE_STATUS != 'REJECTED')-->
        SELECT DISTINCT ma.gds_no
         ,ma.sub_no, ma.chit_start_dt, ma.trans_id, ma.member_no,
                ma.member_name,gd.group_name
           FROM mds_application ma, mds_scheme_details msd, group_deposit gd
          WHERE ma.gds_no IS NOT NULL
            and MA.GROUP_NO = GD.GROUP_NO
            and MA.SCHEME_NAME = MSD.SCHEME_NAME
            AND ma.status != 'DELETED'
            AND msd.group_no = gd.group_no
            AND (   ma.authorize_status IS NOT NULL
                 OR ma.authorize_status != 'REJECTED'
                )
          <dynamic>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_DESC">
                    UPPER(MSD.MP_MDS_CODE) LIKE UPPER('%$SCHEME_DESC$%')
                </isNotNull>
            </isParameterPresent>
            <!-- <isParameterPresent>
                <isNotNull prepend="AND"   property="SCHEME_NAME">
                    UPPER(MA.SCHEME_NAME) LIKE UPPER('%$SCHEME_NAME$%')
                </isNotNull>
            </isParameterPresent>
               <isParameterPresent>
                <isNotNull prepend="AND"   property="CHITTAL_NO">
                    UPPER(MA.CHITTAL_NO) LIKE UPPER('%$CHITTAL_NO$%')
                </isNotNull>
            </isParameterPresent>-->
            <isParameterPresent>
                <isNotNull prepend="AND"   property="GDS_NO">
                    UPPER(MA.GDS_NO) LIKE UPPER('%$GDS_NO$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="SUB_NO">
                    UPPER(MA.SUB_NO) LIKE UPPER('%$SUB_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="CHIT_START_DT">
                    UPPER(MA.CHIT_START_DT) LIKE UPPER('%$CHIT_START_DT$%')
                </isNotNull>
            </isParameterPresent>
              <isParameterPresent>
                <isNotNull prepend="AND"   property="TRANS_ID">
                    UPPER(MA.TRANS_ID) LIKE UPPER('%$TRANS_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBER_NO">
                    UPPER(MA.MEMBER_NO) LIKE UPPER('%$MEMBER_NO$%')
                </isNotNull>
            </isParameterPresent>
             <isParameterPresent>
                <isNotNull prepend="AND"   property="MEMBER_NAME">
                    UPPER(MA.MEMBER_NAME) LIKE UPPER('%$MEMBER_NAME$%')
                </isNotNull>
            </isParameterPresent>
            </dynamic>
    </dynamic-mapped-statement>
    
    <mapped-statement name="getGDSSelectNonAuthRecordForEnteredWithOutCashier" result-class = "java.util.LinkedHashMap">
        SELECT DISTINCT CUST_ID,BRANCH_CODE, HOUSE_ST, MEMBER_NAME, MDSA.TRANS_ID, MDSA.GDS_NO,INST_AMT AS AMOUNT , AT.TRANS_DT
        FROM MDS_APPLICATION MDSA,ALL_TRANS AT
        WHERE (MDSA.STATUS != 'DELETED' OR MDSA.STATUS IS NULL)
        AND MDSA.STATUS_BY != #USER_ID:VARCHAR#
        AND NVL(AT.BATCH_ID,AT.TRANS_ID) = MDSA.TRANS_ID
        AND AT.TRANS_DT =#TRANS_DT:DATE#
        AND MDSA.BRANCH_CODE =#SELECTED_BRANCH_ID:VARCHAR#
        AND MDSA.GDS_NO IS NOT NULL
        AND MDSA.AUTHORIZE_STATUS IS NULL
        AND cast(#HIERARCHY_ID# as numeric) &gt;=
        (SELECT DISTINCT DECODE (NVL (SAME_HIERARCHY_ALLOWED, 'N'),
        'Y', HIERARCHY_ID,
        HIERARCHY_ID + 1
        )
        FROM USER_MASTER UM, ROLE_MASTER RM
        WHERE RM.ROLE_ID = UM.USER_ROLE
        AND UM.USER_ID = MDSA.STATUS_BY)

        
        <!--SELECT DISTINCT MDSA.TRANS_ID, MDSA.GDS_NO,
        INST_AMT AS AMOUNT
        FROM MDS_APPLICATION MDSA
        WHERE (MDSA.STATUS != 'DELETED' OR MDSA.STATUS IS NULL)
        AND MDSA.STATUS_BY != #USER_ID:VARCHAR#
        AND MDSA.GDS_NO IS NOT NULL
        AND MDSA.GDS_NO IS NOT NULL
        AND TRANS_DT = #TRANS_DT:DATE#
        AND MDSA.BRANCH_CODE = #SELECTED_BRANCH_ID:VARCHAR#-->
            
            
    </mapped-statement>
    
    <mapped-statement name = "getGDSSelectApplnAmt" result-class = "java.util.HashMap">
        SELECT INST_AMT FROM MDS_APPLICATION WHERE TRANS_ID = #TRANS_ID:VARCHAR# AND GDS_NO IS NOT NULL
    </mapped-statement>
    
    <mapped-statement name="getGDSSelectGroupMDSDepositTO" result-class = "java.util.LinkedHashMap" >
        select distinct m.SCHEME_NAME AS SCHEME_NAME, m.PROD_ID, m.INSTALLMENT_AMOUNT, m.NO_OF_DIVISIONS, m.SCHEME_END_DT,
        m.SCHEME_START_DT, m.CHITTAL_NO_PATTERN, g.GROUP_NAME, g.GROUP_NO, g.SCHEME_COUNT
        FROM mds_scheme_details m join group_deposit g on M.GROUP_NO=G.GROUP_NO where M.GROUP_NO= #GROUP_NO:VARCHAR# and g.AUTHORIZE_STATUS='AUTHORIZED'
        <!--SELECT GROUP_NAME, SCHEME_COUNT, PROD_TYPE  FROM GROUP_DEPOSIT WHERE GROUP_TYPE='GDS' and AUTHORIZE_STATUS='AUTHORIZED'-->
    </mapped-statement>
   
    <mapped-statement name = "getGDSChittalNOUISide"  result-class = "java.util.HashMap">
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,
        CO_NO_OF_INSTALLMENTS,TOTAL_AMOUNT_SCHEME FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR# 
        AND NEXT_CHITTAL_NO IS NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
        UNION
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,
        CO_NO_OF_INSTALLMENTS,TOTAL_AMOUNT_SCHEME FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #SCHEME_NAME:VARCHAR#
        AND NEXT_CHITTAL_NO IS NOT NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement>
    
    <mapped-statement name = "getGDSChittalNO" result-class = "java.util.HashMap">
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,
        NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,INSTALLMENT_AMOUNT
        FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #value:VARCHAR# 
        AND NEXT_CHITTAL_NO IS NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
        UNION
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,
        NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,INSTALLMENT_AMOUNT
        FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #value:VARCHAR#
        AND NEXT_CHITTAL_NO IS NOT NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement>
    
    <mapped-statement name = "getGDSNO" result-class = "java.util.HashMap">
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,
        NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,INSTALLMENT_AMOUNT
        FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #value:VARCHAR# 
        AND NEXT_CHITTAL_NO IS NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
        UNION
        SELECT CHITTAL_NO_PATTERN AS PREFIX,NVL(SUFFIX_NO,0) AS SUFFIX, NEXT_CHITTAL_NO AS LAST_VALUE,
        NO_OF_DIVISIONS,NO_OF_MEMBER_PER_DIVISION,INSTALLMENT_AMOUNT
        FROM MDS_SCHEME_DETAILS WHERE SCHEME_NAME = #value:VARCHAR#
        AND NEXT_CHITTAL_NO IS NOT NULL AND STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED'
    </mapped-statement>
    
    <mapped-statement name = "getGDSSumOfInstAmtForChittal" result-class = "java.util.HashMap">
        SELECT NVL(SUM(INST_AMT),0) AS TOTAL_INST_AMT FROM MDS_APPLICATION MA WHERE 
        STATUS!='DELETED' AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')   AND MA.SCHEME_NAME =#SCHEME_NAME:VARCHAR#
    </mapped-statement>
    
    <mapped-statement name = "getSelectGroupNameTO" result-class = "java.util.HashMap">
        SELECT group_name, group_no FROM group_deposit
 WHERE group_no = (SELECT group_no FROM mds_scheme_details
                    WHERE scheme_name = (SELECT MIN (scheme_name) FROM mds_application
                                          WHERE gds_no =#GDS_NO:VARCHAR#))
        
       
    </mapped-statement>
    
    <mapped-statement name = "getStatusGDSApp" result-class = "java.util.HashMap">
        select Distinct STATUS,CUST_ID from mds_application where GDS_NO=#GDS_NO:VARCHAR#
    </mapped-statement>
    <!--<mapped-statement name = "getGDSAppGroupNo" result-class = "java.util.HashMap">
        select Distinct GROUP_NO from mds_application where SCHEME_NAME=#SCHEME_NAME:VARCHAR#
    </mapped-statement>-->
    <!--<mapped-statement name="updateGSDLastChittalNo" inline-parameters="true">
        UPDATE GROUP_DEPOSIT SET NEXT_GDS_NO=#NEXT_GDS_NO:VARCHAR# WHERE GROUP_NO=#GROUP_NO:VARCHAR#
    </mapped-statement>-->
    
    <mapped-statement name = "getGDSSchemeDetailsList" result-class = "java.util.LinkedHashMap">
        SELECT * FROM MDS_SCHEME_DETAILS MDS, MDS_PRODUCT_GENERAL_DETAILS MDSP WHERE 
        SCHEME_NAME = #SCHEME_NAME:VARCHAR# AND MDS.STATUS != 'DELETED' AND AUTHORIZED_STATUS = 'AUTHORIZED' AND MDS.PROD_ID=MDSP.PROD_ID     
    </mapped-statement>
    <mapped-statement name = "getGDSMaxLimitList" result-class = "java.util.LinkedHashMap">
         <!--SELECT COUNT(scheme_name)
FROM MDS_APPLICATION
WHERE INSTR( GDS_NO, #subStrToCompare:VARCHAR# )>0 -->
        
        SELECT COUNT(scheme_name)
FROM MDS_APPLICATION
WHERE GDS_NO LIKE #subStrToCompare:VARCHAR#||'%'
and AUTHORIZE_STATUS NOT IN ('REJECTED')
    </mapped-statement>
    <mapped-statement name = "updateGDSAvailBalance" result-class = "java.util.HashMap">
        UPDATE MDS_APPLICATION SET AVAILABLE_BALANCE = NVL(AVAILABLE_BALANCE,0) + #availableBalance:NUMERIC#
        WHERE GDS_NO = #GDS_NO:VARCHAR# and BRANCH_CODE = #BRANCH_CODE:VARCHAR# AND TRANS_ID = #TRANS_ID:VARCHAR#
    </mapped-statement>
    
    <dynamic-mapped-statement name = "updateGDSAuthorizeStatusAppl" result-class="java.util.HashMap">
        UPDATE MDS_APPLICATION SET AUTHORIZE_STATUS = #AUTHORIZE_STATUS:VARCHAR#,AUTHORIZE_BY = #AUTHORIZE_BY:VARCHAR#,
        AUTHORIZE_DT = #AUTHORIZE_DT:DATE# 
        WHERE GDS_NO = #GDS_NO:VARCHAR#
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="transId">
                    TRANS_ID = #TRANS_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="CUST_ID">
                    CUST_ID=#CUST_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        
        
    </dynamic-mapped-statement>
    
    
    <mapped-statement name = "getGDSSelectSchemeAcctHead" result-class = "java.util.LinkedHashMap">
        SELECT MAH.*,MSD.*,MPOD.*,MPGD.* FROM MDS_SCHEME_DETAILS MSD,MDS_PRODUCT_GENERAL_DETAILS MPGD,MDS_ACCT_HEAD MAH,MDS_PRODUCT_OTHER_DETAILS MPOD WHERE 
        MSD.PROD_ID = MPGD.PROD_ID AND MSD.STATUS!='DELETED' AND MSD.AUTHORIZED_STATUS = 'AUTHORIZED' AND 
        MAH.SCHEME_NAME = MSD.SCHEME_NAME AND MSD.PROD_ID = MPOD.PROD_ID AND MSD.SCHEME_NAME = #SCHEME_NAME:VARCHAR#
        and MSD.GROUP_NO = #GROUP_NO:VARCHAR#
    </mapped-statement>
    <dynamic-mapped-statement name="updateGDSApplicationTO" inline-parameters="true">
        UPDATE MDS_APPLICATION SET DIVISION_NO = #divisionNo:NUMERIC#,
        SUB_NO = #subNo:VARCHAR#,
        CHIT_START_DT = #chitStartDt:DATE#,
        CHIT_END_DT = #chitEndDt:DATE#,
        INST_AMT = #installmentAmount:NUMERIC#,
        APPLN_NO = #applnNo:NUMERIC#,
        APPLN_DT = #applnDate:DATE#,
        THALAYAL = #thalayal:VARCHAR#,
        CO_CHITTAL = #coChittal:VARCHAR#,
        SALARY_RECOVERY = #salaryRecovery:VARCHAR#,
        MUNNAL = #munnal:VARCHAR#,
        MEMBER_NO = #membershipNo:VARCHAR#,
        MEMBER_TYPE = #membershipType:VARCHAR#,
        MEMBER_NAME = #membershipName:VARCHAR#,
        HOUSE_ST = #houseStNo:VARCHAR#,
        AREA = #area:VARCHAR#,
        CITY = #city:VARCHAR#,
        STATE = #state:VARCHAR#,
        PIN = #pin:NUMERIC#,
        STANDING_INSTN = #standingInstn:VARCHAR#,
        NOMINEE = #nominee:VARCHAR#,
        PROD_TYPE = #prodType:VARCHAR#,
        PROD_ID = #prodId:VARCHAR#,
        DR_ACT_NO = #drAccNo:VARCHAR#,
        REMARKS = #remarks:VARCHAR#,
        STATUS = #status:VARCHAR#,
        STATUS_BY = #statusBy:VARCHAR#,
        CUST_ID=#cudt_id:VARCHAR#,
        STATUS_DT = #statusDt:DATE# WHERE 
        GDS_NO = #gds_No:VARCHAR# 
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="transId">
                    TRANS_ID = #transId:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        
    </dynamic-mapped-statement>
    
    <dynamic-mapped-statement name = "getSelectGDSApplicationTO" result-map = "getGDSApplicationTOResult">
        <!--SELECT * FROM MDS_APPLICATION WHERE TRANS_ID = #value#--> <!-- Changed by Rajesh -->
        SELECT DISTINCT GDS_NO,DIVISION_NO,CHIT_START_DT,CHIT_END_DT,INST_AMT,APPLN_NO,APPLN_DT,
        THALAYAL,MUNNAL,MEMBER_NO,MEMBER_TYPE,MEMBER_NAME,HOUSE_ST,
        AREA,CITY,STATE,PIN,STANDING_INSTN,NOMINEE,REMARKS,STATUS,
        STATUS_BY,STATUS_DT,AUTHORIZE_STATUS,AUTHORIZE_BY,AUTHORIZE_DT,BRANCH_CODE,
        TRANS_ID,COMMENCEMENT_STATUS,COMMENCEMENT_DATE,TOTAL_BALANCE,CLEAR_BALANCE,
        AVAILABLE_BALANCE,SHADOW_CREDIT,SHADOW_DEBIT,COMMENCEMENT_AUTHORIZE_STATUS,
        LAST_TRANS_DT,DELETED_USED,INST_COUNT,
        LOAN_GIVEN,LOAN_STATUS,LOAN_ACT_NUM,PROD_TYPE,PROD_ID,DR_ACT_NO,CO_CHITTAL,
        SUB_NO,SALARY_RECOVERY,CUST_ID FROM MDS_APPLICATION  where GDS_NO IS NOT NULL AND GDS_NO= #GDS_NO:VARCHAR#
        
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="TRANS_ID">
                    TRANS_ID = #TRANS_ID:VARCHAR#
                </isNotNull>
            </isParameterPresent>
        </dynamic>
        
    </dynamic-mapped-statement>
    
     <dynamic-mapped-statement name = "getAllApplcationDetailsForGDS" result-map = "getALLGDSApplicationTOResult">
         select * from MDS_APPLICATION mds 
         where MDS.GDS_NO = #GDS_NO:VARCHAR#
     </dynamic-mapped-statement>
      
    <mapped-statement name="getGDSSelIsTran" result-class = "java.util.LinkedHashMap">
      <!--Select nvl(TRANS_FIRST_INSTALLMENT,'Y') as TRANS_FIRST_INSTALLMENT from MDS_PRODUCT_GENERAL_DETAILS,MDS_SCHEME_DETAILS where SCHEME_NAME=#SCHEME_NAME#-->
        SELECT DISTINCT NVL (trans_first_installment, 'Y') AS trans_first_installment
  FROM mds_product_general_details JOIN mds_scheme_details
       ON mds_product_general_details.prod_id = mds_scheme_details.prod_id
 WHERE mds_scheme_details.group_no =#GROUP_NO:VARCHAR#
    </mapped-statement>
    
    <dynamic-mapped-statement name = "getGDSSelectEachSchemeNotEnteredDetails" result-class = "java.util.LinkedHashMap">
        <!-- SELECT MSD.SCHEME_NAME,PROD_ID,SCHEME_START_DT,SCHEME_END_DT,NO_OF_DIVISIONS,INSTALLMENT_AMOUNT,TOTAL_NO_OF_MEMBERS,
        MULTIPLE_MEMBER,NO_OF_CHITTALS FROM MDS_SCHEME_DETAILS MSD
        WHERE TOTAL_NO_OF_MEMBERS > (SELECT COUNT(*) FROM MDS_APPLICATION MA WHERE MSD.SCHEME_NAME=MA.SCHEME_NAME AND STATUS!='DELETED' AND
        (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED')) -->
        <!-- sreekrish
        SELECT MSD.SCHEME_NAME,PROD_ID,SCHEME_START_DT,SCHEME_END_DT,NO_OF_DIVISIONS,INSTALLMENT_AMOUNT,TOTAL_NO_OF_MEMBERS, MULTIPLE_MEMBER,NO_OF_CHITTALS 
        FROM MDS_SCHEME_DETAILS MSD WHERE TOTAL_AMOUNT_SCHEME > (SELECT NVL(SUM(INST_AMT),0) FROM MDS_APPLICATION MA WHERE MSD.SCHEME_NAME=MA.SCHEME_NAME 
        AND STATUS!='DELETED' AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED'))
        <dynamic>
                <isParameterPresent>
                    <isNotNull prepend="AND" property="SCHEME_NAME">
                    MSD.SCHEME_NAME= #SCHEME_NAME#
                    </isNotNull>
                </isParameterPresent>
         </dynamic> 
         ORDER BY SCHEME_NAME -->
        SELECT DISTINCT msd.mp_mds_code AS scheme_desc, prod_id, scheme_start_dt,
        gds.deposit_amt, gds.next_gds_no, scheme_end_dt,
        no_of_divisions, total_no_of_members, multiple_member,
        no_of_chittals, gds.branch_id, gds.group_no, gds.group_name,
        gds.scheme_count
        FROM mds_scheme_details msd, group_deposit gds
        WHERE msd.group_no IS NOT NULL
        AND group_type = 'GDS' 
        and MSD.GROUP_NO = GDS.GROUP_NO  
        and get_gds_application_completed(GDS.GROUP_NO,GDS.BRANCH_ID) = 'N'
         
          <!--  SELECT DISTINCT msd.mp_mds_code AS scheme_desc,prod_id, scheme_start_dt, gds.DEPOSIT_AMT,GDS.NEXT_GDS_NO,
                scheme_end_dt, no_of_divisions,
                total_no_of_members, multiple_member, no_of_chittals, GDS.BRANCH_ID,
                gds.group_no, gds.group_name, gds.scheme_count
           FROM mds_scheme_details msd, group_deposit gds
          WHERE msd.group_no IS NOT NULL
            AND group_type = 'GDS'
            AND scheme_name NOT IN (SELECT scheme_name
                                      FROM mds_closure_details
                                     WHERE authorized_status = 'AUTHORIZED')
            AND total_amount_scheme >
                   (SELECT NVL (SUM (inst_amt), 0)
                      FROM mds_application ma
                     WHERE msd.scheme_name = ma.scheme_name
                       AND status != 'DELETED'
                       AND (   authorize_status IS NULL
                            OR authorize_status = 'AUTHORIZED'
                           ))-->
       
        <!--SELECT MSD.MP_MDS_CODE as SCHEME_DESC,MSD.SCHEME_NAME,PROD_ID,SCHEME_START_DT,SCHEME_END_DT,NO_OF_DIVISIONS,INSTALLMENT_AMOUNT,TOTAL_NO_OF_MEMBERS, MULTIPLE_MEMBER,NO_OF_CHITTALS,GDS.GROUP_NO, GDS.GROUP_NAME, GDS.SCHEME_COUNT 
        FROM MDS_SCHEME_DETAILS MSD, GROUP_DEPOSIT GDS WHERE MSD.GROUP_NO IS NOT NULL AND GROUP_TYPE='GDS' AND SCHEME_NAME NOT IN(SELECT SCHEME_NAME FROM MDS_CLOSURE_DETAILS WHERE AUTHORIZED_STATUS='AUTHORIZED') 
        AND TOTAL_AMOUNT_SCHEME > (SELECT NVL(SUM(INST_AMT),0) FROM MDS_APPLICATION MA WHERE MSD.SCHEME_NAME=MA.SCHEME_NAME 
        AND STATUS!='DELETED' AND (AUTHORIZE_STATUS IS NULL OR AUTHORIZE_STATUS='AUTHORIZED'))-->
        <dynamic>
            <isParameterPresent>
                <isNotNull prepend="AND" property="GROUP_NAME">
                    GDS.GROUP_NAME= #GROUP_NAME:VARCHAR#
                </isNotNull>
            </isParameterPresent>
            <isPropertyAvailable prepend = "" property="FILTERED_LIST">
                <isEqual prepend="AND" property="FILTERED_LIST" compareValue="FILTERED_LIST_oracle.jdbc.driver.OracleDriver" >
                    ROWNUM &lt;= 100
                </isEqual>
            </isPropertyAvailable>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_DESC">
                    UPPER(MSD.MP_MDS_CODE) LIKE UPPER('%$SCHEME_DESC$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_DESC">
                    UPPER(MSD.MP_MDS_CODE) LIKE UPPER('%$SCHEME_DESC$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="PROD_ID">
                    UPPER(PROD_ID) LIKE UPPER('%$PROD_ID$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_START_DT">
                    UPPER(SCHEME_START_DT) LIKE UPPER('%$SCHEME_START_DT$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="SCHEME_END_DT">
                    UPPER(SCHEME_END_DT) LIKE UPPER('%$SCHEME_END_DT$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="NO_OF_DIVISIONS">
                    UPPER(NO_OF_DIVISIONS) LIKE UPPER('%$NO_OF_DIVISIONS$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="DEPOSIT_AMT">
                    UPPER(DEPOSIT_AMT) LIKE UPPER('%$DEPOSIT_AMT$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="TOTAL_NO_OF_MEMBERS">
                    UPPER(TOTAL_NO_OF_MEMBERS) LIKE UPPER('%$TOTAL_NO_OF_MEMBERS$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="MULTIPLE_MEMBER">
                    UPPER(MULTIPLE_MEMBER) LIKE UPPER('%$MULTIPLE_MEMBER$%')
                </isNotNull>
            </isParameterPresent>
            <isParameterPresent>
                <isNotNull prepend="AND"      property="NO_OF_CHITTALS">
                    UPPER(NO_OF_CHITTALS) LIKE UPPER('%$NO_OF_CHITTALS$%')
                </isNotNull>
            </isParameterPresent>
        </dynamic> 
   
    </dynamic-mapped-statement>
    
    <result-map name="getGDSApplicationTOResult" class="com.see.truetransact.transferobject.gdsapplication.GDSApplicationTO">
        
        <property name="divisionNo" column="DIVISION_NO"/>
        <property name="chitStartDt" column="CHIT_START_DT"/>
        <property name="chitEndDt" column="CHIT_END_DT"/>
        <property name="installmentAmount" column="INST_AMT"/>
        <property name="applnNo" column="APPLN_NO"/>
        <property name="applnDate" column="APPLN_DT"/>
        <property name="thalayal" column="THALAYAL"/>
        <property name="coChittal" column="CO_CHITTAL"/>
        <property name="salaryRecovery" column="SALARY_RECOVERY"/>
        <property name="munnal" column="MUNNAL"/>
        <property name="membershipNo" column="MEMBER_NO"/>
        <property name="membershipType" column="MEMBER_TYPE"/>
        <property name="membershipName" column="MEMBER_NAME"/>
        <property name="houseStNo" column="HOUSE_ST"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="pin" column="PIN"/>
        <property name="standingInstn" column="STANDING_INSTN"/>
        <property name="nominee" column="NOMINEE"/>
        <property name="remarks" column="REMARKS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="authorizeBy" column="AUTHORIZE_BY"/>
        <property name="authorizeDt" column="AUTHORIZE_DT"/>
        <property name="branchCode" column="BRANCH_CODE"/>
        <property name="transId" column="TRANS_ID"/>
        <property name="commencementStatus" column="COMMENCEMENT_STATUS"/>
        <property name="commencementDate" column="COMMENCEMENT_DATE"/>
        <property name="lastTransDt" column="LAST_TRANS_DT"/>
        <property name="totalBalance" column="TOTAL_BALANCE"/>
        <property name="clearBalance" column="CLEAR_BALANCE"/>
        <property name="availableBalance" column="AVAILABLE_BALANCE"/>
        <property name="shadowCredit" column="SHADOW_CREDIT"/>
        <property name="shadowDebit" column="SHADOW_DEBIT"/>       
        <property name="commencementAuthStatus" column="COMMENCEMENT_AUTHORIZE_STATUS"/>       
        <property name="lastTransDt" column="LAST_TRANS_DT"/>       
        <property name="prodType" column="PROD_TYPE"/>    
        <property name="prodId" column="PROD_ID"/>    
        <property name="drAccNo" column="DR_ACT_NO"/>    
        <property name="deletedUsed" column="DELETED_USED"/>       
        <property name="instCount" column="INST_COUNT"/> 
        <property name="cudt_id" column="CUST_ID"/> 
        <property name="gds_No" column="GDS_NO"/>
        <property name="subNo" column="SUB_NO"/>
    </result-map>
    
    <result-map name="getALLGDSApplicationTOResult" class="com.see.truetransact.transferobject.gdsapplication.GDSApplicationTO">
        
        <property name="divisionNo" column="DIVISION_NO"/>
        <property name="chittalNo" column="CHITTAL_NO"/>
        <property name="schemeName" column="SCHEME_NAME"/>
        <property name="chitStartDt" column="CHIT_START_DT"/>
        <property name="chitEndDt" column="CHIT_END_DT"/>
        <property name="installmentAmount" column="INST_AMT"/>
        <property name="applnNo" column="APPLN_NO"/>
        <property name="applnDate" column="APPLN_DT"/>
        <property name="thalayal" column="THALAYAL"/>
        <property name="coChittal" column="CO_CHITTAL"/>
        <property name="salaryRecovery" column="SALARY_RECOVERY"/>
        <property name="munnal" column="MUNNAL"/>
        <property name="membershipNo" column="MEMBER_NO"/>
        <property name="membershipType" column="MEMBER_TYPE"/>
        <property name="membershipName" column="MEMBER_NAME"/>
        <property name="houseStNo" column="HOUSE_ST"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="pin" column="PIN"/>
        <property name="standingInstn" column="STANDING_INSTN"/>
        <property name="nominee" column="NOMINEE"/>
        <property name="remarks" column="REMARKS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="authorizeBy" column="AUTHORIZE_BY"/>
        <property name="authorizeDt" column="AUTHORIZE_DT"/>
        <property name="branchCode" column="BRANCH_CODE"/>
        <property name="transId" column="TRANS_ID"/>
        <property name="commencementStatus" column="COMMENCEMENT_STATUS"/>
        <property name="commencementDate" column="COMMENCEMENT_DATE"/>
        <property name="lastTransDt" column="LAST_TRANS_DT"/>
        <property name="totalBalance" column="TOTAL_BALANCE"/>
        <property name="clearBalance" column="CLEAR_BALANCE"/>
        <property name="availableBalance" column="AVAILABLE_BALANCE"/>
        <property name="shadowCredit" column="SHADOW_CREDIT"/>
        <property name="shadowDebit" column="SHADOW_DEBIT"/>       
        <property name="commencementAuthStatus" column="COMMENCEMENT_AUTHORIZE_STATUS"/>       
        <property name="lastTransDt" column="LAST_TRANS_DT"/>       
        <property name="prodType" column="PROD_TYPE"/>    
        <property name="prodId" column="PROD_ID"/>    
        <property name="drAccNo" column="DR_ACT_NO"/>    
        <property name="deletedUsed" column="DELETED_USED"/>       
        <property name="instCount" column="INST_COUNT"/> 
        <property name="cudt_id" column="CUST_ID"/> 
        <property name="gds_No" column="GDS_NO"/>
        <property name="subNo" column="SUB_NO"/>
    </result-map>
    
   <!-- <result-map name="getGroupMDSDepositTOResult" class="com.see.truetransact.transferobject.gdsapplication.GDSApplicationTOgetSelectMDSApplicationTO">
        <property name="groupName" column="GROUP_NAME"/>
        <property name="schemeName" column="SCHEME_NAME"/>
        <property name="schemeCount" column="SCHEME_COUNT"/>
        <property name="installmentAmount" column="INSTALLMENT_AMOUNT"/>
        <property name="schemeEndDt" column="SCHEME_END_DT"/>
        <property name="noOfDivisions" column="NO_OF_DIVISIONS"/>
        <property name="schemeStartDt" column="SCHEME_START_DT"/>
        <property name="chitNo" column="CHITTAL_NO_PATTERN"/>
        <property name="groupNo" column="GROUP_NO"/>
        <property name="prodId" column="PROD_ID"/>    
        <property name="prodType" column="PROD_TYPE"/> 
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
        <property name="divisionNo" column="DIVISION_NO"/>
        <property name="chittalNo" column="CHITTAL_NO"/>
        <property name="subNo" column="SUB_NO"/>
        <property name="chitStartDt" column="CHIT_START_DT"/>
        <property name="chitEndDt" column="CHIT_END_DT"/>
        <property name="instAmt" column="INST_AMT"/>
        <property name="applnNo" column="APPLN_NO"/>
        <property name="applnDate" column="APPLN_DT"/>
        <property name="thalayal" column="THALAYAL"/>
        <property name="coChittal" column="CO_CHITTAL"/>
        <property name="salaryRecovery" column="SALARY_RECOVERY"/>
        <property name="munnal" column="MUNNAL"/>
        <property name="membershipNo" column="MEMBER_NO"/>
        <property name="membershipType" column="MEMBER_TYPE"/>
        <property name="membershipName" column="MEMBER_NAME"/>
        <property name="houseStNo" column="HOUSE_ST"/>
        <property name="area" column="AREA"/>
        <property name="city" column="CITY"/>
        <property name="state" column="STATE"/>
        <property name="pin" column="PIN"/>
        <property name="standingInstn" column="STANDING_INSTN"/>
        <property name="nominee" column="NOMINEE"/>
        <property name="remarks" column="REMARKS"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        
        <property name="authorizeBy" column="AUTHORIZE_BY"/>
        <property name="authorizeDt" column="AUTHORIZE_DT"/>
        <property name="branchCode" column="BRANCH_CODE"/>
        <property name="transId" column="TRANS_ID"/>
        <property name="commencementStatus" column="COMMENCEMENT_STATUS"/>
        <property name="commencementDate" column="COMMENCEMENT_DATE"/>
        <property name="lastTransDt" column="LAST_TRANS_DT"/>
        <property name="totalBalance" column="TOTAL_BALANCE"/>
        <property name="clearBalance" column="CLEAR_BALANCE"/>
        <property name="availableBalance" column="AVAILABLE_BALANCE"/>
        <property name="shadowCredit" column="SHADOW_CREDIT"/>
        <property name="shadowDebit" column="SHADOW_DEBIT"/>       
        <property name="commencementAuthStatus" column="COMMENCEMENT_AUTHORIZE_STATUS"/>       
        <property name="lastTransDt" column="LAST_TRANS_DT"/>       
        <property name="commencementTransId" column="COMMENCEMENT_TRANS_ID"/>       
        <property name="chitNo" column="CHIT_NO"/>       
        
        <property name="drAccNo" column="DR_ACT_NO"/>    
        <property name="deletedUsed" column="DELETED_USED"/>       
        <property name="instCount" column="INST_COUNT"/> 
        <property name="cudt_id" column="CUST_ID"/>  
    </result-map>        -->
    
     <mapped-statement name="insertGDSMasterMaintenanceTO" inline-parameters="true">
        INSERT INTO MDS_MASTER_MAINTENANCE
        (SCHEME_NAME, CHITTAL_NO, DIVISION_NO, CHIT_START_DT, MEMBER_NO, MEMBER_NAME, MEMBER_TYPE, NOMINEE_NAME, PAY_DT, 
        PRIZED_AMOUNT, RESOLUTION_NO, RESOLUTION_DT, BOND_NO, BOND_DT, LAST_INSTALLMENT_NO, LAST_INSTALLMENT_DT, TOTAL_AMOUNT, 
        INSTALLMENT_DUE, INSTAL_OVERDUE_AMT, INSTAL_REMARKS, SALARY_CERFICATE_NO, EMP_NAME, EMP_ADDRESS, CITY, PIN, DESIGNATION, 
        CONTACT_NO, RETIREMENT_DT, EMP_MEMBER_NO, TOTAL_SALARY, NETWORTH, SALARY_REMARKS, SECURITY_TYPE, SECURITY_VALUE, 
        SECURITY_REMARKS, JEWELLARY_DETAILS, GROSS_WEIGHT, NET_WEIGHT, GOLD_VALUE, GOLD_REMARKS, STANDING_INSTN, 
        NOMINEE, STATUS, BRANCH_CODE, STATUS_DT, STATUS_BY ,AUTHORIZED_STATUS ,AUTHORIZED_DT ,AUTHORIZED_BY,SUB_NO,BONDSET,APPLICATION_NO,APPLICATION_DATE,SALARY_RECOVERY,DEFAULTER,APPLICATIONSET,ONLY_APPLICATION,GDS_NO
        ) VALUES (
        #schemeName:VARCHAR#, #chittalNo:VARCHAR#, #divisionNo:NUMERIC#, #chitStartDt:DATE#, #memberNo:VARCHAR#, 
        #memberName:VARCHAR#, #memberType:VARCHAR#, #nomineeName:VARCHAR#, #payDt:DATE#, #prizedAmount:NUMERIC#, 
        #resolutionNo:VARCHAR#, #resolutionDt:DATE#, #bondNo:VARCHAR#, #bondDt:DATE#, #lastInstallmentNo:VARCHAR#, 
        #lastInstallmentDt:DATE#, #totalAmount:NUMERIC#, #installmentDue:NUMERIC#, #instalOverdueAmt:NUMERIC#, 
        #instalRemarks:VARCHAR#, #salaryCerficateNo:VARCHAR#, #empName:VARCHAR#, #empAddress:VARCHAR#, #city:VARCHAR#, 
        #pin:NUMERIC#, #designation:VARCHAR#, #contactNo:NUMERIC#, #retirementDt:DATE#, #empMemberNo:VARCHAR#, 
        #totalSalary:NUMERIC#, #networth:VARCHAR#, #salaryRemarks:VARCHAR#, #securityType:VARCHAR#, #securityValue:VARCHAR#, 
        #securityRemarks:VARCHAR#, #jewellaryDetails:VARCHAR#, #grossWeight:VARCHAR#, #netWeight:VARCHAR#, #goldValue:VARCHAR#, 
        #goldRemarks:VARCHAR#, #standingIns:VARCHAR#, #nominee:VARCHAR#, #status:VARCHAR#, #branchCode:VARCHAR#, #statusDt:DATE#, 
        #statusBy:VARCHAR# ,#authorizedStatus:VARCHAR# ,#authorizedDt:DATE#, #authorizedBy:VARCHAR#, #subNo:NUMERIC#,#bondSet:VARCHAR#,#applNo:VARCHAR#,#applDate:DATE#,#salaryRecovery:VARCHAR#,#defaulter:VARCHAR#,
        #applicationSet:VARCHAR#,#onlyApplication:VARCHAR#,#memberGDSNo:VARCHAR#)
    </mapped-statement>
    
    
     <dynamic-mapped-statement name = "getSelectGDSChitNoNotinMasterDetails" result-class = "java.util.LinkedHashMap">      
       SELECT DISTINCT GDS_NO, sub_no, chit_start_dt, trans_id, division_no,
       remarks, member_name, thalayal
       FROM mds_application
       WHERE status != 'DELETED'
       AND authorize_status = 'AUTHORIZED'
       AND group_no = #GROUP_NO:VARCHAR#
     </dynamic-mapped-statement>
     
     
     <dynamic-mapped-statement name = "getSelectGDSSchemeForChittal" result-class = "java.util.LinkedHashMap">      
        select MA.SCHEME_NAME from MDS_APPLICATION ma
        where MA.CHITTAL_NO = #CHITTAL_NO:VARCHAR#
     </dynamic-mapped-statement>
     
     
      <dynamic-mapped-statement name = "getGDSSelectRecordForEnquiryDetails" result-class = "java.util.LinkedHashMap">
        <!-- SELECT   ma.scheme_name, MA.GDS_NO, ma.sub_no, ma.member_no, ma.member_name, ma.trans_id,
        ma.division_no
        FROM mds_application ma
        WHERE ma.status != 'DELETED'
        AND ma.authorize_status = 'AUTHORIZED'
        AND MA.GROUP_NO = #GROUP_NO:VARCHAR#        
        ORDER BY MA.GDS_NO -->
        SELECT distinct ma.gds_no, ma.sub_no, ma.member_no, ma.member_name,
        ma.trans_id, ma.division_no
        FROM mds_application ma
        WHERE ma.status != 'DELETED'
        AND ma.authorize_status = 'AUTHORIZED'
        AND ma.group_no = #GROUP_NO:VARCHAR#     
        ORDER BY ma.gds_no
    </dynamic-mapped-statement>
    
    
        
</sql-map>
