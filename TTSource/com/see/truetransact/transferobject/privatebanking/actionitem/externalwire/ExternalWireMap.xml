<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sql-map PUBLIC "-//iBATIS.com//DTD SQL Map 1.0//EN" "http://www.ibatis.com/dtd/sql-map.dtd">
<sql-map name="ExternalWireTOMap">

	<!-- Use ExternalWireTO object (JavaBean) properties as parameters for insert. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="insertExternalWireTO" inline-parameters="true">
        INSERT INTO PVT_EXTERNAL_WIRE
        (REF_ID, MEMBER_ID, ENTITLE_GRP, PORTFOLIO_LOC, ASSET_SUB_CLASS, DEBIT_ACCT, WIRE_TRANS_CURRENCY, EXEC_DT, SETTLEMENT_DT, DEBIT_AMT, CREDIT_AMT, CHRG_PAID_BY, STD_CHARGES, CHRG_AMT, CHRG_CCY, BY_ORDER_OF, ROUTING_CODE, SWIFT_CODE, BENEFIT_NAME, BENEFIT_BANK, BENEFIT_ACCT_NO, BENEFIT_BANK_COUNTRY, BENEFIT_ADDRESS, BENEFIT_CITY, BENEFIT_STATE, BENEFIT_PIN, CORRES_BANK, CORRES_ADDRESS, CORRES_CITY, CORRES_STATE, CORRES_COUNTRY, CORRES_PIN, BANK_OFF_INSTRUCT, TRADER_INSTRUCT, CREDIT_NOTES, CLIENT_ADVICES, CREATED_BY, CREATED_DT, STATUS,  PAYMENT_DETAILS
        ) VALUES (
        #refId:VARCHAR#, #memberId:VARCHAR#, #entitleGrp:VARCHAR#, #portfolioLoc:VARCHAR#, #assetSubClass:VARCHAR#, #debitAcct:VARCHAR#, #wireTransCurrency:VARCHAR#, #execDt:DATE#, #settlementDt:DATE#, #debitAmt:NUMERIC#, #creditAmt:NUMERIC#, #chrgPaidBy:VARCHAR#, #stdCharges:VARCHAR#, #chrgAmt:NUMERIC#, #chrgCcy:VARCHAR#, #byOrderOf:VARCHAR#, #routingCode:VARCHAR#, #swiftCode:VARCHAR#, #benefitName:VARCHAR#, #benefitBank:VARCHAR#, #benefitAcctNo:VARCHAR#, #benefitBankCountry:VARCHAR#, #benefitAddress:VARCHAR#, #benefitCity:VARCHAR#, #benefitState:VARCHAR#, #benefitPin:VARCHAR#, #corresBank:VARCHAR#, #corresAddress:VARCHAR#, #corresCity:VARCHAR#, #corresState:VARCHAR#, #corresCountry:VARCHAR#, #corresPin:VARCHAR#, #bankOffInstruct:VARCHAR#, #traderInstruct:VARCHAR#, #creditNotes:VARCHAR#, #clientAdvices:VARCHAR#, #createdBy:VARCHAR#, TODAY_DT, #status:VARCHAR#, #paymentDetails:VARCHAR#)
    </mapped-statement>

	<!-- Use ExternalWireTO object (JavaBean) properties as parameters for update. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. -->
    <mapped-statement name="updateExternalWireTO" inline-parameters="true">
        UPDATE PVT_EXTERNAL_WIRE SET 
        MEMBER_ID = #memberId:VARCHAR#,
        ENTITLE_GRP = #entitleGrp:VARCHAR#,
        PORTFOLIO_LOC = #portfolioLoc:VARCHAR#,
        ASSET_SUB_CLASS = #assetSubClass:VARCHAR#,
        DEBIT_ACCT = #debitAcct:VARCHAR#,
        WIRE_TRANS_CURRENCY = #wireTransCurrency:VARCHAR#,
        EXEC_DT = #execDt:DATE#,
        SETTLEMENT_DT = #settlementDt:DATE#,
        DEBIT_AMT = #debitAmt:NUMERIC#,
        CREDIT_AMT = #creditAmt:NUMERIC#,
        CHRG_PAID_BY = #chrgPaidBy:VARCHAR#,
        STD_CHARGES = #stdCharges:VARCHAR#,
        CHRG_AMT = #chrgAmt:NUMERIC#,
        CHRG_CCY = #chrgCcy:VARCHAR#,
        BY_ORDER_OF = #byOrderOf:VARCHAR#,
        ROUTING_CODE = #routingCode:VARCHAR#,
        SWIFT_CODE = #swiftCode:VARCHAR#,
        BENEFIT_NAME = #benefitName:VARCHAR#,
        BENEFIT_BANK = #benefitBank:VARCHAR#,
        BENEFIT_ACCT_NO = #benefitAcctNo:VARCHAR#,
        BENEFIT_BANK_COUNTRY = #benefitBankCountry:VARCHAR#,
        BENEFIT_ADDRESS = #benefitAddress:VARCHAR#,
        BENEFIT_CITY = #benefitCity:VARCHAR#,
        BENEFIT_STATE = #benefitState:VARCHAR#,
        BENEFIT_PIN = #benefitPin:VARCHAR#,
        CORRES_BANK = #corresBank:VARCHAR#,
        CORRES_ADDRESS = #corresAddress:VARCHAR#,
        CORRES_CITY = #corresCity:VARCHAR#,
        CORRES_STATE = #corresState:VARCHAR#,
        CORRES_COUNTRY = #corresCountry:VARCHAR#,
        CORRES_PIN = #corresPin:VARCHAR#,
        BANK_OFF_INSTRUCT = #bankOffInstruct:VARCHAR#,
        TRADER_INSTRUCT = #traderInstruct:VARCHAR#,
        CREDIT_NOTES = #creditNotes:VARCHAR#,
        CLIENT_ADVICES = #clientAdvices:VARCHAR#,
        CREATED_BY = #createdBy:VARCHAR#,
        CREATED_DT = #createdDt:DATE#,
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = TODAY_DT,
        PAYMENT_DETAILS = #paymentDetails:VARCHAR#
        WHERE REF_ID = #refId:VARCHAR#
    </mapped-statement>

	<!-- Use ExternalWireTO object (JavaBean) properties as parameters for delete. 
	     Each of the parameters in the #hash# symbols is a JavaBeans property. --> 
    <mapped-statement name="deleteExternalWireTO" inline-parameters="true">
        UPDATE  PVT_EXTERNAL_WIRE SET
        STATUS = 'DELETED',
        STATUS_BY = #statusBy:VARCHAR#,
        STATUS_DT = TODAY_DT
        WHERE 
        REF_ID = #refId:VARCHAR#
    </mapped-statement>

	<!-- Use primitive wrapper type (e.g. Integer) as parameter and allow results to 
	     be auto-mapped results to ExternalWireTO object (JavaBean) properties -->
    <result-map name="getExternalWireTOResult" class="com.see.truetransact.transferobject.privatebanking.actionitem.externalwire.ExternalWireTO">
        <property name="refId" column="REF_ID"/>
        <property name="memberId" column="MEMBER_ID"/>
        <property name="entitleGrp" column="ENTITLE_GRP"/>
        <property name="portfolioLoc" column="PORTFOLIO_LOC"/>
        <property name="assetSubClass" column="ASSET_SUB_CLASS"/>
        <property name="debitAcct" column="DEBIT_ACCT"/>
        <property name="wireTransCurrency" column="WIRE_TRANS_CURRENCY"/>
        <property name="execDt" column="EXEC_DT"/>
        <property name="settlementDt" column="SETTLEMENT_DT"/>
        <property name="debitAmt" column="DEBIT_AMT"/>
        <property name="creditAmt" column="CREDIT_AMT"/>
        <property name="chrgPaidBy" column="CHRG_PAID_BY"/>
        <property name="stdCharges" column="STD_CHARGES"/>
        <property name="chrgAmt" column="CHRG_AMT"/>
        <property name="chrgCcy" column="CHRG_CCY"/>
        <property name="byOrderOf" column="BY_ORDER_OF"/>
        <property name="routingCode" column="ROUTING_CODE"/>
        <property name="swiftCode" column="SWIFT_CODE"/>
        <property name="benefitName" column="BENEFIT_NAME"/>
        <property name="benefitBank" column="BENEFIT_BANK"/>
        <property name="benefitAcctNo" column="BENEFIT_ACCT_NO"/>
        <property name="benefitBankCountry" column="BENEFIT_BANK_COUNTRY"/>
        <property name="benefitAddress" column="BENEFIT_ADDRESS"/>
        <property name="benefitCity" column="BENEFIT_CITY"/>
        <property name="benefitState" column="BENEFIT_STATE"/>
        <property name="benefitPin" column="BENEFIT_PIN"/>
        <property name="corresBank" column="CORRES_BANK"/>
        <property name="corresAddress" column="CORRES_ADDRESS"/>
        <property name="corresCity" column="CORRES_CITY"/>
        <property name="corresState" column="CORRES_STATE"/>
        <property name="corresCountry" column="CORRES_COUNTRY"/>
        <property name="corresPin" column="CORRES_PIN"/>
        <property name="bankOffInstruct" column="BANK_OFF_INSTRUCT"/>
        <property name="traderInstruct" column="TRADER_INSTRUCT"/>
        <property name="creditNotes" column="CREDIT_NOTES"/>
        <property name="clientAdvices" column="CLIENT_ADVICES"/>
        <property name="paymentDetails" column="PAYMENT_DETAILS" />
        <property name="createdBy" column="CREATED_BY"/>
        <property name="createdDt" column="CREATED_DT"/>
        <property name="status" column="STATUS"/>
        <property name="statusBy" column="STATUS_BY"/>
        <property name="statusDt" column="STATUS_DT"/>
        <property name="authorizedBy" column="AUTHORIZED_BY"/>
        <property name="authorizedDt" column="AUTHORIZED_DT"/>
        <property name="authorizeStatus" column="AUTHORIZE_STATUS"/>
               
    </result-map>
    <mapped-statement name="getSelectExternalWireTO" result-map="getExternalWireTOResult" >
        SELECT * FROM PVT_EXTERNAL_WIRE 
        WHERE REF_ID = #value:VARCHAR#
    </mapped-statement>
        
    <mapped-statement name="getSelectPvtAIExternalWire" result-class="java.util.LinkedHashMap" >
        SELECT PVT.REF_ID, POM.MEMBER, PVT.ENTITLE_GRP FROM PVT_EXTERNAL_WIRE PVT, PVT_ORDER_MASTER POM  
        WHERE PVT.STATUS != 'DELETED' AND PVT.MEMBER_ID = POM.ORD_ID
    </mapped-statement>
          <!-- =================================================================================== -->        
<!--     Authorization Queries -->
    <mapped-statement name="getExternalWireAuthorizeList" result-class="java.util.LinkedHashMap">
        SELECT PEX.REF_ID, POM.MEMBER, PEX.ENTITLE_GRP FROM PVT_EXTERNAL_WIRE PEX, PVT_ORDER_MASTER POM  
        WHERE PEX.MEMBER_ID = POM.ORD_ID AND (PEX.STATUS != 'DELETED' OR PEX.STATUS IS NULL)
        AND (PEX.AUTHORIZE_STATUS NOT IN 
        ('AUTHORIZED', 'REJECTED') OR PEX.AUTHORIZE_STATUS IS NULL) 
    </mapped-statement>

    <mapped-statement name="authorizeExternalWire" result-class="java.util.HashMap">
        UPDATE PVT_EXTERNAL_WIRE
        SET 
        AUTHORIZE_STATUS = #STATUS:VARCHAR#,
        AUTHORIZED_BY = #USER_ID:VARCHAR#, 
        AUTHORIZED_DT = TODAY_DT
        WHERE REF_ID = #REF_ID:VARCHAR# 
    </mapped-statement>
<!-- =================================================================================== -->
        

</sql-map>