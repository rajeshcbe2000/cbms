/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition.
 **
 *
 * LoginExpiryUI.java
 *
 * Created on October 20, 2003, 11:07 AM
 */
package com.see.truetransact.ui.login;

import java.util.HashMap;
import java.util.Date;
import java.awt.Dimension;
import java.awt.Toolkit;

import com.see.truetransact.commonutil.CommonConstants;
import com.see.truetransact.commonutil.CommonUtil;
import com.see.truetransact.clientutil.ClientUtil;
import com.see.truetransact.commonutil.DateUtil;
import com.see.truetransact.ui.common.passwordrules.PasswordRules;

import com.see.truetransact.ui.login.newpasswd.ChangePasswordUI;
import com.see.truetransact.transferobject.sysadmin.config.ConfigPasswordTO;
import com.see.truetransact.commonutil.StringEncrypter;

import javax.swing.UIManager;

import com.see.truetransact.ui.TrueTransactMain;

/**
 * This is the entry point to TT. Only by entering proper UserID & password an
 * user can log on to the system.
 *
 * @author karthik, Bala
 *
 */
public class LoginExpiryUI extends com.see.truetransact.uicomponent.CDialog {

    private static TrueTransactMain frm = null;
    private StringEncrypter encrypt = null;
    private int NoOfLoginAttempts = 0;

    /**
     * Creates new form LoginUI
     */
    public LoginExpiryUI(TrueTransactMain frm) throws Exception {
        try {
            this.frm = frm;
            encrypt = new StringEncrypter();
            initComponents();
        } catch (Exception exc) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        panLogin = new com.see.truetransact.uicomponent.CPanel();
        panUNPwd = new com.see.truetransact.uicomponent.CPanel();
        lblPassword = new com.see.truetransact.uicomponent.CLabel();
        pwdPassword = new com.see.truetransact.uicomponent.CPasswordField();
        panSubmit = new com.see.truetransact.uicomponent.CPanel();
        btnLogon = new com.see.truetransact.uicomponent.CButton();
        btnCancel = new com.see.truetransact.uicomponent.CButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CBMS++ Application Locked");
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        panLogin.setMaximumSize(new java.awt.Dimension(310, 110));
        panLogin.setLayout(new java.awt.GridBagLayout());

        panUNPwd.setBorder(javax.swing.BorderFactory.createTitledBorder("For Login CBMS++"));
        panUNPwd.setLayout(new java.awt.GridBagLayout());

        lblPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPassword.setText("Password");
        lblPassword.setMaximumSize(new java.awt.Dimension(70, 18));
        lblPassword.setMinimumSize(new java.awt.Dimension(70, 18));
        lblPassword.setPreferredSize(new java.awt.Dimension(70, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panUNPwd.add(lblPassword, gridBagConstraints);

        pwdPassword.setMinimumSize(new java.awt.Dimension(200, 21));
        pwdPassword.setPreferredSize(new java.awt.Dimension(200, 21));
        pwdPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPasswordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panUNPwd.add(pwdPassword, gridBagConstraints);

        panSubmit.setLayout(new java.awt.GridBagLayout());

        btnLogon.setText("Log on");
        btnLogon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panSubmit.add(btnLogon, gridBagConstraints);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panSubmit.add(btnCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panUNPwd.add(panSubmit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panLogin.add(panUNPwd, gridBagConstraints);

        getContentPane().add(panLogin, java.awt.BorderLayout.CENTER);
        panLogin.getAccessibleContext().setAccessibleName("CBMS++ Screen Locked");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void show() {
        super.show();
    }
        private void pwdPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPasswordActionPerformed
            // Add your handling code here:
            btnLogonActionPerformed(evt);
    }//GEN-LAST:event_pwdPasswordActionPerformed
            private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
                // Add your handling code here:
                int yesNo = ClientUtil.closeAlert();
                if (yesNo == 0) {
                    this.dispose();
                    frm.makeLogOut();
                }
    }//GEN-LAST:event_btnCancelActionPerformed
    private void btnLogonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogonActionPerformed
        try {
            if (pwdPassword.getText() != null && pwdPassword.getText().length() > 0) {
                String pwd = encrypt.encrypt(pwdPassword.getText());
                String userPwd = CommonUtil.convertObjToStr(frm.USERINFO.get("PWD"));
                if (pwd.equals(userPwd)) {
//                frm.startAutoLogoutTimer();
                    this.dispose();
//                com.see.truetransact.clientproxy.ProxyParameters.lastAccessTime = (new java.util.Date()).getTime();
                } else {
                    if (NoOfLoginAttempts > 0) {
                        ClientUtil.showAlertWindow("Invalid Password... Session will be closed.");
                        this.dispose();
                        frm.makeLogOut();
                    } else {
                        ClientUtil.showAlertWindow("Invalid Password...");
                        pwdPassword.setText("");
                        pwdPassword.requestFocus();
                    }
                }
                NoOfLoginAttempts++;
            } else {
                ClientUtil.showAlertWindow("Enter Password...");
            }
        } catch (Exception e) {
            System.out.println("Invalid Password...");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnLogonActionPerformed
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        int yesNo = ClientUtil.closeAlert();
        if (yesNo == 0) {
            this.dispose();
            frm.makeLogOut();
        } else {
            super.show();
        }
    }//GEN-LAST:event_exitForm
    private void internationalize() {
        final LoginRB resourceBundle = new LoginRB();
        lblPassword.setText(resourceBundle.getString("lblPassword"));
        btnLogon.setText(resourceBundle.getString("btnLogon"));
        btnCancel.setText(resourceBundle.getString("btnCancel"));
    }

    public static void main(String str[]) throws Exception {
        LoginUI loginUI = new LoginUI();

        Dimension frameSize = loginUI.getSize();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        loginUI.setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2 - 60);
        loginUI.show();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnCancel;
    private com.see.truetransact.uicomponent.CButton btnLogon;
    private javax.swing.JLabel jLabel1;
    private com.see.truetransact.uicomponent.CLabel lblPassword;
    private com.see.truetransact.uicomponent.CPanel panLogin;
    private com.see.truetransact.uicomponent.CPanel panSubmit;
    private com.see.truetransact.uicomponent.CPanel panUNPwd;
    private com.see.truetransact.uicomponent.CPasswordField pwdPassword;
    // End of variables declaration//GEN-END:variables
}
