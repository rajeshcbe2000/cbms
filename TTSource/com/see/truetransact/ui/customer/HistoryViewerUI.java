  /*
   * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
   *
   * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
   * 
   * HistoryViewerUI.java
   *
   * Created on November 26, 2003, 11:27 AM
   */

package com.see.truetransact.ui.customer;


import java.util.List;
import java.util.HashMap;
import java.util.Observer;
import java.util.ArrayList;
import java.util.Observable;
import com.see.truetransact.commonutil.DateUtil;
import com.see.truetransact.clientutil.ClientUtil;
import com.see.truetransact.commonutil.CommonUtil;
import com.see.truetransact.uimandatory.UIMandatoryField;
import com.see.truetransact.clientutil.EnhancedTableModel;
import com.see.truetransact.clientexception.ClientParseException;

/**
 *
 * @author Suresh.R
 *
 **/

public class HistoryViewerUI extends com.see.truetransact.uicomponent.CInternalFrame implements Observer, UIMandatoryField{
    private final static ClientParseException parseException = ClientParseException.getInstance();
    final ArrayList tableTitle = new ArrayList();
    private EnhancedTableModel tblHistoryViewerData;
    /** Creates new form BeanForm */
    public HistoryViewerUI() {
        initComponents();
        initForm();
    }
    
    private void initForm(){
        setFieldNames();
        txtCustID.setAllowAll(true);
        ClientUtil.enableDisable(panHistoryDetails,true);
        btnDisplay.setEnabled(true);
        txtCustID.setEnabled(false);
        setTableTile();
        tblHistoryViewerData = new EnhancedTableModel(null, tableTitle);
        tblHistoryViewer.setModel(getTblHistoryViewerData());
    }
    
/* Auto Generated Method - setFieldNames()
   This method assigns name for all the components.
   Other functions are working based on this name. */
    private void setFieldNames() {
    }
    
    
    /* Auto Generated Method - setMandatoryHashMap()
     
    ADD: implements com.see.truetransact.uimandatory.UIMandatoryField
     
   This method list out all the Input Fields available in the UI.
   It needs a class level HashMap variable mandatoryMap. */
    public void setMandatoryHashMap() {
        
    }
    
/* Auto Generated Method - getMandatoryHashMap()
   Getter method for setMandatoryHashMap().*/
    public HashMap getMandatoryHashMap() {
       return null; 
    }
    
    

    /** Auto Generated Method - update()
     * This method called by Observable. It updates the UI with
     * Observable's data. If needed add/Remove RadioButtons
     * method need to be added.*/
    public void update(Observable observed, Object arg) {
    }
    
    /* Auto Generated Method - updateOBFields()
   This method called by Save option of UI.
   It updates the OB with UI data.*/
    public void updateOBFields() {
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        rdgHistoryViewer = new com.see.truetransact.uicomponent.CButtonGroup();
        panHistoryDetails = new com.see.truetransact.uicomponent.CPanel();
        panHistoryInsideDetails = new com.see.truetransact.uicomponent.CPanel();
        lblCustomerID = new com.see.truetransact.uicomponent.CLabel();
        panHistoryChoice = new com.see.truetransact.uicomponent.CPanel();
        rdoHistory_CustID = new com.see.truetransact.uicomponent.CRadioButton();
        rdoHistory_AccNo = new com.see.truetransact.uicomponent.CRadioButton();
        lblHistoryViewer = new com.see.truetransact.uicomponent.CLabel();
        btnDisplay = new com.see.truetransact.uicomponent.CButton();
        txtCustID = new com.see.truetransact.uicomponent.CTextField();
        lblFromDate = new com.see.truetransact.uicomponent.CLabel();
        tdtFromDate = new com.see.truetransact.uicomponent.CDateField();
        lblToDate = new com.see.truetransact.uicomponent.CLabel();
        tdtToDate = new com.see.truetransact.uicomponent.CDateField();
        lblCustomerName = new com.see.truetransact.uicomponent.CLabel();
        panHistoryTableDetails = new com.see.truetransact.uicomponent.CPanel();
        srpHistoryViewer = new com.see.truetransact.uicomponent.CScrollPane();
        tblHistoryViewer = new com.see.truetransact.uicomponent.CTable();
        panCleared = new com.see.truetransact.uicomponent.CPanel();
        btnClose = new com.see.truetransact.uicomponent.CButton();
        btnClear = new com.see.truetransact.uicomponent.CButton();
        mbrMain = new com.see.truetransact.uicomponent.CMenuBar();
        mnuProcess = new javax.swing.JMenu();
        mitNew = new javax.swing.JMenuItem();
        mitEdit = new javax.swing.JMenuItem();
        mitDelete = new javax.swing.JMenuItem();
        sptDelete = new javax.swing.JSeparator();
        mitSave = new javax.swing.JMenuItem();
        mitCancel = new javax.swing.JMenuItem();
        sptCancel = new javax.swing.JSeparator();
        mitAuthorize = new javax.swing.JMenuItem();
        mitReject = new javax.swing.JMenuItem();
        mitException = new javax.swing.JMenuItem();
        sptException = new javax.swing.JSeparator();
        mitPrint = new javax.swing.JMenuItem();
        mitClose = new javax.swing.JMenuItem();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setMinimumSize(new java.awt.Dimension(840, 600));
        setPreferredSize(new java.awt.Dimension(840, 600));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        panHistoryDetails.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panHistoryDetails.setMinimumSize(new java.awt.Dimension(850, 520));
        panHistoryDetails.setPreferredSize(new java.awt.Dimension(850, 520));
        panHistoryDetails.setLayout(new java.awt.GridBagLayout());

        panHistoryInsideDetails.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panHistoryInsideDetails.setMinimumSize(new java.awt.Dimension(830, 125));
        panHistoryInsideDetails.setPreferredSize(new java.awt.Dimension(830, 125));
        panHistoryInsideDetails.setLayout(new java.awt.GridBagLayout());

        lblCustomerID.setText("Customer ID/Member No *");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 70, 4, 4);
        panHistoryInsideDetails.add(lblCustomerID, gridBagConstraints);

        panHistoryChoice.setName("panMaritalStatus");
        panHistoryChoice.setLayout(new java.awt.GridBagLayout());

        rdgHistoryViewer.add(rdoHistory_CustID);
        rdoHistory_CustID.setText("Cust ID");
        rdoHistory_CustID.setName("rdoMaritalStatus_Single");
        rdoHistory_CustID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHistory_CustIDActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panHistoryChoice.add(rdoHistory_CustID, gridBagConstraints);

        rdgHistoryViewer.add(rdoHistory_AccNo);
        rdoHistory_AccNo.setText("A/c No");
        rdoHistory_AccNo.setName("rdoMaritalStatus_Married");
        rdoHistory_AccNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHistory_AccNoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panHistoryChoice.add(rdoHistory_AccNo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 4);
        panHistoryInsideDetails.add(panHistoryChoice, gridBagConstraints);

        lblHistoryViewer.setText("History Viewer *");
        lblHistoryViewer.setName("lblMaritalStatus");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 70, 4, 4);
        panHistoryInsideDetails.add(lblHistoryViewer, gridBagConstraints);

        btnDisplay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_AUTHORIZE.gif"))); // NOI18N
        btnDisplay.setText("Display");
        btnDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        panHistoryInsideDetails.add(btnDisplay, gridBagConstraints);

        txtCustID.setMaxLength(48);
        txtCustID.setMinimumSize(new java.awt.Dimension(100, 21));
        txtCustID.setName("txtNationality");
        txtCustID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCustIDFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panHistoryInsideDetails.add(txtCustID, gridBagConstraints);

        lblFromDate.setText("From Date *");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 70, 4, 4);
        panHistoryInsideDetails.add(lblFromDate, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panHistoryInsideDetails.add(tdtFromDate, gridBagConstraints);

        lblToDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToDate.setText("To Date *");
        lblToDate.setMaximumSize(new java.awt.Dimension(230, 85));
        lblToDate.setMinimumSize(new java.awt.Dimension(116, 18));
        lblToDate.setPreferredSize(new java.awt.Dimension(116, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 126, 4, 4);
        panHistoryInsideDetails.add(lblToDate, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panHistoryInsideDetails.add(tdtToDate, gridBagConstraints);

        lblCustomerName.setForeground(new java.awt.Color(0, 51, 204));
        lblCustomerName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCustomerName.setFont(new java.awt.Font("MS Sans Serif", 1, 13)); // NOI18N
        lblCustomerName.setMaximumSize(new java.awt.Dimension(100, 21));
        lblCustomerName.setMinimumSize(new java.awt.Dimension(100, 21));
        lblCustomerName.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panHistoryInsideDetails.add(lblCustomerName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panHistoryDetails.add(panHistoryInsideDetails, gridBagConstraints);

        panHistoryTableDetails.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panHistoryTableDetails.setMinimumSize(new java.awt.Dimension(730, 320));
        panHistoryTableDetails.setPreferredSize(new java.awt.Dimension(830, 320));
        panHistoryTableDetails.setLayout(new java.awt.GridBagLayout());

        srpHistoryViewer.setPreferredSize(new java.awt.Dimension(800, 250));

        tblHistoryViewer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tblHistoryViewer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cust ID", "Changed Dt", "Column Name", "Old Value", "New Value", "Modified By", "Authorized By"
            }
        ));
        tblHistoryViewer.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblHistoryViewer.setDragEnabled(true);
        tblHistoryViewer.setMaximumSize(new java.awt.Dimension(2147483647, 64));
        tblHistoryViewer.setMinimumSize(new java.awt.Dimension(60, 64));
        tblHistoryViewer.setPreferredScrollableViewportSize(new java.awt.Dimension(794, 246));
        srpHistoryViewer.setViewportView(tblHistoryViewer);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 15, 0);
        panHistoryTableDetails.add(srpHistoryViewer, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panHistoryDetails.add(panHistoryTableDetails, gridBagConstraints);

        panCleared.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panCleared.setMinimumSize(new java.awt.Dimension(730, 40));
        panCleared.setPreferredSize(new java.awt.Dimension(730, 40));
        panCleared.setLayout(new java.awt.GridBagLayout());

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_CLOSE.gif"))); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        panCleared.add(btnClose, gridBagConstraints);

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_CANCEL.gif"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCleared.add(btnClear, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panHistoryDetails.add(panCleared, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(panHistoryDetails, gridBagConstraints);

        mnuProcess.setText("Process");

        mitNew.setText("New");
        mitNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitNewActionPerformed(evt);
            }
        });
        mnuProcess.add(mitNew);

        mitEdit.setText("Edit");
        mitEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitEditActionPerformed(evt);
            }
        });
        mnuProcess.add(mitEdit);

        mitDelete.setText("Delete");
        mitDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitDeleteActionPerformed(evt);
            }
        });
        mnuProcess.add(mitDelete);
        mnuProcess.add(sptDelete);

        mitSave.setText("Save");
        mitSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitSaveActionPerformed(evt);
            }
        });
        mnuProcess.add(mitSave);

        mitCancel.setText("Cancel");
        mitCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitCancelActionPerformed(evt);
            }
        });
        mnuProcess.add(mitCancel);
        mnuProcess.add(sptCancel);

        mitAuthorize.setText("Authorize");
        mnuProcess.add(mitAuthorize);

        mitReject.setText("Rejection");
        mnuProcess.add(mitReject);

        mitException.setText("Exception");
        mnuProcess.add(mitException);
        mnuProcess.add(sptException);

        mitPrint.setText("Print");
        mnuProcess.add(mitPrint);

        mitClose.setText("Close");
        mitClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitCloseActionPerformed(evt);
            }
        });
        mnuProcess.add(mitClose);

        mbrMain.add(mnuProcess);

        setJMenuBar(mbrMain);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCustIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustIDFocusLost
        // TODO add your handling code here:
        if(txtCustID.getText().length()>0){
            lblCustomerName.setText("");
            resetTableValues();
        }
    }//GEN-LAST:event_txtCustIDFocusLost

    private void btnDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayActionPerformed
        // TODO add your handling code here:
        if(txtCustID.getText().length()>0){
            HashMap historyMap = new HashMap();
            historyMap.put("CUST_ID",txtCustID.getText());
            if(rdoHistory_AccNo.isSelected()==true){
                historyMap.put("ACT_NUM", txtCustID.getText());
                List custIdList = ClientUtil.executeQuery("getCustIdfromMembershipLiability",historyMap);
                if(custIdList!= null && custIdList.size()>0){
                    historyMap = (HashMap) custIdList.get(0);
                }else{
                    ClientUtil.showMessageWindow("Invalid Account Number...!!!");
                    txtCustID.setText("");
                    return;
                }
            }
            if(tdtFromDate.getDateValue().length()>0){
                historyMap.put("FROM_DT", DateUtil.getDateMMDDYYYY(tdtFromDate.getDateValue()));
            }
            if(tdtToDate.getDateValue().length()>0){
                historyMap.put("TO_DT", DateUtil.getDateMMDDYYYY(tdtToDate.getDateValue()));
            }
            List historyLst = ClientUtil.executeQuery("getHistoryViewerDetails",historyMap);
            if(historyLst!=null && historyLst.size()>0){
                ArrayList rowList = new ArrayList();
                ArrayList tableList = new ArrayList();
                for(int i=0; i<historyLst.size();i++){
                    historyMap=(HashMap) historyLst.get(i);
                    rowList = new ArrayList();
                    if(i==0){
                        lblCustomerName.setText(CommonUtil.convertObjToStr(historyMap.get("CUSTOMER_NAME")));
                    }
                    rowList.add(historyMap.get("CUST_ID"));
                    rowList.add(historyMap.get("MODIFY_DT"));
                    rowList.add(historyMap.get("COLUMN_NAME"));
                    rowList.add(historyMap.get("OLD_VALUE"));
                    rowList.add(historyMap.get("NEW_VALUE"));
                    rowList.add(historyMap.get("MODIFIED_BY"));
                    rowList.add(historyMap.get("AUTHORIZED_BY"));
                    tableList.add(rowList);
                }
                tblHistoryViewerData = new EnhancedTableModel((ArrayList)tableList, tableTitle);
                tblHistoryViewer.setModel(getTblHistoryViewerData());
                tblHistoryViewer.getColumnModel().getColumn(0).setPreferredWidth(80);
                tblHistoryViewer.getColumnModel().getColumn(1).setPreferredWidth(90);
                tblHistoryViewer.getColumnModel().getColumn(2).setPreferredWidth(120);
                tblHistoryViewer.getColumnModel().getColumn(3).setPreferredWidth(320);
                tblHistoryViewer.getColumnModel().getColumn(4).setPreferredWidth(320);
                btnDisplay.setEnabled(false);
            }else{
                ClientUtil.showMessageWindow("No History Details !!! ");
                resetTableValues();
            }
        }else{
            if(rdoHistory_CustID.isSelected()==true){
                ClientUtil.showMessageWindow("Pls Enter Customer Id !!! ");
            }else if(rdoHistory_AccNo.isSelected()==true) {
                ClientUtil.showMessageWindow("Pls Enter Account No !!! ");
            }else{
                ClientUtil.showMessageWindow("Pls First Select Cust ID or A/c No !!! ");
            }
        }
    }//GEN-LAST:event_btnDisplayActionPerformed
    public void setTableTile(){
        tableTitle.add("Cust ID");
        tableTitle.add("Changed Date");
        tableTitle.add("Column Name");
        tableTitle.add("Old Value");
        tableTitle.add("New Value");
        tableTitle.add("Modified By");
        tableTitle.add("Authorized By");
    }
    
    public void resetTableValues(){
        tblHistoryViewerData.setDataArrayList(null,tableTitle);
    }
    private void rdoHistory_AccNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHistory_AccNoActionPerformed
        // TODO add your handling code here:
        txtCustID.setEnabled(true);
        txtCustID.setText("");
        lblCustomerName.setText("");
        lblCustomerID.setText("Account No");
        resetTableValues();
    }//GEN-LAST:event_rdoHistory_AccNoActionPerformed

    private void rdoHistory_CustIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHistory_CustIDActionPerformed
        // TODO add your handling code here:
        txtCustID.setEnabled(true);
        txtCustID.setText("");
        lblCustomerName.setText("");
        lblCustomerID.setText("Customer ID/Member No");
        resetTableValues();
    }//GEN-LAST:event_rdoHistory_CustIDActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        resetTableValues();
        lblCustomerName.setText("");
        tblHistoryViewer.setModel(getTblHistoryViewerData());
        ClientUtil.clearAll(this);
        btnDisplay.setEnabled(true);
    }//GEN-LAST:event_btnClearActionPerformed
                                                   
    
               
    
    private void mitCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitCancelActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_mitCancelActionPerformed
    
    private void mitSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitSaveActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_mitSaveActionPerformed
    
    private void mitDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitDeleteActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_mitDeleteActionPerformed
    
    private void mitEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitEditActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_mitEditActionPerformed
    
    private void mitNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitNewActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_mitNewActionPerformed
    
    private void mitCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitCloseActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_mitCloseActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnClear;
    private com.see.truetransact.uicomponent.CButton btnClose;
    private com.see.truetransact.uicomponent.CButton btnDisplay;
    private com.see.truetransact.uicomponent.CLabel lblCustomerID;
    private com.see.truetransact.uicomponent.CLabel lblCustomerName;
    private com.see.truetransact.uicomponent.CLabel lblFromDate;
    private com.see.truetransact.uicomponent.CLabel lblHistoryViewer;
    private com.see.truetransact.uicomponent.CLabel lblToDate;
    private com.see.truetransact.uicomponent.CMenuBar mbrMain;
    private javax.swing.JMenuItem mitAuthorize;
    private javax.swing.JMenuItem mitCancel;
    private javax.swing.JMenuItem mitClose;
    private javax.swing.JMenuItem mitDelete;
    private javax.swing.JMenuItem mitEdit;
    private javax.swing.JMenuItem mitException;
    private javax.swing.JMenuItem mitNew;
    private javax.swing.JMenuItem mitPrint;
    private javax.swing.JMenuItem mitReject;
    private javax.swing.JMenuItem mitSave;
    private javax.swing.JMenu mnuProcess;
    private com.see.truetransact.uicomponent.CPanel panCleared;
    private com.see.truetransact.uicomponent.CPanel panHistoryChoice;
    private com.see.truetransact.uicomponent.CPanel panHistoryDetails;
    private com.see.truetransact.uicomponent.CPanel panHistoryInsideDetails;
    private com.see.truetransact.uicomponent.CPanel panHistoryTableDetails;
    private com.see.truetransact.uicomponent.CButtonGroup rdgHistoryViewer;
    private com.see.truetransact.uicomponent.CRadioButton rdoHistory_AccNo;
    private com.see.truetransact.uicomponent.CRadioButton rdoHistory_CustID;
    private javax.swing.JSeparator sptCancel;
    private javax.swing.JSeparator sptDelete;
    private javax.swing.JSeparator sptException;
    private com.see.truetransact.uicomponent.CScrollPane srpHistoryViewer;
    private com.see.truetransact.uicomponent.CTable tblHistoryViewer;
    private com.see.truetransact.uicomponent.CDateField tdtFromDate;
    private com.see.truetransact.uicomponent.CDateField tdtToDate;
    private com.see.truetransact.uicomponent.CTextField txtCustID;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] arg){
        try {
            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Throwable th) {
            th.printStackTrace();
        }
        javax.swing.JFrame jf = new javax.swing.JFrame();
        HistoryViewerUI gui = new HistoryViewerUI();
        jf.getContentPane().add(gui);
        jf.setSize(536, 566);
        jf.show();
        gui.show();
    }
    
    /**
     * Getter for property tblHistoryViewerData.
     * @return Value of property tblHistoryViewerData.
     */
    public com.see.truetransact.clientutil.EnhancedTableModel getTblHistoryViewerData() {
        return tblHistoryViewerData;
    }
    
    /**
     * Setter for property tblHistoryViewerData.
     * @param tblHistoryViewerData New value of property tblHistoryViewerData.
     */
    public void setTblHistoryViewerData(com.see.truetransact.clientutil.EnhancedTableModel tblHistoryViewerData) {
        this.tblHistoryViewerData = tblHistoryViewerData;
    }
    
}