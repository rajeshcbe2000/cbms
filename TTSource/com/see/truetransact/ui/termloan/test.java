/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
 * 
 * test.java
 *
 * Created on January 17, 2013, 7:58 AM
 */

package com.see.truetransact.ui.termloan;

/**
 *
 * @author  admin
 */
public class test extends javax.swing.JFrame {
    
    /** Creates new form test */
    public test() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        panCropTotalPanel = new com.see.truetransact.uicomponent.CPanel();
        panCropDataDetails = new com.see.truetransact.uicomponent.CPanel();
        panCropDetails = new com.see.truetransact.uicomponent.CPanel();
        lblAreaAcrs = new com.see.truetransact.uicomponent.CLabel();
        txtAreaAcrs = new com.see.truetransact.uicomponent.CTextField();
        txtEligibleCropAmt = new com.see.truetransact.uicomponent.CTextField();
        lblEligibleCropAmt = new com.see.truetransact.uicomponent.CLabel();
        lblCropName = new com.see.truetransact.uicomponent.CLabel();
        cboCropName = new com.see.truetransact.uicomponent.CComboBox();
        panButton_Crop = new com.see.truetransact.uicomponent.CPanel();
        btnCrop_New = new com.see.truetransact.uicomponent.CButton();
        btnCrop_Save = new com.see.truetransact.uicomponent.CButton();
        btnCrop_Delete = new com.see.truetransact.uicomponent.CButton();
        panTable_Crop = new com.see.truetransact.uicomponent.CPanel();
        srpTable_Crop = new com.see.truetransact.uicomponent.CScrollPane();
        tblCropDetails = new com.see.truetransact.uicomponent.CTable();
        lblTotalCropLimit = new com.see.truetransact.uicomponent.CLabel();
        lblTotalCropLimitAmt = new com.see.truetransact.uicomponent.CLabel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        panCropTotalPanel.setLayout(new java.awt.GridBagLayout());

        panCropTotalPanel.setMinimumSize(new java.awt.Dimension(821, 199));
        panCropTotalPanel.setPreferredSize(new java.awt.Dimension(821, 199));
        panCropDataDetails.setLayout(new java.awt.GridBagLayout());

        panCropDataDetails.setMaximumSize(new java.awt.Dimension(475, 100));
        panCropDataDetails.setMinimumSize(new java.awt.Dimension(475, 100));
        panCropDataDetails.setPreferredSize(new java.awt.Dimension(475, 100));
        panCropDetails.setLayout(new java.awt.GridBagLayout());

        panCropDetails.setMaximumSize(new java.awt.Dimension(179, 50));
        panCropDetails.setMinimumSize(new java.awt.Dimension(179, 50));
        panCropDetails.setPreferredSize(new java.awt.Dimension(179, 50));
        lblAreaAcrs.setText("Area Cultivate Acrs");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCropDetails.add(lblAreaAcrs, gridBagConstraints);

        txtAreaAcrs.setMinimumSize(new java.awt.Dimension(100, 21));
        txtAreaAcrs.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAreaAcrsFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCropDetails.add(txtAreaAcrs, gridBagConstraints);

        txtEligibleCropAmt.setMinimumSize(new java.awt.Dimension(100, 21));
        txtEligibleCropAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEligibleCropAmtFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCropDetails.add(txtEligibleCropAmt, gridBagConstraints);

        lblEligibleCropAmt.setText("Amount Eligible");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCropDetails.add(lblEligibleCropAmt, gridBagConstraints);

        lblCropName.setText("Crop Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCropDetails.add(lblCropName, gridBagConstraints);

        cboCropName.setMinimumSize(new java.awt.Dimension(100, 21));
        cboCropName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCropNameActionPerformed(evt);
            }
        });

        panCropDetails.add(cboCropName, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panCropDataDetails.add(panCropDetails, gridBagConstraints);

        panButton_Crop.setLayout(new java.awt.GridBagLayout());

        panButton_Crop.setMinimumSize(new java.awt.Dimension(215, 33));
        panButton_Crop.setPreferredSize(new java.awt.Dimension(215, 33));
        btnCrop_New.setText("New");
        btnCrop_New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrop_NewActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panButton_Crop.add(btnCrop_New, gridBagConstraints);

        btnCrop_Save.setText("Save");
        btnCrop_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrop_SaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panButton_Crop.add(btnCrop_Save, gridBagConstraints);

        btnCrop_Delete.setText("Delete");
        btnCrop_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrop_DeleteActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panButton_Crop.add(btnCrop_Delete, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCropDataDetails.add(panButton_Crop, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panCropTotalPanel.add(panCropDataDetails, gridBagConstraints);

        panTable_Crop.setLayout(new java.awt.GridBagLayout());

        srpTable_Crop.setMinimumSize(new java.awt.Dimension(330, 140));
        srpTable_Crop.setPreferredSize(new java.awt.Dimension(330, 140));
        tblCropDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCropDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCropDetailsMouseClicked(evt);
            }
        });

        srpTable_Crop.setViewportView(tblCropDetails);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        panTable_Crop.add(srpTable_Crop, gridBagConstraints);

        lblTotalCropLimit.setText("TOTAL LIMIT");
        lblTotalCropLimit.setMaximumSize(new java.awt.Dimension(100, 15));
        lblTotalCropLimit.setMinimumSize(new java.awt.Dimension(100, 15));
        lblTotalCropLimit.setPreferredSize(new java.awt.Dimension(100, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panTable_Crop.add(lblTotalCropLimit, gridBagConstraints);

        lblTotalCropLimitAmt.setMaximumSize(new java.awt.Dimension(100, 15));
        lblTotalCropLimitAmt.setMinimumSize(new java.awt.Dimension(100, 15));
        lblTotalCropLimitAmt.setPreferredSize(new java.awt.Dimension(100, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 4, 3, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panTable_Crop.add(lblTotalCropLimitAmt, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panCropTotalPanel.add(panTable_Crop, gridBagConstraints);

        getContentPane().add(panCropTotalPanel, new java.awt.GridBagConstraints());

        pack();
    }//GEN-END:initComponents

    private void tblCropDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCropDetailsMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tblCropDetailsMouseClicked

    private void btnCrop_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrop_DeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCrop_DeleteActionPerformed

    private void btnCrop_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrop_SaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCrop_SaveActionPerformed

    private void btnCrop_NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrop_NewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCrop_NewActionPerformed

    private void txtEligibleCropAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEligibleCropAmtFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEligibleCropAmtFocusLost

    private void txtAreaAcrsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAreaAcrsFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAreaAcrsFocusLost

    private void cboCropNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCropNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCropNameActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new test().show();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnCrop_Delete;
    private com.see.truetransact.uicomponent.CButton btnCrop_New;
    private com.see.truetransact.uicomponent.CButton btnCrop_Save;
    private com.see.truetransact.uicomponent.CComboBox cboCropName;
    private com.see.truetransact.uicomponent.CLabel lblAreaAcrs;
    private com.see.truetransact.uicomponent.CLabel lblCropName;
    private com.see.truetransact.uicomponent.CLabel lblEligibleCropAmt;
    private com.see.truetransact.uicomponent.CLabel lblTotalCropLimit;
    private com.see.truetransact.uicomponent.CLabel lblTotalCropLimitAmt;
    private com.see.truetransact.uicomponent.CPanel panButton_Crop;
    private com.see.truetransact.uicomponent.CPanel panCropDataDetails;
    private com.see.truetransact.uicomponent.CPanel panCropDetails;
    private com.see.truetransact.uicomponent.CPanel panCropTotalPanel;
    private com.see.truetransact.uicomponent.CPanel panTable_Crop;
    private com.see.truetransact.uicomponent.CScrollPane srpTable_Crop;
    private com.see.truetransact.uicomponent.CTable tblCropDetails;
    private com.see.truetransact.uicomponent.CTextField txtAreaAcrs;
    private com.see.truetransact.uicomponent.CTextField txtEligibleCropAmt;
    // End of variables declaration//GEN-END:variables
    
}
