/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
 * 
 * NPAApplicationUI.java
 *
 * Created on January 25, 2005, 3:49 PM
 */

package com.see.truetransact.ui.termloan.NPA;


import com.see.truetransact.uicomponent.CInternalFrame;
import com.see.truetransact.clientproxy.ProxyParameters;
import com.see.truetransact.ui.termloan.NPA.NPAApplicationOB;
import com.see.truetransact.clientutil.ComboBoxModel;
import com.see.truetransact.commonutil.CommonUtil;
import com.see.truetransact.clientutil.ClientUtil;
import java.util.Observer;
import java.util.Observable;
import java.util.HashMap;

/**
 *
 * @author  152713
 */
public class NPAApplicationUI extends CInternalFrame implements java.util.Observer {
    java.util.ResourceBundle resourceBundle = java.util.ResourceBundle.getBundle("com.see.truetransact.ui.termloan.NPA.NPAApplicationRB", ProxyParameters.LANGUAGE);
    private HashMap mandatoryMap;
    NPAApplicationOB observable;
    
    public  NPAApplicationUI() {
        initComponents();
        internationalize();
        setFieldNames();
        setObservable();
        initComponentData();
    }
    
    public void show(){
        super.show();
    }
    
    private void setObservable(){
        observable=new NPAApplicationOB();
        observable.addObserver(this);
    }
    /* Auto Generated Method - setFieldNames()
       This method assigns name for all the components.
       Other functions are working based on this name. */
    private void setFieldNames() {
        btnOk.setName("btnOk");
        cProgressBar.setName("cProgressBar");
        cboBranches.setName("cboBranches");
        cboProductID.setName("cboProductID");
        lblBranches.setName("lblBranches");
        lblProductID.setName("lblProductID");
        panAcctInfo.setName("panAcctInfo");
        panInstallment_MainPan.setName("panInstallment_MainPan");
        panSubmitBtn.setName("panSubmitBtn");
    }
    
/* Auto Generated Method - internationalize()
   This method used to assign display texts from
   the Resource Bundle File. */
    private void internationalize() {
        btnOk.setText(resourceBundle.getString("btnOk"));
        lblProductID.setText(resourceBundle.getString("lblProductID"));
        lblBranches.setText(resourceBundle.getString("lblBranches"));
    }
    
    private void initComponentData(){
        cboProductID.setModel(observable.getCbmProductID());
        cboBranches.setModel(observable.getCbmBranches());
        
    }
/* Auto Generated Method - update()
   This method called by Observable. It updates the UI with
   Observable's data. If needed add/Remove RadioButtons
   method need to be added.*/
    public void update(Observable observed, Object arg) {
    }
    
    
/* Auto Generated Method - updateOBFields()
   This method called by Save option of UI.
   It updates the OB with UI data.*/
    public void updateOBFields() {
        observable.setCboBranches((String)(((ComboBoxModel)(cboBranches).getModel())).getKeyForSelected());
        observable.setCboProductID((String)(((ComboBoxModel)(cboProductID).getModel())).getKeyForSelected());
        System.out.println("observable.getCboBranches()"+observable.getCboBranches());
    }
    
    
/* Auto Generated Method - setMandatoryHashMap()
 
ADD: implements com.see.truetransact.uimandatory.UIMandatoryField
 
   This method list out all the Input Fields available in the UI.
   It needs a class level HashMap variable mandatoryMap. */
    public void setMandatoryHashMap() {
        mandatoryMap = new HashMap();
    }
    
/* Auto Generated Method - getMandatoryHashMap()
   Getter method for setMandatoryHashMap().*/
    public HashMap getMandatoryHashMap() {
        return mandatoryMap;
    }
    
    
    
/* Auto Generated Method - setHelpMessage()
   This method shows tooltip help for all the input fields
   available in the UI. It needs the Mandatory Resource Bundle
   object. Help display Label name should be lblMsg. */
    public void setHelpMessage() {
        NPAApplicationMRB objMandatoryRB = new NPAApplicationMRB();
    }
    
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        panInstallment_MainPan = new com.see.truetransact.uicomponent.CPanel();
        panAcctInfo = new com.see.truetransact.uicomponent.CPanel();
        lblBranches = new com.see.truetransact.uicomponent.CLabel();
        cboProductID = new com.see.truetransact.uicomponent.CComboBox();
        btnOk = new com.see.truetransact.uicomponent.CButton();
        lblProductID = new com.see.truetransact.uicomponent.CLabel();
        cboBranches = new com.see.truetransact.uicomponent.CComboBox();
        panSubmitBtn = new com.see.truetransact.uicomponent.CPanel();
        cProgressBar = new com.see.truetransact.uicomponent.CProgressBar();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("NPA Application");
        setMinimumSize(new java.awt.Dimension(400, 300));
        setPreferredSize(new java.awt.Dimension(400, 300));
        panInstallment_MainPan.setLayout(new java.awt.GridBagLayout());

        panInstallment_MainPan.setMaximumSize(new java.awt.Dimension(400, 300));
        panInstallment_MainPan.setMinimumSize(new java.awt.Dimension(400, 300));
        panInstallment_MainPan.setPreferredSize(new java.awt.Dimension(400, 300));
        panAcctInfo.setLayout(new java.awt.GridBagLayout());

        panAcctInfo.setMinimumSize(new java.awt.Dimension(750, 110));
        panAcctInfo.setPreferredSize(new java.awt.Dimension(750, 110));
        lblBranches.setText("Branches");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 55, 4, 4);
        panAcctInfo.add(lblBranches, gridBagConstraints);

        cboProductID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select---" }));
        cboProductID.setMinimumSize(new java.awt.Dimension(100, 21));
        cboProductID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProductIDActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panAcctInfo.add(cboProductID, gridBagConstraints);

        btnOk.setText("Ok");
        btnOk.setMaximumSize(new java.awt.Dimension(59, 25));
        btnOk.setMinimumSize(new java.awt.Dimension(59, 25));
        btnOk.setPreferredSize(new java.awt.Dimension(59, 25));
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 35, 4, 4);
        panAcctInfo.add(btnOk, gridBagConstraints);

        lblProductID.setText("ProductID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 55, 4, 4);
        panAcctInfo.add(lblProductID, gridBagConstraints);

        cboBranches.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Select---" }));
        cboBranches.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panAcctInfo.add(cboBranches, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 4, 4);
        panInstallment_MainPan.add(panAcctInfo, gridBagConstraints);

        panSubmitBtn.setLayout(new java.awt.GridBagLayout());

        cProgressBar.setPreferredSize(new java.awt.Dimension(300, 16));
        panSubmitBtn.add(cProgressBar, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 25, 4, 4);
        panInstallment_MainPan.add(panSubmitBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(panInstallment_MainPan, gridBagConstraints);

        pack();
    }//GEN-END:initComponents
    
    private void cboProductIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProductIDActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboProductIDActionPerformed
    
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        try{
            String  branch =CommonUtil.convertObjToStr(((ComboBoxModel)cboBranches.getModel()).getKeyForSelected());
            String  productId=CommonUtil.convertObjToStr(((ComboBoxModel)cboProductID.getModel()).getKeyForSelected());
            if((!branch.equals("")) && (!productId.equals(""))){
                System.out.println("branch    "+branch+"productId   "+productId);
                 okAction();
            }else{
                ClientUtil.displayAlert("Choose Branch Id ");
                return;
            }
//               
            //        cProgressBar.setBackground(blue);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnOkActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        this.dispose();
    }//GEN-LAST:event_exitForm
    private void okAction()throws Exception{
        updateOBFields();
        //        javax.swing.ProgressMonitor pm = new javax.swing.ProgressMonitor();
        //        cProgressBar.
        observable.doAction();
    }
    /**l
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        NPAApplicationUI  npaApplication=new NPAApplicationUI();
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnOk;
    private com.see.truetransact.uicomponent.CProgressBar cProgressBar;
    private com.see.truetransact.uicomponent.CComboBox cboBranches;
    private com.see.truetransact.uicomponent.CComboBox cboProductID;
    private com.see.truetransact.uicomponent.CLabel lblBranches;
    private com.see.truetransact.uicomponent.CLabel lblProductID;
    private com.see.truetransact.uicomponent.CPanel panAcctInfo;
    private com.see.truetransact.uicomponent.CPanel panInstallment_MainPan;
    private com.see.truetransact.uicomponent.CPanel panSubmitBtn;
    // End of variables declaration//GEN-END:variables
    
}
