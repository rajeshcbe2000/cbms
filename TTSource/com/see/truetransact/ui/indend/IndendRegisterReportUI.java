/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
 * 
 * IndendRegisterReportUI.java
 *
 * Created on September 12, 2011, 12:08 PM
 */

package com.see.truetransact.ui.indend;
import javax.swing.table.DefaultTableModel;
import java.util.*;
import java.text.*;
import com.see.truetransact.uimandatory.UIMandatoryField;
import com.see.truetransact.clientexception.ClientParseException;
import com.see.truetransact.clientutil.ClientConstants;
import java.util.Observable;
import com.see.truetransact.uicomponent.COptionPane;
import java.math.BigDecimal;
import com.see.truetransact.clientutil.ttrintegration.TTIntegration;
import com.see.truetransact.clientutil.ClientUtil;
import java.util.Observer;
import com.see.truetransact.clientutil.CMandatoryDialog;
import com.see.truetransact.ui.common.authorizestatus.AuthorizeStatusUI;
import com.see.truetransact.ui.TrueTransactMain;
import java.util.HashMap;
import java.util.ArrayList;

import com.see.truetransact.ui.common.viewall.ViewAll;
import java.util.ResourceBundle;
import com.see.truetransact.uimandatory.MandatoryCheck;
import com.see.truetransact.commonutil.CommonConstants;
import com.see.truetransact.commonutil.CommonUtil;
import com.see.truetransact.commonutil.DateUtil;
import com.see.truetransact.clientproxy.ProxyParameters;
import com.see.truetransact.uicomponent.CInternalFrame;
import com.see.truetransact.uivalidation.CurrencyValidation;
import com.see.truetransact.uivalidation.NumericValidation;
import java.util.Date;
import javax.swing.table.*;
import java.awt.event.*;
import javax.swing.event.*;
import javax.swing.SwingConstants;
import com.see.truetransact.ui.common.transaction.TransactionUI;
/**
 *
 * @author  userdd
 */
public class IndendRegisterReportUI extends CInternalFrame {
    private String viewType = "";//Variable used to store ActionType(New,Edit,Delete)
    
    /** Creates new form ifrNewBorrowing */
    public IndendRegisterReportUI() {
        ProxyParameters.BRANCH_ID = ProxyParameters.BRANCH_ID;
        setSelectedBranchID(ProxyParameters.BRANCH_ID);
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        panIndend = new com.see.truetransact.uicomponent.CPanel();
        lblStoreNo = new com.see.truetransact.uicomponent.CLabel();
        txtStoreNo = new com.see.truetransact.uicomponent.CTextField();
        btnStoreNo = new com.see.truetransact.uicomponent.CButton();
        lblStoreName = new com.see.truetransact.uicomponent.CLabel();
        lblDepoId = new com.see.truetransact.uicomponent.CLabel();
        txtDepoId = new com.see.truetransact.uicomponent.CTextField();
        btnDepoId = new com.see.truetransact.uicomponent.CButton();
        lblDepoName = new com.see.truetransact.uicomponent.CLabel();
        lblFromDate = new com.see.truetransact.uicomponent.CLabel();
        tdtFromDate = new com.see.truetransact.uicomponent.CDateField();
        lblToDate = new com.see.truetransact.uicomponent.CLabel();
        tdtToDate = new com.see.truetransact.uicomponent.CDateField();
        panButtons = new com.see.truetransact.uicomponent.CPanel();
        btnPrint = new com.see.truetransact.uicomponent.CButton();
        btnClose = new com.see.truetransact.uicomponent.CButton();
        btnClear = new com.see.truetransact.uicomponent.CButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setDoubleBuffered(true);
        setFont(new java.awt.Font("Times New Roman", 0, 10));
        setMaximumSize(new java.awt.Dimension(350, 350));
        setMinimumSize(new java.awt.Dimension(350, 350));
        setPreferredSize(new java.awt.Dimension(350, 350));
        panIndend.setLayout(new java.awt.GridBagLayout());

        panIndend.setMaximumSize(new java.awt.Dimension(290, 220));
        panIndend.setMinimumSize(new java.awt.Dimension(290, 220));
        panIndend.setPreferredSize(new java.awt.Dimension(290, 220));
        lblStoreNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblStoreNo.setText("Store No");
        lblStoreNo.setMaximumSize(new java.awt.Dimension(90, 16));
        lblStoreNo.setMinimumSize(new java.awt.Dimension(90, 16));
        lblStoreNo.setPreferredSize(new java.awt.Dimension(90, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panIndend.add(lblStoreNo, gridBagConstraints);

        txtStoreNo.setEditable(false);
        txtStoreNo.setAllowAll(true);
        txtStoreNo.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panIndend.add(txtStoreNo, gridBagConstraints);

        btnStoreNo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_SELECT.gif")));
        btnStoreNo.setToolTipText("Search");
        btnStoreNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStoreNoActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panIndend.add(btnStoreNo, gridBagConstraints);

        lblStoreName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblStoreName.setMaximumSize(new java.awt.Dimension(90, 16));
        lblStoreName.setMinimumSize(new java.awt.Dimension(90, 16));
        lblStoreName.setPreferredSize(new java.awt.Dimension(90, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panIndend.add(lblStoreName, gridBagConstraints);

        lblDepoId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDepoId.setText("Depo Id");
        lblDepoId.setMaximumSize(new java.awt.Dimension(90, 16));
        lblDepoId.setMinimumSize(new java.awt.Dimension(90, 16));
        lblDepoId.setPreferredSize(new java.awt.Dimension(90, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panIndend.add(lblDepoId, gridBagConstraints);

        txtDepoId.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panIndend.add(txtDepoId, gridBagConstraints);

        btnDepoId.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_SELECT.gif")));
        btnDepoId.setToolTipText("Search");
        btnDepoId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepoIdActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panIndend.add(btnDepoId, gridBagConstraints);

        lblDepoName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDepoName.setMaximumSize(new java.awt.Dimension(90, 16));
        lblDepoName.setMinimumSize(new java.awt.Dimension(90, 16));
        lblDepoName.setPreferredSize(new java.awt.Dimension(90, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panIndend.add(lblDepoName, gridBagConstraints);

        lblFromDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFromDate.setText("From Date");
        lblFromDate.setMaximumSize(new java.awt.Dimension(90, 16));
        lblFromDate.setMinimumSize(new java.awt.Dimension(90, 16));
        lblFromDate.setPreferredSize(new java.awt.Dimension(90, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panIndend.add(lblFromDate, gridBagConstraints);

        tdtFromDate.setMinimumSize(new java.awt.Dimension(100, 21));
        tdtFromDate.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panIndend.add(tdtFromDate, gridBagConstraints);

        lblToDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblToDate.setText("To Date");
        lblToDate.setMaximumSize(new java.awt.Dimension(90, 16));
        lblToDate.setMinimumSize(new java.awt.Dimension(90, 16));
        lblToDate.setPreferredSize(new java.awt.Dimension(90, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panIndend.add(lblToDate, gridBagConstraints);

        tdtToDate.setMinimumSize(new java.awt.Dimension(100, 21));
        tdtToDate.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panIndend.add(tdtToDate, gridBagConstraints);

        panButtons.setLayout(new java.awt.GridBagLayout());

        panButtons.setMinimumSize(new java.awt.Dimension(280, 28));
        panButtons.setPreferredSize(new java.awt.Dimension(280, 28));
        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 6);
        panButtons.add(btnPrint, gridBagConstraints);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        panButtons.add(btnClose, gridBagConstraints);

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        panButtons.add(btnClear, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        panIndend.add(panButtons, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(panIndend, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        cifClosingAlert();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtStoreNo.setText("");
        txtDepoId.setText("");
        lblStoreName.setText("");
        lblDepoName.setText("");
        tdtFromDate.setDateValue("");
        tdtToDate.setDateValue("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        String mandatoryMessage = "";
        if (CommonUtil.convertObjToStr(lblStoreName.getText()).equals("")) {
            mandatoryMessage+="Store Not Selected\n";
        }
        if (CommonUtil.convertObjToStr(lblDepoName.getText()).equals("")) {
            mandatoryMessage+="Depo Not Selected\n";
        }
        if (CommonUtil.convertObjToStr(tdtFromDate.getDateValue()).equals("")) {
            mandatoryMessage+="From Date Not Entered\n";
        }
        if (CommonUtil.convertObjToStr(tdtToDate.getDateValue()).equals("")) {
            mandatoryMessage+="To Date Not Entered\n";
        }
        if (mandatoryMessage.length()>0) {
            mandatoryMessage+="\nReport can't open...";
            ClientUtil.showMessageWindow(mandatoryMessage);
        } else {
            TTIntegration ttIntgration = null;
            HashMap paramMap = new HashMap();
            paramMap.put("StoreName", lblStoreName.getText());
            paramMap.put("DepoName", lblDepoName.getText());
            paramMap.put("FromDate", DateUtil.getDateMMDDYYYY(tdtFromDate.getDateValue()));
            paramMap.put("ToDate", DateUtil.getDateMMDDYYYY(tdtToDate.getDateValue()));
            ttIntgration.setParam(paramMap);
            ttIntgration.integrationForPrint("indendregister", true);
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnStoreNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStoreNoActionPerformed
        // TODO add your handling code here:
        callView("STORE");
    }//GEN-LAST:event_btnStoreNoActionPerformed
    
    private void btnDepoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepoIdActionPerformed
        // TODO add your handling code here:
         callView("DEPO");
    }//GEN-LAST:event_btnDepoIdActionPerformed

    /* Method used to showPopup ViewAll by Executing a Query */
    private void callView(String currField) {
        viewType = currField;
        HashMap viewMap = new HashMap();
        HashMap where = new HashMap();
        if(viewType.equals("STORE")) {
            viewMap.put(CommonConstants.MAP_NAME, "Store.getSelectStoreList");
        } else if(viewType.equals("DEPO")) {
            viewMap.put(CommonConstants.MAP_NAME, "getDepoListForStore");
            where.put("STORE_ID", txtStoreNo.getText());
        }
        where.put("BRANCH_ID", ProxyParameters.BRANCH_ID);
        viewMap.put(CommonConstants.MAP_WHERE, where);
        where = null;
        new ViewAll(this,viewMap).show();
        
    }
    
    public void fillData(Object  map) {
        
        //        setModified(true);
        HashMap hash = (HashMap) map;
        if(viewType.equals("STORE")) {
            txtStoreNo.setText(CommonUtil.convertObjToStr(hash.get("STNUMBER")));
            lblStoreName.setText(CommonUtil.convertObjToStr(hash.get("NAME")));
        } else if(viewType.equals("DEPO")) {
            txtDepoId.setText(CommonUtil.convertObjToStr(hash.get("DEPID")));
            lblDepoName.setText(CommonUtil.convertObjToStr(hash.get("DEPO_NAME")));
        }

        
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnClear;
    private com.see.truetransact.uicomponent.CButton btnClose;
    private com.see.truetransact.uicomponent.CButton btnDepoId;
    private com.see.truetransact.uicomponent.CButton btnPrint;
    private com.see.truetransact.uicomponent.CButton btnStoreNo;
    private com.see.truetransact.uicomponent.CLabel lblDepoId;
    private com.see.truetransact.uicomponent.CLabel lblDepoName;
    private com.see.truetransact.uicomponent.CLabel lblFromDate;
    private com.see.truetransact.uicomponent.CLabel lblStoreName;
    private com.see.truetransact.uicomponent.CLabel lblStoreNo;
    private com.see.truetransact.uicomponent.CLabel lblToDate;
    private com.see.truetransact.uicomponent.CPanel panButtons;
    private com.see.truetransact.uicomponent.CPanel panIndend;
    private com.see.truetransact.uicomponent.CDateField tdtFromDate;
    private com.see.truetransact.uicomponent.CDateField tdtToDate;
    private com.see.truetransact.uicomponent.CTextField txtDepoId;
    private com.see.truetransact.uicomponent.CTextField txtStoreNo;
    // End of variables declaration//GEN-END:variables
    //     private com.see.truetransact.uicomponent.CTable tblData;
    private com.see.truetransact.clientutil.TableModel tbModel;
}
