/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
 * 
 * TellerAcceptanceUI.java
 *
 * Created on February 20, 2004, 6:13 PM
 */

package com.see.truetransact.ui.forex;

/**
 *
 * @author  Hemant
 */
import java.util.HashMap;
import java.util.ArrayList;

import com.see.truetransact.clientutil.ClientUtil;
import com.see.truetransact.commonutil.CommonConstants;
import com.see.truetransact.clientutil.TableModel;
import java.util.Observer;
import java.util.Observable;

public class TellerAcceptanceUI extends com.see.truetransact.uicomponent.CInternalFrame implements Observer{
    
    /** Creates new form BeanForm */
    private TellerAcceptanceOB observable;
    private TableModel tbmDetails;
    
    public TellerAcceptanceUI() {
        initComponents();
        setObservable();
        observable.getData();
        initTable();
    }
 
    private void initTable(){
        tbmDetails = observable.getTbmDetails();
        tblDetails.setModel(tbmDetails);
        
    }
    
    private void setObservable() {
            observable = TellerAcceptanceOB.getInstance();
            observable.addObserver(this);
    }
    
    public void update(Observable observed, Object arg) {
        tbmDetails = observable.getTbmDetails();
        tblDetails.setModel(tbmDetails);
    }
    
    public void updateOBFields(){
        observable.setTbmDetails(tbmDetails);
    }
    
    public static void main(String[] arg){
        TellerAcceptanceUI ta = new TellerAcceptanceUI();
        com.see.truetransact.uicomponent.CFrame cf = new com.see.truetransact.uicomponent.CFrame();
        cf.getContentPane().add(ta);
        ta.show();
        cf.show();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        panMain = new com.see.truetransact.uicomponent.CPanel();
        srpDetails = new com.see.truetransact.uicomponent.CScrollPane();
        tblDetails = new com.see.truetransact.uicomponent.CTable();
        panButton = new com.see.truetransact.uicomponent.CPanel();
        btnReceived = new com.see.truetransact.uicomponent.CButton();
        btnCancel = new com.see.truetransact.uicomponent.CButton();

        panMain.setLayout(new java.awt.BorderLayout());

        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        srpDetails.setViewportView(tblDetails);

        panMain.add(srpDetails, java.awt.BorderLayout.CENTER);

        panButton.setLayout(new java.awt.GridBagLayout());

        btnReceived.setText("Received");
        btnReceived.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceivedActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panButton.add(btnReceived, gridBagConstraints);

        btnCancel.setText("Close");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panButton.add(btnCancel, gridBagConstraints);

        panMain.add(panButton, java.awt.BorderLayout.SOUTH);

        getContentPane().add(panMain, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
        // Add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnReceivedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceivedActionPerformed
        updateOBFields();
        observable.doAction();
        // Add your handling code here:
    }//GEN-LAST:event_btnReceivedActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnCancel;
    private com.see.truetransact.uicomponent.CButton btnReceived;
    private com.see.truetransact.uicomponent.CPanel panButton;
    private com.see.truetransact.uicomponent.CPanel panMain;
    private com.see.truetransact.uicomponent.CScrollPane srpDetails;
    private com.see.truetransact.uicomponent.CTable tblDetails;
    // End of variables declaration//GEN-END:variables
    
}
