/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
 * 
 * ChargeConfigUI.java
 *
 * Created on January 18, 2005, 3:38 PM
 */

package com.see.truetransact.ui.common.charges;

/**
 *
 * @author  ashokvijayakumar
 */
import com.see.truetransact.uicomponent.CInternalFrame;

public class ChargeConfigUI extends javax.swing.JInternalFrame {
    
    /** Creates new form ChargeConfigUI */
    public ChargeConfigUI() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        rdoExecutionType = new com.see.truetransact.uicomponent.CButtonGroup();
        rdoChargeOn = new com.see.truetransact.uicomponent.CButtonGroup();
        panChargeConfig = new com.see.truetransact.uicomponent.CPanel();
        tabChargeConfig = new com.see.truetransact.uicomponent.CTabbedPane();
        panCharges = new com.see.truetransact.uicomponent.CPanel();
        panCharge = new com.see.truetransact.uicomponent.CPanel();
        lblChargeId = new com.see.truetransact.uicomponent.CLabel();
        lblChargeIdValue = new com.see.truetransact.uicomponent.CLabel();
        lblChargeDescription = new com.see.truetransact.uicomponent.CLabel();
        lblChargeType = new com.see.truetransact.uicomponent.CLabel();
        lblExecutionType = new com.see.truetransact.uicomponent.CLabel();
        lblProductType = new com.see.truetransact.uicomponent.CLabel();
        txtChargeDescription = new com.see.truetransact.uicomponent.CTextField();
        cboChargeType = new com.see.truetransact.uicomponent.CComboBox();
        panExecutionType = new com.see.truetransact.uicomponent.CPanel();
        chkBatch = new com.see.truetransact.uicomponent.CCheckBox();
        chkEvent = new com.see.truetransact.uicomponent.CCheckBox();
        cboProductType = new com.see.truetransact.uicomponent.CComboBox();
        panGroupData = new com.see.truetransact.uicomponent.CPanel();
        srpProduct = new com.see.truetransact.uicomponent.CScrollPane();
        tblProduct = new com.see.truetransact.uicomponent.CTable();
        srpCategory = new com.see.truetransact.uicomponent.CScrollPane();
        tblCategory = new com.see.truetransact.uicomponent.CTable();
        panFrequency = new com.see.truetransact.uicomponent.CPanel();
        lblAccountHead = new com.see.truetransact.uicomponent.CLabel();
        lblCalculationFrequency = new com.see.truetransact.uicomponent.CLabel();
        lblApplicationFrequency = new com.see.truetransact.uicomponent.CLabel();
        lblLastCalculationDate = new com.see.truetransact.uicomponent.CLabel();
        lblLastApplicationDate = new com.see.truetransact.uicomponent.CLabel();
        panAccountHead = new com.see.truetransact.uicomponent.CPanel();
        txtAccountHead = new com.see.truetransact.uicomponent.CTextField();
        btnAccountHead = new com.see.truetransact.uicomponent.CButton();
        cboCalculationFrequency = new com.see.truetransact.uicomponent.CComboBox();
        cboApplicationFrequency = new com.see.truetransact.uicomponent.CComboBox();
        tdtLastCalculatedDate = new com.see.truetransact.uicomponent.CDateField();
        tdtLastApplicationDate = new com.see.truetransact.uicomponent.CDateField();
        panEvents = new com.see.truetransact.uicomponent.CPanel();
        chkAccountOpen = new com.see.truetransact.uicomponent.CCheckBox();
        chkAccountClose = new com.see.truetransact.uicomponent.CCheckBox();
        panTransaction = new com.see.truetransact.uicomponent.CPanel();
        panCreditDebit = new com.see.truetransact.uicomponent.CPanel();
        lblClearing = new com.see.truetransact.uicomponent.CLabel();
        lblTransfer = new com.see.truetransact.uicomponent.CLabel();
        lblCash = new com.see.truetransact.uicomponent.CLabel();
        chkDebitClearing = new com.see.truetransact.uicomponent.CCheckBox();
        chkDebitTransfer = new com.see.truetransact.uicomponent.CCheckBox();
        chkDebitCash = new com.see.truetransact.uicomponent.CCheckBox();
        chkCreditClearing = new com.see.truetransact.uicomponent.CCheckBox();
        chkCreditTransfer = new com.see.truetransact.uicomponent.CCheckBox();
        chkCreditCash = new com.see.truetransact.uicomponent.CCheckBox();
        spt1 = new com.see.truetransact.uicomponent.CSeparator();
        spt3 = new com.see.truetransact.uicomponent.CSeparator();
        spt2 = new com.see.truetransact.uicomponent.CSeparator();
        spt4 = new com.see.truetransact.uicomponent.CSeparator();
        spt5 = new com.see.truetransact.uicomponent.CSeparator();
        spt6 = new com.see.truetransact.uicomponent.CSeparator();
        spt7 = new com.see.truetransact.uicomponent.CSeparator();
        lblCredit = new com.see.truetransact.uicomponent.CLabel();
        lblDebit = new com.see.truetransact.uicomponent.CLabel();
        panChargeDescription = new com.see.truetransact.uicomponent.CPanel();
        lblToChargeOn = new com.see.truetransact.uicomponent.CLabel();
        lblTransacionCount = new com.see.truetransact.uicomponent.CLabel();
        panChargeOn = new com.see.truetransact.uicomponent.CPanel();
        chkSystem = new com.see.truetransact.uicomponent.CCheckBox();
        chkManual = new com.see.truetransact.uicomponent.CCheckBox();
        panTransactionCount = new com.see.truetransact.uicomponent.CPanel();
        cboTransactionCount = new com.see.truetransact.uicomponent.CComboBox();
        txtTransactionCount = new com.see.truetransact.uicomponent.CTextField();
        tbrHead = new javax.swing.JToolBar();
        btnNew = new com.see.truetransact.uicomponent.CButton();
        btnEdit = new com.see.truetransact.uicomponent.CButton();
        btnDelete = new com.see.truetransact.uicomponent.CButton();
        lblSpace2 = new com.see.truetransact.uicomponent.CLabel();
        btnSave = new com.see.truetransact.uicomponent.CButton();
        btnCancel = new com.see.truetransact.uicomponent.CButton();
        lblSpace3 = new com.see.truetransact.uicomponent.CLabel();
        btnAuthorize = new com.see.truetransact.uicomponent.CButton();
        btnReject = new com.see.truetransact.uicomponent.CButton();
        btnException = new com.see.truetransact.uicomponent.CButton();
        lblSpace4 = new com.see.truetransact.uicomponent.CLabel();
        btnPrint = new com.see.truetransact.uicomponent.CButton();
        btnClose = new com.see.truetransact.uicomponent.CButton();
        panStatus = new com.see.truetransact.uicomponent.CPanel();
        lblSpace1 = new com.see.truetransact.uicomponent.CLabel();
        lblStatus = new com.see.truetransact.uicomponent.CLabel();
        lblMsg = new com.see.truetransact.uicomponent.CLabel();
        mbrMain = new com.see.truetransact.uicomponent.CMenuBar();
        mnuProcess = new javax.swing.JMenu();
        mitNew = new javax.swing.JMenuItem();
        mitEdit = new javax.swing.JMenuItem();
        mitDelete = new javax.swing.JMenuItem();
        sptDelete = new javax.swing.JSeparator();
        mitSave = new javax.swing.JMenuItem();
        mitCancel = new javax.swing.JMenuItem();
        sptCancel = new javax.swing.JSeparator();
        mitClose = new javax.swing.JMenuItem();

        panChargeConfig.setLayout(new java.awt.GridBagLayout());

        panCharges.setLayout(new java.awt.GridBagLayout());

        panCharge.setLayout(new java.awt.GridBagLayout());

        lblChargeId.setText("Charge Id");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCharge.add(lblChargeId, gridBagConstraints);

        lblChargeIdValue.setMinimumSize(new java.awt.Dimension(100, 21));
        lblChargeIdValue.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panCharge.add(lblChargeIdValue, gridBagConstraints);

        lblChargeDescription.setText("Charge Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCharge.add(lblChargeDescription, gridBagConstraints);

        lblChargeType.setText("Charge Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCharge.add(lblChargeType, gridBagConstraints);

        lblExecutionType.setText("Execution Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 96, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCharge.add(lblExecutionType, gridBagConstraints);

        lblProductType.setText("Product Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCharge.add(lblProductType, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panCharge.add(txtChargeDescription, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panCharge.add(cboChargeType, gridBagConstraints);

        panExecutionType.setLayout(new java.awt.GridBagLayout());

        chkBatch.setText("Batch");
        panExecutionType.add(chkBatch, new java.awt.GridBagConstraints());

        chkEvent.setText("Event");
        panExecutionType.add(chkEvent, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panCharge.add(panExecutionType, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panCharge.add(cboProductType, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panCharges.add(panCharge, gridBagConstraints);

        panGroupData.setLayout(new java.awt.GridBagLayout());

        panGroupData.setBorder(new javax.swing.border.TitledBorder("Group Data"));
        srpProduct.setMinimumSize(new java.awt.Dimension(300, 150));
        srpProduct.setPreferredSize(new java.awt.Dimension(300, 150));
        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Check", "Product ID", "Product Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        srpProduct.setViewportView(tblProduct);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panGroupData.add(srpProduct, gridBagConstraints);

        srpCategory.setMinimumSize(new java.awt.Dimension(300, 150));
        srpCategory.setPreferredSize(new java.awt.Dimension(300, 150));
        tblCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Check", "Category", "Category Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        srpCategory.setViewportView(tblCategory);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panGroupData.add(srpCategory, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        panCharges.add(panGroupData, gridBagConstraints);

        panFrequency.setLayout(new java.awt.GridBagLayout());

        lblAccountHead.setText("Account Head");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panFrequency.add(lblAccountHead, gridBagConstraints);

        lblCalculationFrequency.setText("Calculation Frequency");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panFrequency.add(lblCalculationFrequency, gridBagConstraints);

        lblApplicationFrequency.setText("Application Frequency");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panFrequency.add(lblApplicationFrequency, gridBagConstraints);

        lblLastCalculationDate.setText("Last Caluclation Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 96, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panFrequency.add(lblLastCalculationDate, gridBagConstraints);

        lblLastApplicationDate.setText("Last Application Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panFrequency.add(lblLastApplicationDate, gridBagConstraints);

        panAccountHead.setLayout(new java.awt.GridBagLayout());

        panAccountHead.add(txtAccountHead, new java.awt.GridBagConstraints());

        btnAccountHead.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_SELECT.gif")));
        btnAccountHead.setMaximumSize(new java.awt.Dimension(21, 21));
        btnAccountHead.setMinimumSize(new java.awt.Dimension(21, 21));
        btnAccountHead.setPreferredSize(new java.awt.Dimension(21, 21));
        btnAccountHead.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panAccountHead.add(btnAccountHead, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panFrequency.add(panAccountHead, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panFrequency.add(cboCalculationFrequency, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panFrequency.add(cboApplicationFrequency, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panFrequency.add(tdtLastCalculatedDate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panFrequency.add(tdtLastApplicationDate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panCharges.add(panFrequency, gridBagConstraints);

        tabChargeConfig.addTab("Charges", panCharges);

        panEvents.setLayout(new java.awt.GridBagLayout());

        chkAccountOpen.setText("Account Open");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panEvents.add(chkAccountOpen, gridBagConstraints);

        chkAccountClose.setText("Account Close");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panEvents.add(chkAccountClose, gridBagConstraints);

        panTransaction.setLayout(new java.awt.GridBagLayout());

        panTransaction.setBorder(new javax.swing.border.TitledBorder("Transaction"));
        panCreditDebit.setLayout(new java.awt.GridBagLayout());

        panCreditDebit.setName("cPanel_Five");
        lblClearing.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClearing.setText("Clearing");
        lblClearing.setMaximumSize(new java.awt.Dimension(42, 15));
        lblClearing.setMinimumSize(new java.awt.Dimension(42, 15));
        lblClearing.setName("lblClearing");
        lblClearing.setPreferredSize(new java.awt.Dimension(42, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCreditDebit.add(lblClearing, gridBagConstraints);

        lblTransfer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTransfer.setText("Transfer");
        lblTransfer.setName("lblTransfer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCreditDebit.add(lblTransfer, gridBagConstraints);

        lblCash.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCash.setText("Cash");
        lblCash.setMaximumSize(new java.awt.Dimension(42, 15));
        lblCash.setMinimumSize(new java.awt.Dimension(42, 15));
        lblCash.setName("lblCash");
        lblCash.setPreferredSize(new java.awt.Dimension(42, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCreditDebit.add(lblCash, gridBagConstraints);

        chkDebitClearing.setName("chkDebitClearing");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCreditDebit.add(chkDebitClearing, gridBagConstraints);

        chkDebitTransfer.setName("chkCreditTransfer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCreditDebit.add(chkDebitTransfer, gridBagConstraints);

        chkDebitCash.setName("chkCreditCash");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCreditDebit.add(chkDebitCash, gridBagConstraints);

        chkCreditClearing.setName("chkDebitClearing");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCreditDebit.add(chkCreditClearing, gridBagConstraints);

        chkCreditTransfer.setName("chkDebitTransfer");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCreditDebit.add(chkCreditTransfer, gridBagConstraints);

        chkCreditCash.setName("chkDebitCash");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panCreditDebit.add(chkCreditCash, gridBagConstraints);

        spt1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        panCreditDebit.add(spt1, gridBagConstraints);

        spt3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        panCreditDebit.add(spt3, gridBagConstraints);

        spt2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        panCreditDebit.add(spt2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panCreditDebit.add(spt4, gridBagConstraints);

        spt5.setOrientation(javax.swing.SwingConstants.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        panCreditDebit.add(spt5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panCreditDebit.add(spt6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panCreditDebit.add(spt7, gridBagConstraints);

        lblCredit.setText("Credit");
        lblCredit.setName("lblCredit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 80, 4, 8);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCreditDebit.add(lblCredit, gridBagConstraints);

        lblDebit.setText("Debit");
        lblDebit.setName("lblDebit");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(4, 80, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panCreditDebit.add(lblDebit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panTransaction.add(panCreditDebit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panEvents.add(panTransaction, gridBagConstraints);

        panChargeDescription.setLayout(new java.awt.GridBagLayout());

        lblToChargeOn.setText("To Charge On");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panChargeDescription.add(lblToChargeOn, gridBagConstraints);

        lblTransacionCount.setText("Put Charge for Transaction Count");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        panChargeDescription.add(lblTransacionCount, gridBagConstraints);

        panChargeOn.setLayout(new java.awt.GridBagLayout());

        chkSystem.setText("System");
        panChargeOn.add(chkSystem, new java.awt.GridBagConstraints());

        chkManual.setText("Manual");
        panChargeOn.add(chkManual, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panChargeDescription.add(panChargeOn, gridBagConstraints);

        panTransactionCount.setLayout(new java.awt.GridBagLayout());

        panTransactionCount.add(cboTransactionCount, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        panTransactionCount.add(txtTransactionCount, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panChargeDescription.add(panTransactionCount, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panEvents.add(panChargeDescription, gridBagConstraints);

        tabChargeConfig.addTab("Events", panEvents);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panChargeConfig.add(tabChargeConfig, gridBagConstraints);

        getContentPane().add(panChargeConfig, java.awt.BorderLayout.CENTER);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_NEW.gif")));
        btnNew.setToolTipText("New");
        btnNew.setEnabled(false);
        tbrHead.add(btnNew);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_EDIT.gif")));
        btnEdit.setToolTipText("Edit");
        btnEdit.setEnabled(false);
        tbrHead.add(btnEdit);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_DELETE.gif")));
        btnDelete.setToolTipText("Delete");
        btnDelete.setEnabled(false);
        tbrHead.add(btnDelete);

        lblSpace2.setText("     ");
        tbrHead.add(lblSpace2);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_SAVE.gif")));
        btnSave.setToolTipText("Save");
        tbrHead.add(btnSave);

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_CANCEL.gif")));
        btnCancel.setToolTipText("Cancel");
        tbrHead.add(btnCancel);

        lblSpace3.setText("     ");
        tbrHead.add(lblSpace3);

        btnAuthorize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_AUTHORIZE.gif")));
        btnAuthorize.setToolTipText("Authorize");
        tbrHead.add(btnAuthorize);

        btnReject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_REJECT.gif")));
        btnReject.setToolTipText("Reject");
        tbrHead.add(btnReject);

        btnException.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_EXCEPTION.gif")));
        btnException.setToolTipText("Exception");
        tbrHead.add(btnException);

        lblSpace4.setText("     ");
        tbrHead.add(lblSpace4);

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_PRINT.gif")));
        btnPrint.setToolTipText("Print");
        tbrHead.add(btnPrint);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_CLOSE.gif")));
        btnClose.setToolTipText("Close");
        tbrHead.add(btnClose);

        getContentPane().add(tbrHead, java.awt.BorderLayout.NORTH);

        panStatus.setLayout(new java.awt.GridBagLayout());

        lblSpace1.setText(" Status :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        panStatus.add(lblSpace1, gridBagConstraints);

        lblStatus.setBorder(new javax.swing.border.EtchedBorder());
        lblStatus.setText("                      ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        panStatus.add(lblStatus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panStatus.add(lblMsg, gridBagConstraints);

        getContentPane().add(panStatus, java.awt.BorderLayout.SOUTH);

        mnuProcess.setText("Process");
        mitNew.setText("New");
        mnuProcess.add(mitNew);

        mitEdit.setText("Edit");
        mnuProcess.add(mitEdit);

        mitDelete.setText("Delete");
        mnuProcess.add(mitDelete);

        mnuProcess.add(sptDelete);

        mitSave.setText("Save");
        mnuProcess.add(mitSave);

        mitCancel.setText("Cancel");
        mnuProcess.add(mitCancel);

        mnuProcess.add(sptCancel);

        mitClose.setText("Close");
        mnuProcess.add(mitClose);

        mbrMain.add(mnuProcess);

        setJMenuBar(mbrMain);

        pack();
    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnAccountHead;
    private com.see.truetransact.uicomponent.CButton btnAuthorize;
    private com.see.truetransact.uicomponent.CButton btnCancel;
    private com.see.truetransact.uicomponent.CButton btnClose;
    private com.see.truetransact.uicomponent.CButton btnDelete;
    private com.see.truetransact.uicomponent.CButton btnEdit;
    private com.see.truetransact.uicomponent.CButton btnException;
    private com.see.truetransact.uicomponent.CButton btnNew;
    private com.see.truetransact.uicomponent.CButton btnPrint;
    private com.see.truetransact.uicomponent.CButton btnReject;
    private com.see.truetransact.uicomponent.CButton btnSave;
    private com.see.truetransact.uicomponent.CComboBox cboApplicationFrequency;
    private com.see.truetransact.uicomponent.CComboBox cboCalculationFrequency;
    private com.see.truetransact.uicomponent.CComboBox cboChargeType;
    private com.see.truetransact.uicomponent.CComboBox cboProductType;
    private com.see.truetransact.uicomponent.CComboBox cboTransactionCount;
    private com.see.truetransact.uicomponent.CCheckBox chkAccountClose;
    private com.see.truetransact.uicomponent.CCheckBox chkAccountOpen;
    private com.see.truetransact.uicomponent.CCheckBox chkBatch;
    private com.see.truetransact.uicomponent.CCheckBox chkCreditCash;
    private com.see.truetransact.uicomponent.CCheckBox chkCreditClearing;
    private com.see.truetransact.uicomponent.CCheckBox chkCreditTransfer;
    private com.see.truetransact.uicomponent.CCheckBox chkDebitCash;
    private com.see.truetransact.uicomponent.CCheckBox chkDebitClearing;
    private com.see.truetransact.uicomponent.CCheckBox chkDebitTransfer;
    private com.see.truetransact.uicomponent.CCheckBox chkEvent;
    private com.see.truetransact.uicomponent.CCheckBox chkManual;
    private com.see.truetransact.uicomponent.CCheckBox chkSystem;
    private com.see.truetransact.uicomponent.CLabel lblAccountHead;
    private com.see.truetransact.uicomponent.CLabel lblApplicationFrequency;
    private com.see.truetransact.uicomponent.CLabel lblCalculationFrequency;
    private com.see.truetransact.uicomponent.CLabel lblCash;
    private com.see.truetransact.uicomponent.CLabel lblChargeDescription;
    private com.see.truetransact.uicomponent.CLabel lblChargeId;
    private com.see.truetransact.uicomponent.CLabel lblChargeIdValue;
    private com.see.truetransact.uicomponent.CLabel lblChargeType;
    private com.see.truetransact.uicomponent.CLabel lblClearing;
    private com.see.truetransact.uicomponent.CLabel lblCredit;
    private com.see.truetransact.uicomponent.CLabel lblDebit;
    private com.see.truetransact.uicomponent.CLabel lblExecutionType;
    private com.see.truetransact.uicomponent.CLabel lblLastApplicationDate;
    private com.see.truetransact.uicomponent.CLabel lblLastCalculationDate;
    private com.see.truetransact.uicomponent.CLabel lblMsg;
    private com.see.truetransact.uicomponent.CLabel lblProductType;
    private com.see.truetransact.uicomponent.CLabel lblSpace1;
    private com.see.truetransact.uicomponent.CLabel lblSpace2;
    private com.see.truetransact.uicomponent.CLabel lblSpace3;
    private com.see.truetransact.uicomponent.CLabel lblSpace4;
    private com.see.truetransact.uicomponent.CLabel lblStatus;
    private com.see.truetransact.uicomponent.CLabel lblToChargeOn;
    private com.see.truetransact.uicomponent.CLabel lblTransacionCount;
    private com.see.truetransact.uicomponent.CLabel lblTransfer;
    private com.see.truetransact.uicomponent.CMenuBar mbrMain;
    private javax.swing.JMenuItem mitCancel;
    private javax.swing.JMenuItem mitClose;
    private javax.swing.JMenuItem mitDelete;
    private javax.swing.JMenuItem mitEdit;
    private javax.swing.JMenuItem mitNew;
    private javax.swing.JMenuItem mitSave;
    private javax.swing.JMenu mnuProcess;
    private com.see.truetransact.uicomponent.CPanel panAccountHead;
    private com.see.truetransact.uicomponent.CPanel panCharge;
    private com.see.truetransact.uicomponent.CPanel panChargeConfig;
    private com.see.truetransact.uicomponent.CPanel panChargeDescription;
    private com.see.truetransact.uicomponent.CPanel panChargeOn;
    private com.see.truetransact.uicomponent.CPanel panCharges;
    private com.see.truetransact.uicomponent.CPanel panCreditDebit;
    private com.see.truetransact.uicomponent.CPanel panEvents;
    private com.see.truetransact.uicomponent.CPanel panExecutionType;
    private com.see.truetransact.uicomponent.CPanel panFrequency;
    private com.see.truetransact.uicomponent.CPanel panGroupData;
    private com.see.truetransact.uicomponent.CPanel panStatus;
    private com.see.truetransact.uicomponent.CPanel panTransaction;
    private com.see.truetransact.uicomponent.CPanel panTransactionCount;
    private com.see.truetransact.uicomponent.CButtonGroup rdoChargeOn;
    private com.see.truetransact.uicomponent.CButtonGroup rdoExecutionType;
    private com.see.truetransact.uicomponent.CSeparator spt1;
    private com.see.truetransact.uicomponent.CSeparator spt2;
    private com.see.truetransact.uicomponent.CSeparator spt3;
    private com.see.truetransact.uicomponent.CSeparator spt4;
    private com.see.truetransact.uicomponent.CSeparator spt5;
    private com.see.truetransact.uicomponent.CSeparator spt6;
    private com.see.truetransact.uicomponent.CSeparator spt7;
    private javax.swing.JSeparator sptCancel;
    private javax.swing.JSeparator sptDelete;
    private com.see.truetransact.uicomponent.CScrollPane srpCategory;
    private com.see.truetransact.uicomponent.CScrollPane srpProduct;
    private com.see.truetransact.uicomponent.CTabbedPane tabChargeConfig;
    private com.see.truetransact.uicomponent.CTable tblCategory;
    private com.see.truetransact.uicomponent.CTable tblProduct;
    private javax.swing.JToolBar tbrHead;
    private com.see.truetransact.uicomponent.CDateField tdtLastApplicationDate;
    private com.see.truetransact.uicomponent.CDateField tdtLastCalculatedDate;
    private com.see.truetransact.uicomponent.CTextField txtAccountHead;
    private com.see.truetransact.uicomponent.CTextField txtChargeDescription;
    private com.see.truetransact.uicomponent.CTextField txtTransactionCount;
    // End of variables declaration//GEN-END:variables
    
}
