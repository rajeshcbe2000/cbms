/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
 * 
 * AuthorizeWFCheckUI.java
 *
 * Created on January 13, 2004, 4:28 PM
 */

package com.see.truetransact.ui.common.authorizewf;

import java.util.ArrayList;
import java.util.HashMap;

import com.see.truetransact.clientutil.ClientUtil;
import com.see.truetransact.uicomponent.CLabel;
import com.see.truetransact.uicomponent.CTextField;

import com.see.truetransact.uivalidation.CurrencyValidation;

/**
 * @author  bala
 */
public class AuthorizeWFCheckUI extends com.see.truetransact.uicomponent.CDialog {
    private CTextField txtAcctNo[];
    private CTextField txtAmount[];
    private CLabel lblAcctNo[];
    private CLabel lblAmount[];
    
    private ArrayList arrChecked;
    private ArrayList arrUnChecked;
    
    /** Creates new form DenominationUI */
    public AuthorizeWFCheckUI(ArrayList param) {
        arrUnChecked = param;
        this.setModal(true);
        setupInit(param);
    }

    private void setupInit(ArrayList param) {
        initComponents();
        initAuthorizeCheckScreen (param);
        pack();
        ClientUtil.showDialog(this);
    }

    private void initAuthorizeCheckScreen (ArrayList param) {
        int lstSize = param.size();

        java.awt.GridBagConstraints gridBagConstraints;

        lblAcctNo = new CLabel[lstSize];
        lblAmount = new CLabel[lstSize];
        txtAcctNo = new CTextField[lstSize];
	txtAmount = new CTextField[lstSize];

        for (int i=0; i < lstSize; i++) {
            lblAcctNo[i] = new CLabel();
            lblAmount[i] = new CLabel();
            txtAcctNo[i] = new CTextField();
            txtAmount[i] = new CTextField();
            
            lblAcctNo[i].setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            lblAcctNo[i].setText("Account No.");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = i+1;
            gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
            panDenomination.add(lblAcctNo[i], gridBagConstraints);

            txtAcctNo[i].setPreferredSize(new java.awt.Dimension(100, 21));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = i+1;
            gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
            panDenomination.add(txtAcctNo[i], gridBagConstraints);
            
            lblAmount[i].setText("Amount");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = i+1;
            gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
            panDenomination.add(lblAmount[i], gridBagConstraints);

            txtAmount[i].setHorizontalAlignment(javax.swing.JTextField.RIGHT);
            txtAmount[i].setPreferredSize(new java.awt.Dimension(100, 21));
            txtAmount[i].setValidation(new CurrencyValidation(14, 2));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 3;
            gridBagConstraints.gridy = i+1;
            gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
            panDenomination.add(txtAmount[i], gridBagConstraints);
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        panDenomination = new com.see.truetransact.uicomponent.CPanel();
        panTop = new com.see.truetransact.uicomponent.CPanel();
        lblAuthorizeChk = new com.see.truetransact.uicomponent.CLabel();
        sptLine = new com.see.truetransact.uicomponent.CSeparator();
        panBottom = new com.see.truetransact.uicomponent.CPanel();
        btnOk = new com.see.truetransact.uicomponent.CButton();
        btnCancel = new com.see.truetransact.uicomponent.CButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        panDenomination.setLayout(new java.awt.GridBagLayout());

        getContentPane().add(panDenomination, java.awt.BorderLayout.CENTER);

        panTop.setLayout(new java.awt.GridBagLayout());

        lblAuthorizeChk.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAuthorizeChk.setText("Pls. enter following details for selected authorization records");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panTop.add(lblAuthorizeChk, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panTop.add(sptLine, gridBagConstraints);

        getContentPane().add(panTop, java.awt.BorderLayout.NORTH);

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        panBottom.add(btnOk);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        panBottom.add(btnCancel);

        getContentPane().add(panBottom, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // Add your handling code here:
        HashMap mapData;
        arrChecked = new ArrayList();
        for (int i=0, j=arrUnChecked.size(); i < j; i++) {
            mapData = (HashMap) arrUnChecked.get(i);
            System.out.println ("mapData :" + mapData);
            
            if (((String) mapData.get("ACCOUNT NO")).equalsIgnoreCase(txtAcctNo[i].getText()) &&
                ((String) mapData.get("AMOUNT")).equalsIgnoreCase(txtAmount[i].getText()))
                arrChecked.add(mapData);
        }
        
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // Add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        //System.exit(0);
        this.dispose();
    }//GEN-LAST:event_exitForm
    public ArrayList getCheckedAuthorizeList() {
        return arrChecked;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ArrayList map = new ArrayList();
        map.add("CURRENCY_TYPE");
        map.add("TRANS_TYPE");
        map.add("AMOUNT");
        map.add("AMOUNT");
        map.add("AMOUNT");

        AuthorizeWFCheckUI dui = new AuthorizeWFCheckUI(map);
        dui.show();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnCancel;
    private com.see.truetransact.uicomponent.CButton btnOk;
    private com.see.truetransact.uicomponent.CLabel lblAuthorizeChk;
    private com.see.truetransact.uicomponent.CPanel panBottom;
    private com.see.truetransact.uicomponent.CPanel panDenomination;
    private com.see.truetransact.uicomponent.CPanel panTop;
    private com.see.truetransact.uicomponent.CSeparator sptLine;
    // End of variables declaration//GEN-END:variables
}