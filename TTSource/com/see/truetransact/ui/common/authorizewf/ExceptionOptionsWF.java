/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
 * 
 * ExceptionOptionsWF.java
 *
 * Created on January 13, 2004, 4:28 PM
 */

package com.see.truetransact.ui.common.authorizewf;

import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;

import javax.swing.DefaultListModel;

import com.see.truetransact.clientutil.ClientUtil;
import com.see.truetransact.clientutil.CheckableItem;
import com.see.truetransact.clientutil.CheckableListCellRender;
import com.see.truetransact.uicomponent.CLabel;
import com.see.truetransact.uicomponent.CTextField;
import com.see.truetransact.ui.TrueTransactMain;
import com.see.truetransact.commonutil.CommonConstants;

/**
 * @author  bala
 */
public class ExceptionOptionsWF extends com.see.truetransact.uicomponent.CDialog {
    /** Creates new form ExceptionOptionsWF */
    public ExceptionOptionsWF() {
        this.setModal(true);
        setupInit();
    }
    
    private void setupInit() {
        initComponents();
        setListData();
        pack();
    }
    
    private void setListData() {
        lstUserList.setCellRenderer(new CheckableListCellRender());
        DefaultListModel lm = new DefaultListModel();
        HashMap where = new HashMap();
        where.put("BRANCH_CODE",CommonConstants.BRANCH_ID);
        List userList = ClientUtil.executeQuery("getAllUsersList", where);
        
        for (int i=0, j=userList.size(); i < j; i++) {
            lm.addElement(new CheckableItem(((HashMap)userList.get(i)).get("User id").toString()));
        }
        
        lstUserList.setModel(lm);
        lstUserList.repaint();
        
        lstUserList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                int index = lstUserList.locationToIndex(e.getPoint());
                CheckableItem item = (CheckableItem) lstUserList.getModel().getElementAt(index);
                item.setSelected(!item.isSelected());
                java.awt.Rectangle rect = lstUserList.getCellBounds(index, index);
                lstUserList.repaint(rect);
            }
        });
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        panDenomination = new com.see.truetransact.uicomponent.CPanel();
        scrUserList = new com.see.truetransact.uicomponent.CScrollPane();
        lstUserList = new com.see.truetransact.uicomponent.CList();
        panTop = new com.see.truetransact.uicomponent.CPanel();
        lblAuthorizeChk = new com.see.truetransact.uicomponent.CLabel();
        sptLine = new com.see.truetransact.uicomponent.CSeparator();
        panBottom = new com.see.truetransact.uicomponent.CPanel();
        btnOk = new com.see.truetransact.uicomponent.CButton();
        btnCancel = new com.see.truetransact.uicomponent.CButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        panDenomination.setLayout(new java.awt.GridBagLayout());

        scrUserList.setViewportView(lstUserList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panDenomination.add(scrUserList, gridBagConstraints);

        getContentPane().add(panDenomination, java.awt.BorderLayout.CENTER);

        panTop.setLayout(new java.awt.GridBagLayout());

        lblAuthorizeChk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAuthorizeChk.setText("Get Auhtorization from");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panTop.add(lblAuthorizeChk, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panTop.add(sptLine, gridBagConstraints);

        getContentPane().add(panTop, java.awt.BorderLayout.NORTH);

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        panBottom.add(btnOk);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        panBottom.add(btnCancel);

        getContentPane().add(panBottom, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents
    public ArrayList getSelectedList() {
        DefaultListModel listModel = (DefaultListModel) lstUserList.getModel();
        Object objCheckItems[] = listModel.toArray();
        ArrayList arrSelected = new ArrayList();
        for (int i=0, j = objCheckItems.length; i < j; i++) {
            if (((CheckableItem)objCheckItems[i]).isSelected()) {
                arrSelected.add(((CheckableItem)objCheckItems[i]).toString());
            }
        }
        return arrSelected;
    }
        private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed
            private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        this.dispose();
    }//GEN-LAST:event_exitForm
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ExceptionOptionsWF eow = new ExceptionOptionsWF();
        eow.show();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnCancel;
    private com.see.truetransact.uicomponent.CButton btnOk;
    private com.see.truetransact.uicomponent.CLabel lblAuthorizeChk;
    private com.see.truetransact.uicomponent.CList lstUserList;
    private com.see.truetransact.uicomponent.CPanel panBottom;
    private com.see.truetransact.uicomponent.CPanel panDenomination;
    private com.see.truetransact.uicomponent.CPanel panTop;
    private com.see.truetransact.uicomponent.CScrollPane scrUserList;
    private com.see.truetransact.uicomponent.CSeparator sptLine;
    // End of variables declaration//GEN-END:variables
}