/*
 * Copyright 2003-2020 FINCuro Solutions Pvt Ltd. All rights reserved.
 *
 * This software and its components are the property of FINCuro Solutions Pvt Limited and its affiliates, through authorship and acquisition. 
 * 
 * PrintTemplateUI.java
 *
 * Created on May 25, 2004, 5:18 PM
 */

package com.see.truetransact.ui.common.report;

import com.see.truetransact.clientutil.ClientConstants;
import com.see.truetransact.clientutil.ClientUtil;
import com.see.truetransact.clientutil.ComboBoxModel;
import com.see.truetransact.clientutil.CMandatoryDialog;
import com.see.truetransact.commonutil.CommonConstants;
import com.see.truetransact.commonutil.CommonUtil;
import com.see.truetransact.ui.common.viewall.ViewAll;
import com.see.truetransact.uicomponent.CInternalFrame;
import com.see.truetransact.uimandatory.MandatoryCheck;
import com.see.truetransact.uimandatory.UIMandatoryField;
import com.see.truetransact.uivalidation.CurrencyValidation;
import com.see.truetransact.ui.TrueTransactMain;
import com.see.truetransact.ui.common.authorize.AuthorizeUI;
import com.see.truetransact.clientproxy.ProxyParameters;
import com.see.truetransact.uivalidation.NumericValidation;
import com.see.truetransact.commonutil.DateUtil;
import com.see.truetransact.uicomponent.COptionPane;
import java.util.Date;
import java.util.HashMap;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JComponent;
import javax.swing.JFrame;
import java.util.List;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.awt.print.*;

/**
 *
 * @author  Sathiya
 */

public class PrintTemplateUI extends JFrame implements Printable {
    
    private HashMap mandatoryMap;
    
    private int viewType=-1;
    private boolean _intSalaryNew = false;
    private boolean _intDANew = false;
    private boolean _intHANew = false;
    private boolean _intMDNew = false;
    private boolean _intGNew = false;
//    private boolean _intHRANew = false;
    private boolean _intTANew = false;
    private boolean _intMANew = false;
    private boolean isFilled = false;
    private boolean salaryStructureSave = false;
    private boolean DASave = false;
    private boolean CCASave = false;
    private boolean HRASave = false;
    private boolean TASave = false;
    private boolean MASave = false;
    private boolean OASave = false;
    private boolean selectedSingleRow = false;
    private String fromDateAlert = "From date should not be empty";
    private String gradeAlert = "Grade should not be empty";
    private String designationAlert = "Designation should not be empty";
    int rowSelected = -1;
//    CInternalFrame frameToPrint;
    
    /** Creates new form BeanForm */
    public PrintTemplateUI() {
        initComponents();
        initSetUp();
    }
    private void initSetUp(){

        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        rdgStagnationIncrement = new com.see.truetransact.uicomponent.CButtonGroup();
        rdgHRAPayable = new com.see.truetransact.uicomponent.CButtonGroup();
        tbrMisecllaniousDeductions = new javax.swing.JToolBar();
        btnView = new com.see.truetransact.uicomponent.CButton();
        lblSpace5 = new com.see.truetransact.uicomponent.CLabel();
        btnNew = new com.see.truetransact.uicomponent.CButton();
        btnEdit = new com.see.truetransact.uicomponent.CButton();
        btnDelete = new com.see.truetransact.uicomponent.CButton();
        lblSpace2 = new com.see.truetransact.uicomponent.CLabel();
        btnSave = new com.see.truetransact.uicomponent.CButton();
        btnCancel = new com.see.truetransact.uicomponent.CButton();
        lblSpace3 = new com.see.truetransact.uicomponent.CLabel();
        btnAuthorize = new com.see.truetransact.uicomponent.CButton();
        btnReject = new com.see.truetransact.uicomponent.CButton();
        btnException = new com.see.truetransact.uicomponent.CButton();
        lblSpace4 = new com.see.truetransact.uicomponent.CLabel();
        btnPrint = new com.see.truetransact.uicomponent.CButton();
        btnClose = new com.see.truetransact.uicomponent.CButton();
        panStatus = new com.see.truetransact.uicomponent.CPanel();
        lblSpace1 = new com.see.truetransact.uicomponent.CLabel();
        lblStatus = new com.see.truetransact.uicomponent.CLabel();
        lblMsg = new com.see.truetransact.uicomponent.CLabel();
        panHaltingAllowanceInfo = new com.see.truetransact.uicomponent.CPanel();
        lblHaltingSLNO = new com.see.truetransact.uicomponent.CLabel();
        lblHaltingSLNOValue = new com.see.truetransact.uicomponent.CLabel();
        lblHaltingDesignation = new com.see.truetransact.uicomponent.CLabel();
        cboHaltingDesignationValue = new com.see.truetransact.uicomponent.CComboBox();
        lblHaltingFromDate = new com.see.truetransact.uicomponent.CLabel();
        tdtHaltingFromDateValue = new com.see.truetransact.uicomponent.CDateField();
        lblHaltingToDate = new com.see.truetransact.uicomponent.CLabel();
        tdtHaltingToDateValue = new com.see.truetransact.uicomponent.CDateField();
        panHaltingButtons = new com.see.truetransact.uicomponent.CPanel();
        btnHaltingNew = new com.see.truetransact.uicomponent.CButton();
        btnHaltingSave = new com.see.truetransact.uicomponent.CButton();
        btnHaltingDelete = new com.see.truetransact.uicomponent.CButton();
        txtHaltingPercentageValue = new com.see.truetransact.uicomponent.CTextField();
        lblHaltingPercentage = new com.see.truetransact.uicomponent.CLabel();
        lblHaltingFixedAmt = new com.see.truetransact.uicomponent.CLabel();
        txtHaltingFixedAmtValue = new com.see.truetransact.uicomponent.CTextField();
        lblHaltingParameterBasedon = new com.see.truetransact.uicomponent.CLabel();
        lblHaltingMaximumOf = new com.see.truetransact.uicomponent.CLabel();
        txtHaltingMaximumOfValue = new com.see.truetransact.uicomponent.CTextField();
        cboHaltingParameterBasedOnValue = new com.see.truetransact.uicomponent.CComboBox();
        lblHaltingSubParameter = new com.see.truetransact.uicomponent.CLabel();
        cboHaltingAllowanceTypeValue = new com.see.truetransact.uicomponent.CComboBox();
        lblHaltingllowanceType = new com.see.truetransact.uicomponent.CLabel();
        cboHaltingSubParameterValue = new com.see.truetransact.uicomponent.CComboBox();
        panHaltingDiem = new com.see.truetransact.uicomponent.CPanel();
        lblOAFixed = new com.see.truetransact.uicomponent.CLabel();
        chkHaltingFixedValue = new com.see.truetransact.uicomponent.CCheckBox();
        lblOAPecentage = new com.see.truetransact.uicomponent.CLabel();
        chkHaltingPercentageValue = new com.see.truetransact.uicomponent.CCheckBox();
        mbrMain = new com.see.truetransact.uicomponent.CMenuBar();
        mnuProcess = new javax.swing.JMenu();
        mitNew = new javax.swing.JMenuItem();
        mitEdit = new javax.swing.JMenuItem();
        mitDelete = new javax.swing.JMenuItem();
        sptNew = new javax.swing.JSeparator();
        mitSave = new javax.swing.JMenuItem();
        mitCancel = new javax.swing.JMenuItem();
        sptSave = new javax.swing.JSeparator();
        mitPrint = new javax.swing.JMenuItem();
        mitClose = new javax.swing.JMenuItem();

        setResizable(false);
        btnView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_Summary.gif")));
        btnView.setToolTipText("Enquiry");
        btnView.setMinimumSize(new java.awt.Dimension(21, 21));
        btnView.setPreferredSize(new java.awt.Dimension(21, 21));
        btnView.setEnabled(false);
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnView);

        lblSpace5.setText("     ");
        tbrMisecllaniousDeductions.add(lblSpace5);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_NEW.gif")));
        btnNew.setToolTipText("New");
        btnNew.setEnabled(false);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnNew);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_EDIT.gif")));
        btnEdit.setToolTipText("Edit");
        btnEdit.setEnabled(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnEdit);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_DELETE.gif")));
        btnDelete.setToolTipText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnDelete);

        lblSpace2.setText("     ");
        tbrMisecllaniousDeductions.add(lblSpace2);

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_SAVE.gif")));
        btnSave.setToolTipText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnSave);

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_CANCEL.gif")));
        btnCancel.setToolTipText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnCancel);

        lblSpace3.setText("     ");
        tbrMisecllaniousDeductions.add(lblSpace3);

        btnAuthorize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_AUTHORIZE.gif")));
        btnAuthorize.setToolTipText("Close");
        btnAuthorize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAuthorizeActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnAuthorize);

        btnReject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_REJECT.gif")));
        btnReject.setToolTipText("Print");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnReject);

        btnException.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_EXCEPTION.gif")));
        btnException.setToolTipText("Print");
        btnException.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExceptionActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnException);

        lblSpace4.setText("     ");
        tbrMisecllaniousDeductions.add(lblSpace4);

        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_PRINT.gif")));
        btnPrint.setToolTipText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnPrint);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_CLOSE.gif")));
        btnClose.setToolTipText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        tbrMisecllaniousDeductions.add(btnClose);

        getContentPane().add(tbrMisecllaniousDeductions, java.awt.BorderLayout.NORTH);

        panStatus.setLayout(new java.awt.GridBagLayout());

        lblSpace1.setText(" Status :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        panStatus.add(lblSpace1, gridBagConstraints);

        lblStatus.setBorder(new javax.swing.border.EtchedBorder());
        lblStatus.setText("                      ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        panStatus.add(lblStatus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panStatus.add(lblMsg, gridBagConstraints);

        getContentPane().add(panStatus, java.awt.BorderLayout.SOUTH);

        panHaltingAllowanceInfo.setLayout(new java.awt.GridBagLayout());

        panHaltingAllowanceInfo.setMinimumSize(new java.awt.Dimension(650, 400));
        panHaltingAllowanceInfo.setPreferredSize(new java.awt.Dimension(650, 400));
        lblHaltingSLNO.setText("SL No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingSLNO, gridBagConstraints);

        lblHaltingSLNOValue.setMaximumSize(new java.awt.Dimension(150, 16));
        lblHaltingSLNOValue.setMinimumSize(new java.awt.Dimension(75, 16));
        lblHaltingSLNOValue.setPreferredSize(new java.awt.Dimension(75, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(lblHaltingSLNOValue, gridBagConstraints);

        lblHaltingDesignation.setText("Designation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingDesignation, gridBagConstraints);

        cboHaltingDesignationValue.setMinimumSize(new java.awt.Dimension(100, 21));
        cboHaltingDesignationValue.setPopupWidth(250);
        cboHaltingDesignationValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHaltingDesignationValueActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(cboHaltingDesignationValue, gridBagConstraints);

        lblHaltingFromDate.setText("From Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingFromDate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(tdtHaltingFromDateValue, gridBagConstraints);

        lblHaltingToDate.setText("To Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingToDate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(tdtHaltingToDateValue, gridBagConstraints);

        btnHaltingNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_NEW.gif")));
        btnHaltingNew.setPreferredSize(new java.awt.Dimension(30, 30));
        btnHaltingNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHaltingNewActionPerformed(evt);
            }
        });

        panHaltingButtons.add(btnHaltingNew);

        btnHaltingSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_SAVE.gif")));
        btnHaltingSave.setPreferredSize(new java.awt.Dimension(30, 30));
        btnHaltingSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHaltingSaveActionPerformed(evt);
            }
        });

        panHaltingButtons.add(btnHaltingSave);

        btnHaltingDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/see/truetransact/ui/images/TT_DELETE.gif")));
        btnHaltingDelete.setPreferredSize(new java.awt.Dimension(30, 30));
        btnHaltingDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHaltingDeleteActionPerformed(evt);
            }
        });

        panHaltingButtons.add(btnHaltingDelete);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panHaltingAllowanceInfo.add(panHaltingButtons, gridBagConstraints);

        txtHaltingPercentageValue.setMinimumSize(new java.awt.Dimension(100, 21));
        txtHaltingPercentageValue.setValidation(new CurrencyValidation(14,2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(txtHaltingPercentageValue, gridBagConstraints);

        lblHaltingPercentage.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHaltingPercentage.setText("Percentage");
        lblHaltingPercentage.setMaximumSize(new java.awt.Dimension(80, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingPercentage, gridBagConstraints);

        lblHaltingFixedAmt.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHaltingFixedAmt.setText("Fixed Amount");
        lblHaltingFixedAmt.setMaximumSize(new java.awt.Dimension(80, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingFixedAmt, gridBagConstraints);

        txtHaltingFixedAmtValue.setMinimumSize(new java.awt.Dimension(100, 21));
        txtHaltingFixedAmtValue.setValidation(new CurrencyValidation(14,2));
        txtHaltingFixedAmtValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHaltingFixedAmtValueActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(txtHaltingFixedAmtValue, gridBagConstraints);

        lblHaltingParameterBasedon.setText("Parameter Based on");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingParameterBasedon, gridBagConstraints);

        lblHaltingMaximumOf.setText("Maximum of");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingMaximumOf, gridBagConstraints);

        txtHaltingMaximumOfValue.setMinimumSize(new java.awt.Dimension(100, 21));
        txtHaltingMaximumOfValue.setValidation(new CurrencyValidation(14,2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(txtHaltingMaximumOfValue, gridBagConstraints);

        cboHaltingParameterBasedOnValue.setMinimumSize(new java.awt.Dimension(100, 21));
        cboHaltingParameterBasedOnValue.setPopupWidth(250);
        cboHaltingParameterBasedOnValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHaltingParameterBasedOnValueActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(cboHaltingParameterBasedOnValue, gridBagConstraints);

        lblHaltingSubParameter.setText("Sub Parameter");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingSubParameter, gridBagConstraints);

        cboHaltingAllowanceTypeValue.setMinimumSize(new java.awt.Dimension(100, 21));
        cboHaltingAllowanceTypeValue.setPopupWidth(250);
        cboHaltingAllowanceTypeValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboHaltingAllowanceTypeValueActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(cboHaltingAllowanceTypeValue, gridBagConstraints);

        lblHaltingllowanceType.setText("Allowance Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 4);
        panHaltingAllowanceInfo.add(lblHaltingllowanceType, gridBagConstraints);

        cboHaltingSubParameterValue.setMinimumSize(new java.awt.Dimension(100, 21));
        cboHaltingSubParameterValue.setPopupWidth(250);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingAllowanceInfo.add(cboHaltingSubParameterValue, gridBagConstraints);

        panHaltingDiem.setLayout(new java.awt.GridBagLayout());

        panHaltingDiem.setMinimumSize(new java.awt.Dimension(160, 18));
        panHaltingDiem.setPreferredSize(new java.awt.Dimension(160, 18));
        lblOAFixed.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOAFixed.setText("Fixed");
        lblOAFixed.setMaximumSize(new java.awt.Dimension(120, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 2);
        panHaltingDiem.add(lblOAFixed, gridBagConstraints);

        chkHaltingFixedValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkHaltingFixedValueActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingDiem.add(chkHaltingFixedValue, gridBagConstraints);

        lblOAPecentage.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOAPecentage.setText("Percentage");
        lblOAPecentage.setMaximumSize(new java.awt.Dimension(120, 18));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 4);
        panHaltingDiem.add(lblOAPecentage, gridBagConstraints);

        chkHaltingPercentageValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkHaltingPercentageValueActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 4, 1, 1);
        panHaltingDiem.add(chkHaltingPercentageValue, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 75, 1, 1);
        panHaltingAllowanceInfo.add(panHaltingDiem, gridBagConstraints);

        getContentPane().add(panHaltingAllowanceInfo, java.awt.BorderLayout.EAST);

        mnuProcess.setText("Process");
        mnuProcess.setName("mnuProcess");
        mitNew.setText("New");
        mitNew.setName("mitNew");
        mitNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitNewActionPerformed(evt);
            }
        });

        mnuProcess.add(mitNew);

        mitEdit.setText("Edit");
        mitEdit.setName("mitEdit");
        mitEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitEditActionPerformed(evt);
            }
        });

        mnuProcess.add(mitEdit);

        mitDelete.setText("Delete");
        mitDelete.setName("mitDelete");
        mitDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitDeleteActionPerformed(evt);
            }
        });

        mnuProcess.add(mitDelete);

        sptNew.setName("sptNew");
        mnuProcess.add(sptNew);

        mitSave.setText("Save");
        mitSave.setName("mitSave");
        mitSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitSaveActionPerformed(evt);
            }
        });

        mnuProcess.add(mitSave);

        mitCancel.setText("Cancel");
        mitCancel.setName("mitCancel");
        mitCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitCancelActionPerformed(evt);
            }
        });

        mnuProcess.add(mitCancel);

        sptSave.setName("sptSave");
        mnuProcess.add(sptSave);

        mitPrint.setText("Print");
        mitPrint.setName("mitPrint");
        mitPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitPrintActionPerformed(evt);
            }
        });

        mnuProcess.add(mitPrint);

        mitClose.setText("Close");
        mitClose.setName("mitClose");
        mitClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitCloseActionPerformed(evt);
            }
        });

        mnuProcess.add(mitClose);

        mbrMain.add(mnuProcess);

        setJMenuBar(mbrMain);

        pack();
    }//GEN-END:initComponents

    private void txtHaltingFixedAmtValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHaltingFixedAmtValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHaltingFixedAmtValueActionPerformed

    private void chkHaltingPercentageValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkHaltingPercentageValueActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_chkHaltingPercentageValueActionPerformed

    private void chkHaltingFixedValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkHaltingFixedValueActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_chkHaltingFixedValueActionPerformed

    private void cboHaltingAllowanceTypeValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHaltingAllowanceTypeValueActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cboHaltingAllowanceTypeValueActionPerformed

    private void cboHaltingDesignationValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHaltingDesignationValueActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboHaltingDesignationValueActionPerformed

    private void btnHaltingDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHaltingDeleteActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_btnHaltingDeleteActionPerformed

    private void btnHaltingSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHaltingSaveActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_btnHaltingSaveActionPerformed


    private void btnHaltingNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHaltingNewActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnHaltingNewActionPerformed

    private void cboHaltingParameterBasedOnValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboHaltingParameterBasedOnValueActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboHaltingParameterBasedOnValueActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_btnViewActionPerformed


    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // Add your handling code here:
       
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // Add your handling code here:
//        HashMap reportParamMap = new HashMap();
//        com.see.truetransact.clientutil.ttrintegration.LinkReport.getReports(getScreenID(), reportParamMap);
//        frameToPrint = this;
         PrinterJob job = PrinterJob.getPrinterJob();
         job.setPrintable(this);
         boolean ok = job.printDialog();
         if (ok) {
             try {
                  job.print();
             } catch (PrinterException ex) {
              /* The job did not successfully complete */
             }
         }
    }//GEN-LAST:event_btnPrintActionPerformed
    
    public int print(Graphics g, PageFormat pf, int page) throws
                                                        PrinterException {

        if (page > 0) { /* We have only one page, and 'page' is zero-based */
            return NO_SUCH_PAGE;
        }

        /* User (0,0) is typically outside the imageable area, so we must
         * translate by the X and Y values in the PageFormat to avoid clipping
         */
        Graphics2D g2d = (Graphics2D)g;
        g2d.translate(pf.getImageableX(), pf.getImageableY());

        /* Now print the window and its visible contents */
        this.printAll(g);

        /* tell the caller that this page is part of the printed document */
        return PAGE_EXISTS;
    }

//    public void actionPerformed(ActionEvent e) {
//         PrinterJob job = PrinterJob.getPrinterJob();
//         job.setPrintable(this);
//         boolean ok = job.printDialog();
//         if (ok) {
//             try {
//                  job.print();
//             } catch (PrinterException ex) {
//              /* The job did not successfully complete */
//             }
//         }
//    }

    
    private void btnExceptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExceptionActionPerformed
        // Add your handling code here:
//        updateAuthorizeStatus(ClientConstants.ACTIONTYPE_EXCEPTION);
    }//GEN-LAST:event_btnExceptionActionPerformed
 
    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // Add your handling code here:

    }//GEN-LAST:event_btnRejectActionPerformed
    private void updationNewButton(int selectRow) {

    }
    private void btnAuthorizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAuthorizeActionPerformed
        // Add your handling code here:

    }//GEN-LAST:event_btnAuthorizeActionPerformed

    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed

        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // Add your handling code here:

    }//GEN-LAST:event_btnDeleteActionPerformed
    
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // Add your handling code here:
        
    }//GEN-LAST:event_btnEditActionPerformed
    
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // Add your handling code here:

        
    }//GEN-LAST:event_btnNewActionPerformed
    private void allScreensDisable(boolean allDisable){
 
    }
    private void mitCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitCloseActionPerformed
        // Add your handling code here:
        
    }//GEN-LAST:event_mitCloseActionPerformed
    
    private void mitPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitPrintActionPerformed
        // Add your handling code here:
        
    }//GEN-LAST:event_mitPrintActionPerformed
    
    private void mitCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitCancelActionPerformed
        // Add your handling code here:
        
    }//GEN-LAST:event_mitCancelActionPerformed
    
    private void mitSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitSaveActionPerformed
        // Add your handling code here:
        
    }//GEN-LAST:event_mitSaveActionPerformed
    
    private void mitDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitDeleteActionPerformed
        // Add your handling code here:
        
    }//GEN-LAST:event_mitDeleteActionPerformed
    
    private void mitEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitEditActionPerformed
        // Add your handling code here:
        
    }//GEN-LAST:event_mitEditActionPerformed
    
    private void mitNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitNewActionPerformed
        // Add your handling code here:
       
    }//GEN-LAST:event_mitNewActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.see.truetransact.uicomponent.CButton btnAuthorize;
    private com.see.truetransact.uicomponent.CButton btnCancel;
    private com.see.truetransact.uicomponent.CButton btnClose;
    private com.see.truetransact.uicomponent.CButton btnDelete;
    private com.see.truetransact.uicomponent.CButton btnEdit;
    private com.see.truetransact.uicomponent.CButton btnException;
    private com.see.truetransact.uicomponent.CButton btnHaltingDelete;
    private com.see.truetransact.uicomponent.CButton btnHaltingNew;
    private com.see.truetransact.uicomponent.CButton btnHaltingSave;
    private com.see.truetransact.uicomponent.CButton btnNew;
    private com.see.truetransact.uicomponent.CButton btnPrint;
    private com.see.truetransact.uicomponent.CButton btnReject;
    private com.see.truetransact.uicomponent.CButton btnSave;
    private com.see.truetransact.uicomponent.CButton btnView;
    private com.see.truetransact.uicomponent.CComboBox cboHaltingAllowanceTypeValue;
    private com.see.truetransact.uicomponent.CComboBox cboHaltingDesignationValue;
    private com.see.truetransact.uicomponent.CComboBox cboHaltingParameterBasedOnValue;
    private com.see.truetransact.uicomponent.CComboBox cboHaltingSubParameterValue;
    private com.see.truetransact.uicomponent.CCheckBox chkHaltingFixedValue;
    private com.see.truetransact.uicomponent.CCheckBox chkHaltingPercentageValue;
    private com.see.truetransact.uicomponent.CLabel lblHaltingDesignation;
    private com.see.truetransact.uicomponent.CLabel lblHaltingFixedAmt;
    private com.see.truetransact.uicomponent.CLabel lblHaltingFromDate;
    private com.see.truetransact.uicomponent.CLabel lblHaltingMaximumOf;
    private com.see.truetransact.uicomponent.CLabel lblHaltingParameterBasedon;
    private com.see.truetransact.uicomponent.CLabel lblHaltingPercentage;
    private com.see.truetransact.uicomponent.CLabel lblHaltingSLNO;
    private com.see.truetransact.uicomponent.CLabel lblHaltingSLNOValue;
    private com.see.truetransact.uicomponent.CLabel lblHaltingSubParameter;
    private com.see.truetransact.uicomponent.CLabel lblHaltingToDate;
    private com.see.truetransact.uicomponent.CLabel lblHaltingllowanceType;
    private com.see.truetransact.uicomponent.CLabel lblMsg;
    private com.see.truetransact.uicomponent.CLabel lblOAFixed;
    private com.see.truetransact.uicomponent.CLabel lblOAPecentage;
    private com.see.truetransact.uicomponent.CLabel lblSpace1;
    private com.see.truetransact.uicomponent.CLabel lblSpace2;
    private com.see.truetransact.uicomponent.CLabel lblSpace3;
    private com.see.truetransact.uicomponent.CLabel lblSpace4;
    private com.see.truetransact.uicomponent.CLabel lblSpace5;
    private com.see.truetransact.uicomponent.CLabel lblStatus;
    private com.see.truetransact.uicomponent.CMenuBar mbrMain;
    private javax.swing.JMenuItem mitCancel;
    private javax.swing.JMenuItem mitClose;
    private javax.swing.JMenuItem mitDelete;
    private javax.swing.JMenuItem mitEdit;
    private javax.swing.JMenuItem mitNew;
    private javax.swing.JMenuItem mitPrint;
    private javax.swing.JMenuItem mitSave;
    private javax.swing.JMenu mnuProcess;
    private com.see.truetransact.uicomponent.CPanel panHaltingAllowanceInfo;
    private com.see.truetransact.uicomponent.CPanel panHaltingButtons;
    private com.see.truetransact.uicomponent.CPanel panHaltingDiem;
    private com.see.truetransact.uicomponent.CPanel panStatus;
    private com.see.truetransact.uicomponent.CButtonGroup rdgHRAPayable;
    private com.see.truetransact.uicomponent.CButtonGroup rdgStagnationIncrement;
    private javax.swing.JSeparator sptNew;
    private javax.swing.JSeparator sptSave;
    private javax.swing.JToolBar tbrMisecllaniousDeductions;
    private com.see.truetransact.uicomponent.CDateField tdtHaltingFromDateValue;
    private com.see.truetransact.uicomponent.CDateField tdtHaltingToDateValue;
    private com.see.truetransact.uicomponent.CTextField txtHaltingFixedAmtValue;
    private com.see.truetransact.uicomponent.CTextField txtHaltingMaximumOfValue;
    private com.see.truetransact.uicomponent.CTextField txtHaltingPercentageValue;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
//        SalaryStructureUI lui = new SalaryStructureUI();
//        ProxyParameters.BRANCH_ID = "0001";
        PrintTemplateUI j = new PrintTemplateUI();
        j.addWindowListener(new WindowAdapter() {
           public void windowClosing(WindowEvent e) {System.exit(0);}
        });
        j.setPreferredSize(new Dimension(615,600));
        j.pack();
        j.setVisible(true);
    }    
    
    
}

